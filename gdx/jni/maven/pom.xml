<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.badlogicgames.gdx</groupId>
        <artifactId>gdx-parent</artifactId>
        <version>1.3.2-SNAPSHOT</version>
        <relativePath>../../..</relativePath>
    </parent>
    
    <artifactId>gdx-platform</artifactId>
    <packaging>jar</packaging>
    <name>libGDX Native Libraries</name>
    
    <properties>
        <base.url>http://libgdx.badlogicgames.com/nightlies/dist</base.url>
    </properties>
    
    <dependencies>
    </dependencies>
    
    <build>
        <sourceDirectory>src</sourceDirectory>
        
        <plugins>
            <!-- first download an unpack the native libraries -->
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>maven-download-plugin</artifactId>
                <version>1.1.0</version>
                <executions>
                    <execution>
                        <id>desktop</id>
                        <phase>process-resources</phase>
                        <goals><goal>wget</goal></goals>
                        <configuration>
                            <cacheDirectory>${project.build.directory}/download-cache</cacheDirectory>
                            <url>${base.url}/gdx-natives.jar</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/desktop</outputDirectory>
                        </configuration>
                    </execution>
                    

                    <execution>
                        <id>x86-gdx</id>
                        <phase>process-resources</phase>
                        <goals><goal>wget</goal></goals>
                        <configuration>
                            <cacheDirectory>${project.build.directory}/download-cache/x86</cacheDirectory>
                            <url>${base.url}/x86/libgdx.so</url>
                            <outputDirectory>${project.build.directory}/x86</outputDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>armeabi-gdx</id>
                        <phase>process-resources</phase>
                        <goals><goal>wget</goal></goals>
                        <configuration>
                            <cacheDirectory>${project.build.directory}/download-cache/armeabi</cacheDirectory>
                            <url>${base.url}/armeabi/libgdx.so</url>
                            <outputDirectory>${project.build.directory}/armeabi</outputDirectory>
                        </configuration>
                    </execution>
                    
                    <execution>
                        <id>armeabi-v7a-gdx</id>
                        <phase>process-resources</phase>
                        <goals><goal>wget</goal></goals>
                        <configuration>
                            <cacheDirectory>${project.build.directory}/download-cache/armeabi-v7a</cacheDirectory>
                            <url>${base.url}/armeabi-v7a/libgdx.so</url>
                            <outputDirectory>${project.build.directory}/armeabi-v7a</outputDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>ios-gdx</id>
                        <phase>process-resources</phase>
                        <goals><goal>wget</goal></goals>
                        <configuration>
                            <cacheDirectory>${project.build.directory}/download-cache/ios</cacheDirectory>
                            <url>${base.url}/ios/libgdx.a</url>
                            <outputDirectory>${project.build.directory}/ios</outputDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>ios-objectal</id>
                        <phase>process-resources</phase>
                        <goals><goal>wget</goal></goals>
                        <configuration>
                            <cacheDirectory>${project.build.directory}/download-cache/ios</cacheDirectory>
                            <url>${base.url}/ios/libObjectAL.a</url>
                            <outputDirectory>${project.build.directory}/ios</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- if we have pre-built versions, replace the downloaded versions with those -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-local-desktop</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/linux32</directory></resource>
                                <resource><directory>${basedir}/../../libs/linux64</directory></resource>
                                <resource><directory>${basedir}/../../libs/macosx32</directory></resource>
                                <resource><directory>${basedir}/../../libs/macosx64</directory></resource>
                                <resource><directory>${basedir}/../../libs/windows32</directory></resource>
                                <resource><directory>${basedir}/../../libs/windows64</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/desktop</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                     <execution>
                        <id>copy-local-x86</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/x86</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/x86</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-local-armeabi</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/armeabi</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/armeabi</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-local-armeabi-v7a</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/armeabi-v7a</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/armeabi-v7a</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-local-ios</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/ios32</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/ios</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- finally package everything up into jar files -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>desktop.xml</descriptor>
                        <descriptor>x86.xml</descriptor>
                        <descriptor>armeabi.xml</descriptor>
                        <descriptor>armeabi-v7a.xml</descriptor>
                        <descriptor>ios.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>