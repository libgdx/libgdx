/*DO NOT EDIT THIS FILE - it is machine generated*/

package com.badlogic.gdx.backends.iosrobovm.custom;

/*<imports>*/
import org.robovm.objc.*;
import org.robovm.objc.annotation.*;
import org.robovm.rt.bro.annotation.*;
import org.robovm.rt.bro.ptr.*;
import org.robovm.apple.foundation.*;

/*</imports>*/
/*<javadoc>*/
/** DO NOT EDIT THIS FILE - it is machine generated
 * @since Available in iOS 2.0 and later.
 * @deprecated Deprecated in iOS 5.0. */
@Deprecated
/* </javadoc> */
/* <annotations> */
@Library("UIKit")
@NativeClass
public class /* </visibility> */
/* <name> */
UIAccelerometer extends /* </name> */
/* <extends> */
	NSObject {

	/* </extends> */
	/* <implements> */
	/* </implements> */
	/** DO NOT EDIT THIS FILE - it is machine generated */
	public static class UIAccelerometerPtr extends Ptr<UIAccelerometer, UIAccelerometerPtr> {
	}

	/* </ptr> */
	/* <bind> */
	static {
		ObjCRuntime.bind(UIAccelerometer.class);
	}

	/* </bind> */
	/* <constants> */
	/* </constants> */
	/* <constructors> */
	public UIAccelerometer () {
	}

	protected UIAccelerometer (SkipInit skipInit) {
		super(skipInit);
	}

	/* </constructors> */
	/* <properties> */
	@Property(selector = "updateInterval")
	public native double getUpdateInterval ();

	@Property(selector = "setUpdateInterval:")
	public native void setUpdateInterval (double v);

	@Property(selector = "delegate")
	public native UIAccelerometerDelegate getDelegate ();

	@Property(selector = "setDelegate:", strongRef = true)
	public native void setDelegate (UIAccelerometerDelegate v);

	/* </properties> */
	/* <members> */
	/* </members> */
	/* <methods> */
	@Method(selector = "sharedAccelerometer")
	public static native UIAccelerometer getSharedAccelerometer ();
	/* </methods> */
}
