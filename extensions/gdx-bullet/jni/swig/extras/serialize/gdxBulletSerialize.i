%feature("director") btBulletWorldImporter;
%feature("nodirector") btBulletWorldImporter::createMultiSphereShape;

%rename(getNameForPointerConst) btWorldImporter::getNameForPointer(void const *) const;
%{
#include <BulletWorldImporter/btWorldImporter.h>
%}

%rename(atConst) btAlignedObjectArray< char * >::at(int) const;
%rename(operatorSubscriptConst) btAlignedObjectArray< char * >::operator [](int) const;
%template(btStringArray) btAlignedObjectArray<char*>;

%ignore btWorldImporter::getNameForPointer(const void* ptr);

%include "BulletWorldImporter/btWorldImporter.h"

%extend btWorldImporter {
	const char*	getNameForPointer(unsigned long cPtr) {
		return $self->getNameForPointer((void*)cPtr);
	}
};

%{
#include <BulletWorldImporter/btBulletWorldImporter.h>
%}

%ignore btBulletWorldImporter::loadFileFromMemory(char *memoryBuffer, int len);

%feature("nodirector") btWorldImporter::createRigidBody;
%feature("nodirector") btWorldImporter::createCollisionObject;
%feature("nodirector") btWorldImporter::createPlaneShape;
%feature("nodirector") btWorldImporter::createBoxShape;
%feature("nodirector") btWorldImporter::createSphereShape;
%feature("nodirector") btWorldImporter::createCapsuleShapeX;
%feature("nodirector") btWorldImporter::createCapsuleShapeY;
%feature("nodirector") btWorldImporter::createCapsuleShapeZ;
%feature("nodirector") btWorldImporter::createCylinderShapeX;
%feature("nodirector") btWorldImporter::createCylinderShapeY;
%feature("nodirector") btWorldImporter::createCylinderShapeZ;
%feature("nodirector") btWorldImporter::createConeShapeX;
%feature("nodirector") btWorldImporter::createConeShapeY;
%feature("nodirector") btWorldImporter::createConeShapeZ;
%feature("nodirector") btWorldImporter::createTriangleMeshContainer;
%feature("nodirector") btWorldImporter::createBvhTriangleMeshShape;
%feature("nodirector") btWorldImporter::createConvexTriangleMeshShape;
%feature("nodirector") btWorldImporter::createGimpactShape;
%feature("nodirector") btWorldImporter::createStridingMeshInterfaceData;
%feature("nodirector") btWorldImporter::createConvexHullShape;
%feature("nodirector") btWorldImporter::createCompoundShape;
%feature("nodirector") btWorldImporter::createScaledTrangleMeshShape;
%feature("nodirector") btWorldImporter::createMultiSphereShape;
%feature("nodirector") btWorldImporter::createMeshInterface;
%feature("nodirector") btWorldImporter::createOptimizedBvh;
%feature("nodirector") btWorldImporter::createTriangleInfoMap;
%feature("nodirector") btWorldImporter::createPoint2PointConstraint;
%feature("nodirector") btWorldImporter::createHingeConstraint;
%feature("nodirector") btWorldImporter::createConeTwistConstraint;
%feature("nodirector") btWorldImporter::createGeneric6DofConstraint;
%feature("nodirector") btWorldImporter::createGeneric6DofSpringConstraint;
%feature("nodirector") btWorldImporter::createGeneric6DofSpring2Constraint;
%feature("nodirector") btWorldImporter::createSliderConstraint;
%feature("nodirector") btWorldImporter::createGearConstraint;

%include "BulletWorldImporter/btBulletWorldImporter.h"

%extend btBulletWorldImporter {
	bool loadFileFromMemory(unsigned char *memoryBuffer, int len) {
		return $self->loadFileFromMemory((char *)memoryBuffer, len);
	}
};

%typemap(javacode) btBulletWorldImporter %{
	public boolean loadFile(final com.badlogic.gdx.files.FileHandle fileHandle) {
		final int len = (int)fileHandle.length();
		if (len <= 0)
			throw new com.badlogic.gdx.utils.GdxRuntimeException("Incorrect file specified");
		java.nio.ByteBuffer buff = com.badlogic.gdx.utils.BufferUtils.newUnsafeByteBuffer(len);
		buff.put(fileHandle.readBytes());
		buff.position(0);
		boolean result = loadFileFromMemory(buff, len);
		com.badlogic.gdx.utils.BufferUtils.disposeUnsafeByteBuffer(buff);
		return result;
	}
%}


%{
#include <BulletFileLoader/bFile.h>
%}
%include "BulletFileLoader/bFile.h"

%{
#include <BulletFileLoader/bCommon.h>
%}
%include "BulletFileLoader/bCommon.h"


%{
#include <BulletFileLoader/btBulletFile.h>
%}
%include "BulletFileLoader/btBulletFile.h"

%{
#include <BulletFileLoader/bDNA.h>
%}
%include "BulletFileLoader/bDNA.h"

%{
#include <BulletFileLoader/bDefines.h>
%}
//%include "BulletFileLoader/bDefines.h"

%{
#include <BulletFileLoader/bChunk.h>
%}
%include "BulletFileLoader/bChunk.h"

%{
#include <BulletFileLoader/autogenerated/bullet.h>
%}
%include "BulletFileLoader/autogenerated/bullet.h"

%{
using namespace bParse;
%}
