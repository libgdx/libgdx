/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet.collision;

import com.badlogic.gdx.physics.bullet.BulletBase;
import com.badlogic.gdx.physics.bullet.linearmath.*;
import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;
import com.badlogic.gdx.utils.Pool;

public class CollisionJNI {
  public final static native void delete_btDiscreteCollisionDetectorInterface_Result(long jarg1);
  public final static native void btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersA(long jarg1, btDiscreteCollisionDetectorInterface.Result jarg1_, int jarg2, int jarg3);
  public final static native void btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersB(long jarg1, btDiscreteCollisionDetectorInterface.Result jarg1_, int jarg2, int jarg3);
  public final static native void btDiscreteCollisionDetectorInterface_Result_addContactPoint(long jarg1, btDiscreteCollisionDetectorInterface.Result jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native long new_btDiscreteCollisionDetectorInterface_ClosestPointInput();
  public final static native void btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_set(long jarg1, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_get(long jarg1, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg1_);
  public final static native void btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_set(long jarg1, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_get(long jarg1, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg1_);
  public final static native void btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_set(long jarg1, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg1_, float jarg2);
  public final static native float btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_get(long jarg1, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg1_);
  public final static native void delete_btDiscreteCollisionDetectorInterface_ClosestPointInput(long jarg1);
  public final static native void delete_btDiscreteCollisionDetectorInterface(long jarg1);
  public final static native void btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_0(long jarg1, btDiscreteCollisionDetectorInterface jarg1_, long jarg2, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg2_, long jarg3, btDiscreteCollisionDetectorInterface.Result jarg3_, long jarg4, btIDebugDraw jarg4_, boolean jarg5);
  public final static native void btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_1(long jarg1, btDiscreteCollisionDetectorInterface jarg1_, long jarg2, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg2_, long jarg3, btDiscreteCollisionDetectorInterface.Result jarg3_, long jarg4, btIDebugDraw jarg4_);
  public final static native void btStorageResult_normalOnSurfaceB_set(long jarg1, btStorageResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btStorageResult_normalOnSurfaceB_get(long jarg1, btStorageResult jarg1_);
  public final static native void btStorageResult_closestPointInB_set(long jarg1, btStorageResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btStorageResult_closestPointInB_get(long jarg1, btStorageResult jarg1_);
  public final static native void btStorageResult_distance_set(long jarg1, btStorageResult jarg1_, float jarg2);
  public final static native float btStorageResult_distance_get(long jarg1, btStorageResult jarg1_);
  public final static native void delete_btStorageResult(long jarg1);
  public final static native void btBroadphaseProxy_clientObject_set(long jarg1, btBroadphaseProxy jarg1_, long jarg2);
  public final static native long btBroadphaseProxy_clientObject_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_collisionFilterGroup_set(long jarg1, btBroadphaseProxy jarg1_, short jarg2);
  public final static native short btBroadphaseProxy_collisionFilterGroup_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_collisionFilterMask_set(long jarg1, btBroadphaseProxy jarg1_, short jarg2);
  public final static native short btBroadphaseProxy_collisionFilterMask_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_multiSapParentProxy_set(long jarg1, btBroadphaseProxy jarg1_, long jarg2);
  public final static native long btBroadphaseProxy_multiSapParentProxy_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_uniqueId_set(long jarg1, btBroadphaseProxy jarg1_, int jarg2);
  public final static native int btBroadphaseProxy_uniqueId_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_aabbMin_set(long jarg1, btBroadphaseProxy jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btBroadphaseProxy_aabbMin_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_aabbMax_set(long jarg1, btBroadphaseProxy jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btBroadphaseProxy_aabbMax_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native int btBroadphaseProxy_getUid(long jarg1, btBroadphaseProxy jarg1_);
  public final static native long new_btBroadphaseProxy__SWIG_0();
  public final static native long new_btBroadphaseProxy__SWIG_1(Vector3 jarg1, Vector3 jarg2, long jarg3, short jarg4, short jarg5, long jarg6);
  public final static native long new_btBroadphaseProxy__SWIG_2(Vector3 jarg1, Vector3 jarg2, long jarg3, short jarg4, short jarg5);
  public final static native boolean btBroadphaseProxy_isPolyhedral(int jarg1);
  public final static native boolean btBroadphaseProxy_isConvex(int jarg1);
  public final static native boolean btBroadphaseProxy_isNonMoving(int jarg1);
  public final static native boolean btBroadphaseProxy_isConcave(int jarg1);
  public final static native boolean btBroadphaseProxy_isCompound(int jarg1);
  public final static native boolean btBroadphaseProxy_isSoftBody(int jarg1);
  public final static native boolean btBroadphaseProxy_isInfinite(int jarg1);
  public final static native boolean btBroadphaseProxy_isConvex2d(int jarg1);
  public final static native void delete_btBroadphaseProxy(long jarg1);
  public final static native long new_btBroadphasePair__SWIG_0();
  public final static native long new_btBroadphasePair__SWIG_1(btBroadphasePair jarg1);
  public final static native long new_btBroadphasePair__SWIG_2(btBroadphaseProxy jarg1, btBroadphaseProxy jarg2);
  public final static native void btBroadphasePair_pProxy0_set(long jarg1, btBroadphasePair jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native long btBroadphasePair_pProxy0_get(long jarg1, btBroadphasePair jarg1_);
  public final static native void btBroadphasePair_pProxy1_set(long jarg1, btBroadphasePair jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native long btBroadphasePair_pProxy1_get(long jarg1, btBroadphasePair jarg1_);
  public final static native void btBroadphasePair_algorithm_set(long jarg1, btBroadphasePair jarg1_, long jarg2, btCollisionAlgorithm jarg2_);
  public final static native long btBroadphasePair_algorithm_get(long jarg1, btBroadphasePair jarg1_);
  public final static native void btBroadphasePair_internalInfo1_set(long jarg1, btBroadphasePair jarg1_, long jarg2);
  public final static native long btBroadphasePair_internalInfo1_get(long jarg1, btBroadphasePair jarg1_);
  public final static native void btBroadphasePair_internalTmpValue_set(long jarg1, btBroadphasePair jarg1_, int jarg2);
  public final static native int btBroadphasePair_internalTmpValue_get(long jarg1, btBroadphasePair jarg1_);
  public final static native void delete_btBroadphasePair(long jarg1);
  public final static native long new_btBroadphasePairSortPredicate();
  public final static native void delete_btBroadphasePairSortPredicate(long jarg1);
  public final static native void delete_btBroadphaseAabbCallback(long jarg1);
  public final static native boolean btBroadphaseAabbCallback_process(long jarg1, btBroadphaseAabbCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native long new_btBroadphaseAabbCallback();
  public final static native void btBroadphaseAabbCallback_director_connect(btBroadphaseAabbCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btBroadphaseAabbCallback_change_ownership(btBroadphaseAabbCallback obj, long cptr, boolean take_or_release);
  public final static native void btBroadphaseRayCallback_rayDirectionInverse_set(long jarg1, btBroadphaseRayCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btBroadphaseRayCallback_rayDirectionInverse_get(long jarg1, btBroadphaseRayCallback jarg1_);
  public final static native void btBroadphaseRayCallback_signs_set(long jarg1, btBroadphaseRayCallback jarg1_, long[] jarg2);
  public final static native long[] btBroadphaseRayCallback_signs_get(long jarg1, btBroadphaseRayCallback jarg1_);
  public final static native void btBroadphaseRayCallback_lambda_max_set(long jarg1, btBroadphaseRayCallback jarg1_, float jarg2);
  public final static native float btBroadphaseRayCallback_lambda_max_get(long jarg1, btBroadphaseRayCallback jarg1_);
  public final static native void delete_btBroadphaseRayCallback(long jarg1);
  public final static native long new_btBroadphaseRayCallback();
  public final static native void btBroadphaseRayCallback_director_connect(btBroadphaseRayCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btBroadphaseRayCallback_change_ownership(btBroadphaseRayCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_btBroadphaseInterface(long jarg1);
  public final static native long btBroadphaseInterface_createProxy(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, int jarg4, long jarg5, short jarg6, short jarg7, long jarg8, btDispatcher jarg8_, long jarg9);
  public final static native void btBroadphaseInterface_destroyProxy(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native void btBroadphaseInterface_setAabb(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4, long jarg5, btDispatcher jarg5_);
  public final static native void btBroadphaseInterface_getAabb(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btBroadphaseInterface_rayTest__SWIG_0(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btBroadphaseInterface_rayTest__SWIG_1(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btBroadphaseInterface_rayTest__SWIG_2(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native void btBroadphaseInterface_aabbTest(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseAabbCallback jarg4_);
  public final static native void btBroadphaseInterface_calculateOverlappingPairs(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native long btBroadphaseInterface_getOverlappingPairCache__SWIG_0(long jarg1, btBroadphaseInterface jarg1_);
  public final static native void btBroadphaseInterface_getBroadphaseAabb(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btBroadphaseInterface_resetPool(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native void btBroadphaseInterface_printStats(long jarg1, btBroadphaseInterface jarg1_);
  public final static native void btQuantizedBvhNode_quantizedAabbMin_set(long jarg1, btQuantizedBvhNode jarg1_, int[] jarg2);
  public final static native int[] btQuantizedBvhNode_quantizedAabbMin_get(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native void btQuantizedBvhNode_quantizedAabbMax_set(long jarg1, btQuantizedBvhNode jarg1_, int[] jarg2);
  public final static native int[] btQuantizedBvhNode_quantizedAabbMax_get(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native void btQuantizedBvhNode_escapeIndexOrTriangleIndex_set(long jarg1, btQuantizedBvhNode jarg1_, int jarg2);
  public final static native int btQuantizedBvhNode_escapeIndexOrTriangleIndex_get(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native boolean btQuantizedBvhNode_isLeafNode(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native int btQuantizedBvhNode_getEscapeIndex(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native int btQuantizedBvhNode_getTriangleIndex(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native int btQuantizedBvhNode_getPartId(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native long new_btQuantizedBvhNode();
  public final static native void delete_btQuantizedBvhNode(long jarg1);
  public final static native void btOptimizedBvhNode_aabbMinOrg_set(long jarg1, btOptimizedBvhNode jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btOptimizedBvhNode_aabbMinOrg_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_aabbMaxOrg_set(long jarg1, btOptimizedBvhNode jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btOptimizedBvhNode_aabbMaxOrg_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_escapeIndex_set(long jarg1, btOptimizedBvhNode jarg1_, int jarg2);
  public final static native int btOptimizedBvhNode_escapeIndex_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_subPart_set(long jarg1, btOptimizedBvhNode jarg1_, int jarg2);
  public final static native int btOptimizedBvhNode_subPart_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_triangleIndex_set(long jarg1, btOptimizedBvhNode jarg1_, int jarg2);
  public final static native int btOptimizedBvhNode_triangleIndex_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_padding_set(long jarg1, btOptimizedBvhNode jarg1_, String jarg2);
  public final static native String btOptimizedBvhNode_padding_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native long new_btOptimizedBvhNode();
  public final static native void delete_btOptimizedBvhNode(long jarg1);
  public final static native void btBvhSubtreeInfo_quantizedAabbMin_set(long jarg1, btBvhSubtreeInfo jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfo_quantizedAabbMin_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native void btBvhSubtreeInfo_quantizedAabbMax_set(long jarg1, btBvhSubtreeInfo jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfo_quantizedAabbMax_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native void btBvhSubtreeInfo_rootNodeIndex_set(long jarg1, btBvhSubtreeInfo jarg1_, int jarg2);
  public final static native int btBvhSubtreeInfo_rootNodeIndex_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native void btBvhSubtreeInfo_subtreeSize_set(long jarg1, btBvhSubtreeInfo jarg1_, int jarg2);
  public final static native int btBvhSubtreeInfo_subtreeSize_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native void btBvhSubtreeInfo_padding_set(long jarg1, btBvhSubtreeInfo jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfo_padding_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native long new_btBvhSubtreeInfo();
  public final static native void btBvhSubtreeInfo_setAabbFromQuantizeNode(long jarg1, btBvhSubtreeInfo jarg1_, long jarg2, btQuantizedBvhNode jarg2_);
  public final static native void delete_btBvhSubtreeInfo(long jarg1);
  public final static native void delete_btNodeOverlapCallback(long jarg1);
  public final static native void btNodeOverlapCallback_processNode(long jarg1, btNodeOverlapCallback jarg1_, int jarg2, int jarg3);
  public final static native long new_btNodeOverlapCallback();
  public final static native void btNodeOverlapCallback_director_connect(btNodeOverlapCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btNodeOverlapCallback_change_ownership(btNodeOverlapCallback obj, long cptr, boolean take_or_release);
  public final static native long new_btQuantizedBvh();
  public final static native void delete_btQuantizedBvh(long jarg1);
  public final static native void btQuantizedBvh_setQuantizationValues__SWIG_0(long jarg1, btQuantizedBvh jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native void btQuantizedBvh_setQuantizationValues__SWIG_1(long jarg1, btQuantizedBvh jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native long btQuantizedBvh_getLeafNodeArray(long jarg1, btQuantizedBvh jarg1_);
  public final static native void btQuantizedBvh_buildInternal(long jarg1, btQuantizedBvh jarg1_);
  public final static native void btQuantizedBvh_reportAabbOverlappingNodex(long jarg1, btQuantizedBvh jarg1_, long jarg2, btNodeOverlapCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btQuantizedBvh_reportRayOverlappingNodex(long jarg1, btQuantizedBvh jarg1_, long jarg2, btNodeOverlapCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btQuantizedBvh_reportBoxCastOverlappingNodex(long jarg1, btQuantizedBvh jarg1_, long jarg2, btNodeOverlapCallback jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native void btQuantizedBvh_quantize(long jarg1, btQuantizedBvh jarg1_, java.nio.IntBuffer jarg2, Vector3 jarg3, int jarg4);
  public final static native void btQuantizedBvh_quantizeWithClamp(long jarg1, btQuantizedBvh jarg1_, java.nio.IntBuffer jarg2, Vector3 jarg3, int jarg4);
  public final static native Vector3 btQuantizedBvh_unQuantize(long jarg1, btQuantizedBvh jarg1_, java.nio.IntBuffer jarg2);
  public final static native void btQuantizedBvh_setTraversalMode(long jarg1, btQuantizedBvh jarg1_, int jarg2);
  public final static native long btQuantizedBvh_getQuantizedNodeArray(long jarg1, btQuantizedBvh jarg1_);
  public final static native long btQuantizedBvh_getSubtreeInfoArray(long jarg1, btQuantizedBvh jarg1_);
  public final static native long btQuantizedBvh_calculateSerializeBufferSize(long jarg1, btQuantizedBvh jarg1_);
  public final static native boolean btQuantizedBvh_serialize__SWIG_0(long jarg1, btQuantizedBvh jarg1_, long jarg2, long jarg3, boolean jarg4);
  public final static native long btQuantizedBvh_deSerializeInPlace(long jarg1, long jarg2, boolean jarg3);
  public final static native long btQuantizedBvh_getAlignmentSerializationPadding();
  public final static native int btQuantizedBvh_calculateSerializeBufferSizeNew(long jarg1, btQuantizedBvh jarg1_);
  public final static native String btQuantizedBvh_serialize__SWIG_1(long jarg1, btQuantizedBvh jarg1_, long jarg2, long jarg3);
  public final static native void btQuantizedBvh_deSerializeFloat(long jarg1, btQuantizedBvh jarg1_, long jarg2, btQuantizedBvhFloatData jarg2_);
  public final static native void btQuantizedBvh_deSerializeDouble(long jarg1, btQuantizedBvh jarg1_, long jarg2, btQuantizedBvhDoubleData jarg2_);
  public final static native boolean btQuantizedBvh_isQuantized(long jarg1, btQuantizedBvh jarg1_);
  public final static native void btBvhSubtreeInfoData_rootNodeIndex_set(long jarg1, btBvhSubtreeInfoData jarg1_, int jarg2);
  public final static native int btBvhSubtreeInfoData_rootNodeIndex_get(long jarg1, btBvhSubtreeInfoData jarg1_);
  public final static native void btBvhSubtreeInfoData_subtreeSize_set(long jarg1, btBvhSubtreeInfoData jarg1_, int jarg2);
  public final static native int btBvhSubtreeInfoData_subtreeSize_get(long jarg1, btBvhSubtreeInfoData jarg1_);
  public final static native void btBvhSubtreeInfoData_quantizedAabbMin_set(long jarg1, btBvhSubtreeInfoData jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfoData_quantizedAabbMin_get(long jarg1, btBvhSubtreeInfoData jarg1_);
  public final static native void btBvhSubtreeInfoData_quantizedAabbMax_set(long jarg1, btBvhSubtreeInfoData jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfoData_quantizedAabbMax_get(long jarg1, btBvhSubtreeInfoData jarg1_);
  public final static native long new_btBvhSubtreeInfoData();
  public final static native void delete_btBvhSubtreeInfoData(long jarg1);
  public final static native void btOptimizedBvhNodeFloatData_aabbMinOrg_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btOptimizedBvhNodeFloatData_aabbMinOrg_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_aabbMaxOrg_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btOptimizedBvhNodeFloatData_aabbMaxOrg_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_escapeIndex_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeFloatData_escapeIndex_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_subPart_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeFloatData_subPart_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_triangleIndex_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeFloatData_triangleIndex_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_pad_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, String jarg2);
  public final static native String btOptimizedBvhNodeFloatData_pad_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native long new_btOptimizedBvhNodeFloatData();
  public final static native void delete_btOptimizedBvhNodeFloatData(long jarg1);
  public final static native void btOptimizedBvhNodeDoubleData_aabbMinOrg_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btOptimizedBvhNodeDoubleData_aabbMinOrg_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_aabbMaxOrg_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btOptimizedBvhNodeDoubleData_aabbMaxOrg_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_escapeIndex_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeDoubleData_escapeIndex_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_subPart_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeDoubleData_subPart_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_triangleIndex_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeDoubleData_triangleIndex_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_pad_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, String jarg2);
  public final static native String btOptimizedBvhNodeDoubleData_pad_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native long new_btOptimizedBvhNodeDoubleData();
  public final static native void delete_btOptimizedBvhNodeDoubleData(long jarg1);
  public final static native void btQuantizedBvhNodeData_quantizedAabbMin_set(long jarg1, btQuantizedBvhNodeData jarg1_, int[] jarg2);
  public final static native int[] btQuantizedBvhNodeData_quantizedAabbMin_get(long jarg1, btQuantizedBvhNodeData jarg1_);
  public final static native void btQuantizedBvhNodeData_quantizedAabbMax_set(long jarg1, btQuantizedBvhNodeData jarg1_, int[] jarg2);
  public final static native int[] btQuantizedBvhNodeData_quantizedAabbMax_get(long jarg1, btQuantizedBvhNodeData jarg1_);
  public final static native void btQuantizedBvhNodeData_escapeIndexOrTriangleIndex_set(long jarg1, btQuantizedBvhNodeData jarg1_, int jarg2);
  public final static native int btQuantizedBvhNodeData_escapeIndexOrTriangleIndex_get(long jarg1, btQuantizedBvhNodeData jarg1_);
  public final static native long new_btQuantizedBvhNodeData();
  public final static native void delete_btQuantizedBvhNodeData(long jarg1);
  public final static native void btQuantizedBvhFloatData_bvhAabbMin_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btQuantizedBvhFloatData_bvhAabbMin_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_bvhAabbMax_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btQuantizedBvhFloatData_bvhAabbMax_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_bvhQuantization_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btQuantizedBvhFloatData_bvhQuantization_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_curNodeIndex_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_curNodeIndex_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_useQuantization_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_useQuantization_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_numContiguousLeafNodes_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_numContiguousLeafNodes_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_numQuantizedContiguousNodes_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_numQuantizedContiguousNodes_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_contiguousNodesPtr_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btOptimizedBvhNodeFloatData jarg2_);
  public final static native long btQuantizedBvhFloatData_contiguousNodesPtr_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_quantizedContiguousNodesPtr_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btQuantizedBvhNodeData jarg2_);
  public final static native long btQuantizedBvhFloatData_quantizedContiguousNodesPtr_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_subTreeInfoPtr_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btBvhSubtreeInfoData jarg2_);
  public final static native long btQuantizedBvhFloatData_subTreeInfoPtr_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_traversalMode_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_traversalMode_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_numSubtreeHeaders_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_numSubtreeHeaders_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native long new_btQuantizedBvhFloatData();
  public final static native void delete_btQuantizedBvhFloatData(long jarg1);
  public final static native void btQuantizedBvhDoubleData_bvhAabbMin_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btQuantizedBvhDoubleData_bvhAabbMin_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_bvhAabbMax_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btQuantizedBvhDoubleData_bvhAabbMax_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_bvhQuantization_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btQuantizedBvhDoubleData_bvhQuantization_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_curNodeIndex_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_curNodeIndex_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_useQuantization_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_useQuantization_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_numContiguousLeafNodes_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_numContiguousLeafNodes_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_numQuantizedContiguousNodes_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_numQuantizedContiguousNodes_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_contiguousNodesPtr_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btOptimizedBvhNodeDoubleData jarg2_);
  public final static native long btQuantizedBvhDoubleData_contiguousNodesPtr_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btQuantizedBvhNodeData jarg2_);
  public final static native long btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_traversalMode_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_traversalMode_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_numSubtreeHeaders_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_numSubtreeHeaders_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_subTreeInfoPtr_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btBvhSubtreeInfoData jarg2_);
  public final static native long btQuantizedBvhDoubleData_subTreeInfoPtr_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native long new_btQuantizedBvhDoubleData();
  public final static native void delete_btQuantizedBvhDoubleData(long jarg1);
  public final static native void btSimpleBroadphaseProxy_nextFree_set(long jarg1, btSimpleBroadphaseProxy jarg1_, int jarg2);
  public final static native int btSimpleBroadphaseProxy_nextFree_get(long jarg1, btSimpleBroadphaseProxy jarg1_);
  public final static native long new_btSimpleBroadphaseProxy__SWIG_0();
  public final static native long new_btSimpleBroadphaseProxy__SWIG_1(Vector3 jarg1, Vector3 jarg2, int jarg3, long jarg4, short jarg5, short jarg6, long jarg7);
  public final static native void btSimpleBroadphaseProxy_SetNextFree(long jarg1, btSimpleBroadphaseProxy jarg1_, int jarg2);
  public final static native int btSimpleBroadphaseProxy_GetNextFree(long jarg1, btSimpleBroadphaseProxy jarg1_);
  public final static native void delete_btSimpleBroadphaseProxy(long jarg1);
  public final static native long new_btSimpleBroadphase__SWIG_0(int jarg1, long jarg2, btOverlappingPairCache jarg2_);
  public final static native long new_btSimpleBroadphase__SWIG_1(int jarg1);
  public final static native long new_btSimpleBroadphase__SWIG_2();
  public final static native void delete_btSimpleBroadphase(long jarg1);
  public final static native boolean btSimpleBroadphase_aabbOverlap(long jarg1, btSimpleBroadphaseProxy jarg1_, long jarg2, btSimpleBroadphaseProxy jarg2_);
  public final static native void btSimpleBroadphase_rayTest__SWIG_0(long jarg1, btSimpleBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btSimpleBroadphase_rayTest__SWIG_1(long jarg1, btSimpleBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btSimpleBroadphase_rayTest__SWIG_2(long jarg1, btSimpleBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native long btSimpleBroadphase_getOverlappingPairCache__SWIG_0(long jarg1, btSimpleBroadphase jarg1_);
  public final static native boolean btSimpleBroadphase_testAabbOverlap(long jarg1, btSimpleBroadphase jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native void btMultiSapBroadphase_btMultiSapProxy_aabbMin_set(long jarg1, btMultiSapBroadphase.btMultiSapProxy jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btMultiSapBroadphase_btMultiSapProxy_aabbMin_get(long jarg1, btMultiSapBroadphase.btMultiSapProxy jarg1_);
  public final static native void btMultiSapBroadphase_btMultiSapProxy_aabbMax_set(long jarg1, btMultiSapBroadphase.btMultiSapProxy jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btMultiSapBroadphase_btMultiSapProxy_aabbMax_get(long jarg1, btMultiSapBroadphase.btMultiSapProxy jarg1_);
  public final static native void btMultiSapBroadphase_btMultiSapProxy_shapeType_set(long jarg1, btMultiSapBroadphase.btMultiSapProxy jarg1_, int jarg2);
  public final static native int btMultiSapBroadphase_btMultiSapProxy_shapeType_get(long jarg1, btMultiSapBroadphase.btMultiSapProxy jarg1_);
  public final static native long new_btMultiSapBroadphase_btMultiSapProxy(Vector3 jarg1, Vector3 jarg2, int jarg3, long jarg4, short jarg5, short jarg6);
  public final static native void delete_btMultiSapBroadphase_btMultiSapProxy(long jarg1);
  public final static native long btMultiSapBroadphase_getBroadphaseArray__SWIG_0(long jarg1, btMultiSapBroadphase jarg1_);
  public final static native void delete_btMultiSapBroadphase(long jarg1);
  public final static native void btMultiSapBroadphase_rayTest__SWIG_0(long jarg1, btMultiSapBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btMultiSapBroadphase_rayTest__SWIG_1(long jarg1, btMultiSapBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btMultiSapBroadphase_rayTest__SWIG_2(long jarg1, btMultiSapBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native void btMultiSapBroadphase_addToChildBroadphase(long jarg1, btMultiSapBroadphase jarg1_, long jarg2, btMultiSapBroadphase.btMultiSapProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_, long jarg4, btBroadphaseInterface jarg4_);
  public final static native boolean btMultiSapBroadphase_testAabbOverlap(long jarg1, btMultiSapBroadphase jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btMultiSapBroadphase_getOverlappingPairCache__SWIG_0(long jarg1, btMultiSapBroadphase jarg1_);
  public final static native void btMultiSapBroadphase_buildTree(long jarg1, btMultiSapBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btMultiSapBroadphase_quicksort(long jarg1, btMultiSapBroadphase jarg1_, long jarg2, btBroadphasePairArray jarg2_, int jarg3, int jarg4);
  public final static native long new_btCollisionAlgorithmConstructionInfo__SWIG_0();
  public final static native long new_btCollisionAlgorithmConstructionInfo__SWIG_1(long jarg1, btDispatcher jarg1_, int jarg2);
  public final static native void btCollisionAlgorithmConstructionInfo_dispatcher1_set(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native long btCollisionAlgorithmConstructionInfo_dispatcher1_get(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native void btCollisionAlgorithmConstructionInfo_manifold_set(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native long btCollisionAlgorithmConstructionInfo_manifold_get(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native void delete_btCollisionAlgorithmConstructionInfo(long jarg1);
  public final static native void delete_btCollisionAlgorithm(long jarg1);
  public final static native void btCollisionAlgorithm_processCollision(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
  public final static native float btCollisionAlgorithm_calculateTimeOfImpact(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
  public final static native void btCollisionAlgorithm_getAllContactManifolds(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btPersistentManifoldArray jarg2_);
  public final static native void delete_btOverlappingPairCallback(long jarg1);
  public final static native long btOverlappingPairCallback_addOverlappingPair(long jarg1, btOverlappingPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btOverlappingPairCallback_removeOverlappingPair(long jarg1, btOverlappingPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_, long jarg4, btDispatcher jarg4_);
  public final static native void btOverlappingPairCallback_removeOverlappingPairsContainingProxy(long jarg1, btOverlappingPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native long new_btOverlappingPairCallback();
  public final static native void btOverlappingPairCallback_director_connect(btOverlappingPairCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btOverlappingPairCallback_change_ownership(btOverlappingPairCallback obj, long cptr, boolean take_or_release);
  public final static native void gOverlappingPairs_set(int jarg1);
  public final static native int gOverlappingPairs_get();
  public final static native void btAxisSweep3InternalShort_Edge_pos_set(long jarg1, btAxisSweep3InternalShort.Edge jarg1_, int jarg2);
  public final static native int btAxisSweep3InternalShort_Edge_pos_get(long jarg1, btAxisSweep3InternalShort.Edge jarg1_);
  public final static native void btAxisSweep3InternalShort_Edge_handle_set(long jarg1, btAxisSweep3InternalShort.Edge jarg1_, int jarg2);
  public final static native int btAxisSweep3InternalShort_Edge_handle_get(long jarg1, btAxisSweep3InternalShort.Edge jarg1_);
  public final static native int btAxisSweep3InternalShort_Edge_IsMax(long jarg1, btAxisSweep3InternalShort.Edge jarg1_);
  public final static native long new_btAxisSweep3InternalShort_Edge();
  public final static native void delete_btAxisSweep3InternalShort_Edge(long jarg1);
  public final static native void btAxisSweep3InternalShort_Handle_minEdges_set(long jarg1, btAxisSweep3InternalShort.Handle jarg1_, int[] jarg2);
  public final static native int[] btAxisSweep3InternalShort_Handle_minEdges_get(long jarg1, btAxisSweep3InternalShort.Handle jarg1_);
  public final static native void btAxisSweep3InternalShort_Handle_maxEdges_set(long jarg1, btAxisSweep3InternalShort.Handle jarg1_, int[] jarg2);
  public final static native int[] btAxisSweep3InternalShort_Handle_maxEdges_get(long jarg1, btAxisSweep3InternalShort.Handle jarg1_);
  public final static native void btAxisSweep3InternalShort_Handle_dbvtProxy_set(long jarg1, btAxisSweep3InternalShort.Handle jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native long btAxisSweep3InternalShort_Handle_dbvtProxy_get(long jarg1, btAxisSweep3InternalShort.Handle jarg1_);
  public final static native void btAxisSweep3InternalShort_Handle_SetNextFree(long jarg1, btAxisSweep3InternalShort.Handle jarg1_, int jarg2);
  public final static native int btAxisSweep3InternalShort_Handle_GetNextFree(long jarg1, btAxisSweep3InternalShort.Handle jarg1_);
  public final static native long new_btAxisSweep3InternalShort_Handle();
  public final static native void delete_btAxisSweep3InternalShort_Handle(long jarg1);
  public final static native long new_btAxisSweep3InternalShort__SWIG_0(Vector3 jarg1, Vector3 jarg2, int jarg3, int jarg4, int jarg5, long jarg6, btOverlappingPairCache jarg6_, boolean jarg7);
  public final static native long new_btAxisSweep3InternalShort__SWIG_1(Vector3 jarg1, Vector3 jarg2, int jarg3, int jarg4, int jarg5, long jarg6, btOverlappingPairCache jarg6_);
  public final static native long new_btAxisSweep3InternalShort__SWIG_2(Vector3 jarg1, Vector3 jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long new_btAxisSweep3InternalShort__SWIG_3(Vector3 jarg1, Vector3 jarg2, int jarg3, int jarg4);
  public final static native void delete_btAxisSweep3InternalShort(long jarg1);
  public final static native int btAxisSweep3InternalShort_getNumHandles(long jarg1, btAxisSweep3InternalShort jarg1_);
  public final static native int btAxisSweep3InternalShort_addHandle(long jarg1, btAxisSweep3InternalShort jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, short jarg5, short jarg6, long jarg7, btDispatcher jarg7_, long jarg8);
  public final static native void btAxisSweep3InternalShort_removeHandle(long jarg1, btAxisSweep3InternalShort jarg1_, int jarg2, long jarg3, btDispatcher jarg3_);
  public final static native void btAxisSweep3InternalShort_updateHandle(long jarg1, btAxisSweep3InternalShort jarg1_, int jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, btDispatcher jarg5_);
  public final static native long btAxisSweep3InternalShort_getHandle(long jarg1, btAxisSweep3InternalShort jarg1_, int jarg2);
  public final static native void btAxisSweep3InternalShort_rayTest__SWIG_0(long jarg1, btAxisSweep3InternalShort jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btAxisSweep3InternalShort_rayTest__SWIG_1(long jarg1, btAxisSweep3InternalShort jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btAxisSweep3InternalShort_rayTest__SWIG_2(long jarg1, btAxisSweep3InternalShort jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native void btAxisSweep3InternalShort_quantize(long jarg1, btAxisSweep3InternalShort jarg1_, java.nio.IntBuffer jarg2, Vector3 jarg3, int jarg4);
  public final static native void btAxisSweep3InternalShort_unQuantize(long jarg1, btAxisSweep3InternalShort jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native boolean btAxisSweep3InternalShort_testAabbOverlap(long jarg1, btAxisSweep3InternalShort jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btAxisSweep3InternalShort_getOverlappingPairCache__SWIG_0(long jarg1, btAxisSweep3InternalShort jarg1_);
  public final static native void btAxisSweep3InternalShort_setOverlappingPairUserCallback(long jarg1, btAxisSweep3InternalShort jarg1_, long jarg2, btOverlappingPairCallback jarg2_);
  public final static native long btAxisSweep3InternalShort_getOverlappingPairUserCallback(long jarg1, btAxisSweep3InternalShort jarg1_);
  public final static native void btAxisSweep3InternalInt_Edge_pos_set(long jarg1, btAxisSweep3InternalInt.Edge jarg1_, long jarg2);
  public final static native long btAxisSweep3InternalInt_Edge_pos_get(long jarg1, btAxisSweep3InternalInt.Edge jarg1_);
  public final static native void btAxisSweep3InternalInt_Edge_handle_set(long jarg1, btAxisSweep3InternalInt.Edge jarg1_, long jarg2);
  public final static native long btAxisSweep3InternalInt_Edge_handle_get(long jarg1, btAxisSweep3InternalInt.Edge jarg1_);
  public final static native long btAxisSweep3InternalInt_Edge_IsMax(long jarg1, btAxisSweep3InternalInt.Edge jarg1_);
  public final static native long new_btAxisSweep3InternalInt_Edge();
  public final static native void delete_btAxisSweep3InternalInt_Edge(long jarg1);
  public final static native void btAxisSweep3InternalInt_Handle_minEdges_set(long jarg1, btAxisSweep3InternalInt.Handle jarg1_, long[] jarg2);
  public final static native long[] btAxisSweep3InternalInt_Handle_minEdges_get(long jarg1, btAxisSweep3InternalInt.Handle jarg1_);
  public final static native void btAxisSweep3InternalInt_Handle_maxEdges_set(long jarg1, btAxisSweep3InternalInt.Handle jarg1_, long[] jarg2);
  public final static native long[] btAxisSweep3InternalInt_Handle_maxEdges_get(long jarg1, btAxisSweep3InternalInt.Handle jarg1_);
  public final static native void btAxisSweep3InternalInt_Handle_dbvtProxy_set(long jarg1, btAxisSweep3InternalInt.Handle jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native long btAxisSweep3InternalInt_Handle_dbvtProxy_get(long jarg1, btAxisSweep3InternalInt.Handle jarg1_);
  public final static native void btAxisSweep3InternalInt_Handle_SetNextFree(long jarg1, btAxisSweep3InternalInt.Handle jarg1_, long jarg2);
  public final static native long btAxisSweep3InternalInt_Handle_GetNextFree(long jarg1, btAxisSweep3InternalInt.Handle jarg1_);
  public final static native long new_btAxisSweep3InternalInt_Handle();
  public final static native void delete_btAxisSweep3InternalInt_Handle(long jarg1);
  public final static native long new_btAxisSweep3InternalInt__SWIG_0(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, long jarg5, long jarg6, btOverlappingPairCache jarg6_, boolean jarg7);
  public final static native long new_btAxisSweep3InternalInt__SWIG_1(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, long jarg5, long jarg6, btOverlappingPairCache jarg6_);
  public final static native long new_btAxisSweep3InternalInt__SWIG_2(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long new_btAxisSweep3InternalInt__SWIG_3(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4);
  public final static native void delete_btAxisSweep3InternalInt(long jarg1);
  public final static native long btAxisSweep3InternalInt_getNumHandles(long jarg1, btAxisSweep3InternalInt jarg1_);
  public final static native long btAxisSweep3InternalInt_addHandle(long jarg1, btAxisSweep3InternalInt jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, short jarg5, short jarg6, long jarg7, btDispatcher jarg7_, long jarg8);
  public final static native void btAxisSweep3InternalInt_removeHandle(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, long jarg3, btDispatcher jarg3_);
  public final static native void btAxisSweep3InternalInt_updateHandle(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, btDispatcher jarg5_);
  public final static native long btAxisSweep3InternalInt_getHandle(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2);
  public final static native void btAxisSweep3InternalInt_rayTest__SWIG_0(long jarg1, btAxisSweep3InternalInt jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btAxisSweep3InternalInt_rayTest__SWIG_1(long jarg1, btAxisSweep3InternalInt jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btAxisSweep3InternalInt_rayTest__SWIG_2(long jarg1, btAxisSweep3InternalInt jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native void btAxisSweep3InternalInt_quantize(long jarg1, btAxisSweep3InternalInt jarg1_, java.nio.LongBuffer jarg2, Vector3 jarg3, int jarg4);
  public final static native void btAxisSweep3InternalInt_unQuantize(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native boolean btAxisSweep3InternalInt_testAabbOverlap(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btAxisSweep3InternalInt_getOverlappingPairCache__SWIG_0(long jarg1, btAxisSweep3InternalInt jarg1_);
  public final static native void btAxisSweep3InternalInt_setOverlappingPairUserCallback(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, btOverlappingPairCallback jarg2_);
  public final static native long btAxisSweep3InternalInt_getOverlappingPairUserCallback(long jarg1, btAxisSweep3InternalInt jarg1_);
  public final static native long new_btAxisSweep3__SWIG_0(Vector3 jarg1, Vector3 jarg2, int jarg3, long jarg4, btOverlappingPairCache jarg4_, boolean jarg5);
  public final static native long new_btAxisSweep3__SWIG_1(Vector3 jarg1, Vector3 jarg2, int jarg3, long jarg4, btOverlappingPairCache jarg4_);
  public final static native long new_btAxisSweep3__SWIG_2(Vector3 jarg1, Vector3 jarg2, int jarg3);
  public final static native long new_btAxisSweep3__SWIG_3(Vector3 jarg1, Vector3 jarg2);
  public final static native void delete_btAxisSweep3(long jarg1);
  public final static native long new_bt32BitAxisSweep3__SWIG_0(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, btOverlappingPairCache jarg4_, boolean jarg5);
  public final static native long new_bt32BitAxisSweep3__SWIG_1(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, btOverlappingPairCache jarg4_);
  public final static native long new_bt32BitAxisSweep3__SWIG_2(Vector3 jarg1, Vector3 jarg2, long jarg3);
  public final static native long new_bt32BitAxisSweep3__SWIG_3(Vector3 jarg1, Vector3 jarg2);
  public final static native void delete_bt32BitAxisSweep3(long jarg1);
  public final static native long new_btDispatcherInfo();
  public final static native void btDispatcherInfo_timeStep_set(long jarg1, btDispatcherInfo jarg1_, float jarg2);
  public final static native float btDispatcherInfo_timeStep_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_stepCount_set(long jarg1, btDispatcherInfo jarg1_, int jarg2);
  public final static native int btDispatcherInfo_stepCount_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_dispatchFunc_set(long jarg1, btDispatcherInfo jarg1_, int jarg2);
  public final static native int btDispatcherInfo_dispatchFunc_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_timeOfImpact_set(long jarg1, btDispatcherInfo jarg1_, float jarg2);
  public final static native float btDispatcherInfo_timeOfImpact_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_useContinuous_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_useContinuous_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_debugDraw_set(long jarg1, btDispatcherInfo jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native long btDispatcherInfo_debugDraw_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_enableSatConvex_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_enableSatConvex_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_enableSPU_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_enableSPU_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_useEpa_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_useEpa_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_allowedCcdPenetration_set(long jarg1, btDispatcherInfo jarg1_, float jarg2);
  public final static native float btDispatcherInfo_allowedCcdPenetration_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_useConvexConservativeDistanceUtil_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_useConvexConservativeDistanceUtil_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_convexConservativeDistanceThreshold_set(long jarg1, btDispatcherInfo jarg1_, float jarg2);
  public final static native float btDispatcherInfo_convexConservativeDistanceThreshold_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void delete_btDispatcherInfo(long jarg1);
  public final static native void delete_btDispatcher(long jarg1);
  public final static native long btDispatcher_findAlgorithm__SWIG_0(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btPersistentManifold jarg4_);
  public final static native long btDispatcher_findAlgorithm__SWIG_1(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
  public final static native long btDispatcher_getNewManifold(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void btDispatcher_releaseManifold(long jarg1, btDispatcher jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native void btDispatcher_clearManifold(long jarg1, btDispatcher jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native boolean btDispatcher_needsCollision(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native boolean btDispatcher_needsResponse(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void btDispatcher_dispatchAllCollisionPairs(long jarg1, btDispatcher jarg1_, long jarg2, btOverlappingPairCache jarg2_, long jarg3, btDispatcherInfo jarg3_, long jarg4, btDispatcher jarg4_);
  public final static native int btDispatcher_getNumManifolds(long jarg1, btDispatcher jarg1_);
  public final static native long btDispatcher_getManifoldByIndexInternal(long jarg1, btDispatcher jarg1_, int jarg2);
  public final static native long btDispatcher_getInternalManifoldPointer(long jarg1, btDispatcher jarg1_);
  public final static native long btDispatcher_getInternalManifoldPool__SWIG_0(long jarg1, btDispatcher jarg1_);
  public final static native long btDispatcher_allocateCollisionAlgorithm(long jarg1, btDispatcher jarg1_, int jarg2);
  public final static native void btDispatcher_freeCollisionAlgorithm(long jarg1, btDispatcher jarg1_, long jarg2);
  public final static native void delete_btOverlapCallback(long jarg1);
  public final static native boolean btOverlapCallback_processOverlap(long jarg1, btOverlapCallback jarg1_, btBroadphasePair jarg2);
  public final static native long new_btOverlapCallback();
  public final static native void btOverlapCallback_director_connect(btOverlapCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btOverlapCallback_change_ownership(btOverlapCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_btOverlapFilterCallback(long jarg1);
  public final static native boolean btOverlapFilterCallback_needBroadphaseCollision(long jarg1, btOverlapFilterCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long new_btOverlapFilterCallback();
  public final static native void btOverlapFilterCallback_director_connect(btOverlapFilterCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btOverlapFilterCallback_change_ownership(btOverlapFilterCallback obj, long cptr, boolean take_or_release);
  public final static native void gRemovePairs_set(int jarg1);
  public final static native int gRemovePairs_get();
  public final static native void gAddedPairs_set(int jarg1);
  public final static native int gAddedPairs_get();
  public final static native void gFindPairs_set(int jarg1);
  public final static native int gFindPairs_get();
  public final static native int BT_NULL_PAIR_get();
  public final static native void delete_btOverlappingPairCache(long jarg1);
  public final static native long btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long jarg1, btOverlappingPairCache jarg1_);
  public final static native long btOverlappingPairCache_getOverlappingPairArray(long jarg1, btOverlappingPairCache jarg1_);
  public final static native void btOverlappingPairCache_cleanOverlappingPair(long jarg1, btOverlappingPairCache jarg1_, btBroadphasePair jarg2, long jarg3, btDispatcher jarg3_);
  public final static native int btOverlappingPairCache_getNumOverlappingPairs(long jarg1, btOverlappingPairCache jarg1_);
  public final static native void btOverlappingPairCache_cleanProxyFromPairs(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native void btOverlappingPairCache_setOverlapFilterCallback(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btOverlapFilterCallback jarg2_);
  public final static native void btOverlappingPairCache_processAllOverlappingPairs(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btOverlapCallback jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native long btOverlappingPairCache_findPair(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native boolean btOverlappingPairCache_hasDeferredRemoval(long jarg1, btOverlappingPairCache jarg1_);
  public final static native void btOverlappingPairCache_setInternalGhostPairCallback(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btOverlappingPairCallback jarg2_);
  public final static native void btOverlappingPairCache_sortOverlappingPairs(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native long new_btHashedOverlappingPairCache();
  public final static native void delete_btHashedOverlappingPairCache(long jarg1);
  public final static native boolean btHashedOverlappingPairCache_needsBroadphaseCollision(long jarg1, btHashedOverlappingPairCache jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long jarg1, btHashedOverlappingPairCache jarg1_);
  public final static native long btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0(long jarg1, btHashedOverlappingPairCache jarg1_);
  public final static native int btHashedOverlappingPairCache_GetCount(long jarg1, btHashedOverlappingPairCache jarg1_);
  public final static native long btHashedOverlappingPairCache_getOverlapFilterCallback(long jarg1, btHashedOverlappingPairCache jarg1_);
  public final static native long new_btSortedOverlappingPairCache();
  public final static native void delete_btSortedOverlappingPairCache(long jarg1);
  public final static native boolean btSortedOverlappingPairCache_needsBroadphaseCollision(long jarg1, btSortedOverlappingPairCache jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0(long jarg1, btSortedOverlappingPairCache jarg1_);
  public final static native long btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long jarg1, btSortedOverlappingPairCache jarg1_);
  public final static native long btSortedOverlappingPairCache_getOverlapFilterCallback(long jarg1, btSortedOverlappingPairCache jarg1_);
  public final static native long btNullPairCache_getOverlappingPairArrayPtr__SWIG_0(long jarg1, btNullPairCache jarg1_);
  public final static native long new_btNullPairCache();
  public final static native void delete_btNullPairCache(long jarg1);
  public final static native void delete_btCollisionShape(long jarg1);
  public final static native void btCollisionShape_getAabb(long jarg1, btCollisionShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btCollisionShape_getBoundingSphere(long jarg1, btCollisionShape jarg1_, Vector3 jarg2, long jarg3);
  public final static native float btCollisionShape_getAngularMotionDisc(long jarg1, btCollisionShape jarg1_);
  public final static native float btCollisionShape_getContactBreakingThreshold(long jarg1, btCollisionShape jarg1_, float jarg2);
  public final static native void btCollisionShape_calculateTemporalAabb(long jarg1, btCollisionShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4, float jarg5, Vector3 jarg6, Vector3 jarg7);
  public final static native boolean btCollisionShape_isPolyhedral(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isConvex2d(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isConvex(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isNonMoving(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isConcave(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isCompound(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isSoftBody(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isInfinite(long jarg1, btCollisionShape jarg1_);
  public final static native void btCollisionShape_setLocalScaling(long jarg1, btCollisionShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btCollisionShape_getLocalScaling(long jarg1, btCollisionShape jarg1_);
  public final static native void btCollisionShape_calculateLocalInertia(long jarg1, btCollisionShape jarg1_, float jarg2, Vector3 jarg3);
  public final static native String btCollisionShape_getName(long jarg1, btCollisionShape jarg1_);
  public final static native int btCollisionShape_getShapeType(long jarg1, btCollisionShape jarg1_);
  public final static native Vector3 btCollisionShape_getAnisotropicRollingFrictionDirection(long jarg1, btCollisionShape jarg1_);
  public final static native void btCollisionShape_setMargin(long jarg1, btCollisionShape jarg1_, float jarg2);
  public final static native float btCollisionShape_getMargin(long jarg1, btCollisionShape jarg1_);
  public final static native void btCollisionShape_setUserPointer(long jarg1, btCollisionShape jarg1_, long jarg2);
  public final static native long btCollisionShape_getUserPointer(long jarg1, btCollisionShape jarg1_);
  public final static native void btCollisionShape_setUserIndex(long jarg1, btCollisionShape jarg1_, int jarg2);
  public final static native int btCollisionShape_getUserIndex(long jarg1, btCollisionShape jarg1_);
  public final static native int btCollisionShape_calculateSerializeBufferSize(long jarg1, btCollisionShape jarg1_);
  public final static native String btCollisionShape_serialize(long jarg1, btCollisionShape jarg1_, long jarg2, long jarg3);
  public final static native void btCollisionShape_serializeSingleShape(long jarg1, btCollisionShape jarg1_, long jarg2);
  public final static native void btCollisionShapeData_name_set(long jarg1, btCollisionShapeData jarg1_, String jarg2);
  public final static native String btCollisionShapeData_name_get(long jarg1, btCollisionShapeData jarg1_);
  public final static native void btCollisionShapeData_shapeType_set(long jarg1, btCollisionShapeData jarg1_, int jarg2);
  public final static native int btCollisionShapeData_shapeType_get(long jarg1, btCollisionShapeData jarg1_);
  public final static native void btCollisionShapeData_padding_set(long jarg1, btCollisionShapeData jarg1_, String jarg2);
  public final static native String btCollisionShapeData_padding_get(long jarg1, btCollisionShapeData jarg1_);
  public final static native long new_btCollisionShapeData();
  public final static native void delete_btCollisionShapeData(long jarg1);
  public final static native void delete_btConvexShape(long jarg1);
  public final static native Vector3 btConvexShape_localGetSupportingVertex(long jarg1, btConvexShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btConvexShape_localGetSupportingVertexWithoutMargin(long jarg1, btConvexShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btConvexShape_localGetSupportVertexWithoutMarginNonVirtual(long jarg1, btConvexShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btConvexShape_localGetSupportVertexNonVirtual(long jarg1, btConvexShape jarg1_, Vector3 jarg2);
  public final static native float btConvexShape_getMarginNonVirtual(long jarg1, btConvexShape jarg1_);
  public final static native void btConvexShape_getAabbNonVirtual(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btConvexShape_project(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Vector3 jarg3, long jarg4, long jarg5, Vector3 jarg6, Vector3 jarg7);
  public final static native void btConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin(long jarg1, btConvexShape jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, int jarg4);
  public final static native void btConvexShape_getAabbSlow(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native int btConvexShape_getNumPreferredPenetrationDirections(long jarg1, btConvexShape jarg1_);
  public final static native void btConvexShape_getPreferredPenetrationDirection(long jarg1, btConvexShape jarg1_, int jarg2, Vector3 jarg3);
  public final static native void delete_btConvexInternalShape(long jarg1);
  public final static native Vector3 btConvexInternalShape_getImplicitShapeDimensions(long jarg1, btConvexInternalShape jarg1_);
  public final static native void btConvexInternalShape_setImplicitShapeDimensions(long jarg1, btConvexInternalShape jarg1_, Vector3 jarg2);
  public final static native void btConvexInternalShape_setSafeMargin__SWIG_0(long jarg1, btConvexInternalShape jarg1_, float jarg2, float jarg3);
  public final static native void btConvexInternalShape_setSafeMargin__SWIG_1(long jarg1, btConvexInternalShape jarg1_, float jarg2);
  public final static native void btConvexInternalShape_setSafeMargin__SWIG_2(long jarg1, btConvexInternalShape jarg1_, Vector3 jarg2, float jarg3);
  public final static native void btConvexInternalShape_setSafeMargin__SWIG_3(long jarg1, btConvexInternalShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btConvexInternalShape_getLocalScalingNV(long jarg1, btConvexInternalShape jarg1_);
  public final static native float btConvexInternalShape_getMarginNV(long jarg1, btConvexInternalShape jarg1_);
  public final static native void btConvexInternalShapeData_collisionShapeData_set(long jarg1, btConvexInternalShapeData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btConvexInternalShapeData_collisionShapeData_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native void btConvexInternalShapeData_localScaling_set(long jarg1, btConvexInternalShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btConvexInternalShapeData_localScaling_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native void btConvexInternalShapeData_implicitShapeDimensions_set(long jarg1, btConvexInternalShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btConvexInternalShapeData_implicitShapeDimensions_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native void btConvexInternalShapeData_collisionMargin_set(long jarg1, btConvexInternalShapeData jarg1_, float jarg2);
  public final static native float btConvexInternalShapeData_collisionMargin_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native void btConvexInternalShapeData_padding_set(long jarg1, btConvexInternalShapeData jarg1_, int jarg2);
  public final static native int btConvexInternalShapeData_padding_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native long new_btConvexInternalShapeData();
  public final static native void delete_btConvexInternalShapeData(long jarg1);
  public final static native void btConvexInternalAabbCachingShape_recalcLocalAabb(long jarg1, btConvexInternalAabbCachingShape jarg1_);
  public final static native void delete_btConvexInternalAabbCachingShape(long jarg1);
  public final static native void delete_btPolyhedralConvexShape(long jarg1);
  public final static native boolean btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_0(long jarg1, btPolyhedralConvexShape jarg1_, int jarg2);
  public final static native boolean btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_1(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native long btPolyhedralConvexShape_getConvexPolyhedron(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native int btPolyhedralConvexShape_getNumVertices(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native int btPolyhedralConvexShape_getNumEdges(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native void btPolyhedralConvexShape_getEdge(long jarg1, btPolyhedralConvexShape jarg1_, int jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btPolyhedralConvexShape_getVertex(long jarg1, btPolyhedralConvexShape jarg1_, int jarg2, Vector3 jarg3);
  public final static native int btPolyhedralConvexShape_getNumPlanes(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native void btPolyhedralConvexShape_getPlane(long jarg1, btPolyhedralConvexShape jarg1_, Vector3 jarg2, Vector3 jarg3, int jarg4);
  public final static native boolean btPolyhedralConvexShape_isInside(long jarg1, btPolyhedralConvexShape jarg1_, Vector3 jarg2, float jarg3);
  public final static native void btPolyhedralConvexAabbCachingShape_getNonvirtualAabb(long jarg1, btPolyhedralConvexAabbCachingShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4, float jarg5);
  public final static native void btPolyhedralConvexAabbCachingShape_recalcLocalAabb(long jarg1, btPolyhedralConvexAabbCachingShape jarg1_);
  public final static native void delete_btPolyhedralConvexAabbCachingShape(long jarg1);
  public final static native void delete_btConcaveShape(long jarg1);
  public final static native void btConcaveShape_processAllTriangles(long jarg1, btConcaveShape jarg1_, long jarg2, btTriangleCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void delete_btTriangleCallback(long jarg1);
  public final static native void btTriangleCallback_processTriangle(long jarg1, btTriangleCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native long new_btTriangleCallback();
  public final static native void btTriangleCallback_director_connect(btTriangleCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btTriangleCallback_change_ownership(btTriangleCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_btInternalTriangleIndexCallback(long jarg1);
  public final static native void btInternalTriangleIndexCallback_internalProcessTriangleIndex(long jarg1, btInternalTriangleIndexCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native long new_btInternalTriangleIndexCallback();
  public final static native void btInternalTriangleIndexCallback_director_connect(btInternalTriangleIndexCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btInternalTriangleIndexCallback_change_ownership(btInternalTriangleIndexCallback obj, long cptr, boolean take_or_release);
  public final static native long new_btTriangleInfo();
  public final static native void btTriangleInfo_flags_set(long jarg1, btTriangleInfo jarg1_, int jarg2);
  public final static native int btTriangleInfo_flags_get(long jarg1, btTriangleInfo jarg1_);
  public final static native void btTriangleInfo_edgeV0V1Angle_set(long jarg1, btTriangleInfo jarg1_, float jarg2);
  public final static native float btTriangleInfo_edgeV0V1Angle_get(long jarg1, btTriangleInfo jarg1_);
  public final static native void btTriangleInfo_edgeV1V2Angle_set(long jarg1, btTriangleInfo jarg1_, float jarg2);
  public final static native float btTriangleInfo_edgeV1V2Angle_get(long jarg1, btTriangleInfo jarg1_);
  public final static native void btTriangleInfo_edgeV2V0Angle_set(long jarg1, btTriangleInfo jarg1_, float jarg2);
  public final static native float btTriangleInfo_edgeV2V0Angle_get(long jarg1, btTriangleInfo jarg1_);
  public final static native void delete_btTriangleInfo(long jarg1);
  public final static native void btTriangleInfoMap_convexEpsilon_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_convexEpsilon_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_planarEpsilon_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_planarEpsilon_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_equalVertexThreshold_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_equalVertexThreshold_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_edgeDistanceThreshold_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_edgeDistanceThreshold_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_maxEdgeAngleThreshold_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_maxEdgeAngleThreshold_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_zeroAreaThreshold_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_zeroAreaThreshold_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native long new_btTriangleInfoMap();
  public final static native void delete_btTriangleInfoMap(long jarg1);
  public final static native int btTriangleInfoMap_calculateSerializeBufferSize(long jarg1, btTriangleInfoMap jarg1_);
  public final static native String btTriangleInfoMap_serialize(long jarg1, btTriangleInfoMap jarg1_, long jarg2, long jarg3);
  public final static native void btTriangleInfoMap_deSerialize(long jarg1, btTriangleInfoMap jarg1_, long jarg2, btTriangleInfoMapData jarg2_);
  public final static native void btTriangleInfoData_flags_set(long jarg1, btTriangleInfoData jarg1_, int jarg2);
  public final static native int btTriangleInfoData_flags_get(long jarg1, btTriangleInfoData jarg1_);
  public final static native void btTriangleInfoData_edgeV0V1Angle_set(long jarg1, btTriangleInfoData jarg1_, float jarg2);
  public final static native float btTriangleInfoData_edgeV0V1Angle_get(long jarg1, btTriangleInfoData jarg1_);
  public final static native void btTriangleInfoData_edgeV1V2Angle_set(long jarg1, btTriangleInfoData jarg1_, float jarg2);
  public final static native float btTriangleInfoData_edgeV1V2Angle_get(long jarg1, btTriangleInfoData jarg1_);
  public final static native void btTriangleInfoData_edgeV2V0Angle_set(long jarg1, btTriangleInfoData jarg1_, float jarg2);
  public final static native float btTriangleInfoData_edgeV2V0Angle_get(long jarg1, btTriangleInfoData jarg1_);
  public final static native long new_btTriangleInfoData();
  public final static native void delete_btTriangleInfoData(long jarg1);
  public final static native void btTriangleInfoMapData_hashTablePtr_set(long jarg1, btTriangleInfoMapData jarg1_, java.nio.IntBuffer jarg2);
  public final static native java.nio.IntBuffer btTriangleInfoMapData_hashTablePtr_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_nextPtr_set(long jarg1, btTriangleInfoMapData jarg1_, java.nio.IntBuffer jarg2);
  public final static native java.nio.IntBuffer btTriangleInfoMapData_nextPtr_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_valueArrayPtr_set(long jarg1, btTriangleInfoMapData jarg1_, long jarg2, btTriangleInfoData jarg2_);
  public final static native long btTriangleInfoMapData_valueArrayPtr_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_keyArrayPtr_set(long jarg1, btTriangleInfoMapData jarg1_, java.nio.IntBuffer jarg2);
  public final static native java.nio.IntBuffer btTriangleInfoMapData_keyArrayPtr_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_convexEpsilon_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_convexEpsilon_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_planarEpsilon_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_planarEpsilon_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_equalVertexThreshold_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_equalVertexThreshold_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_edgeDistanceThreshold_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_edgeDistanceThreshold_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_zeroAreaThreshold_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_zeroAreaThreshold_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_nextSize_set(long jarg1, btTriangleInfoMapData jarg1_, int jarg2);
  public final static native int btTriangleInfoMapData_nextSize_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_hashTableSize_set(long jarg1, btTriangleInfoMapData jarg1_, int jarg2);
  public final static native int btTriangleInfoMapData_hashTableSize_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_numValues_set(long jarg1, btTriangleInfoMapData jarg1_, int jarg2);
  public final static native int btTriangleInfoMapData_numValues_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_numKeys_set(long jarg1, btTriangleInfoMapData jarg1_, int jarg2);
  public final static native int btTriangleInfoMapData_numKeys_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_padding_set(long jarg1, btTriangleInfoMapData jarg1_, String jarg2);
  public final static native String btTriangleInfoMapData_padding_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native long new_btTriangleInfoMapData();
  public final static native void delete_btTriangleInfoMapData(long jarg1);
  public final static native long new_btStaticPlaneShape(Vector3 jarg1, float jarg2);
  public final static native void delete_btStaticPlaneShape(long jarg1);
  public final static native Vector3 btStaticPlaneShape_getPlaneNormal(long jarg1, btStaticPlaneShape jarg1_);
  public final static native float btStaticPlaneShape_getPlaneConstant(long jarg1, btStaticPlaneShape jarg1_);
  public final static native void btStaticPlaneShapeData_collisionShapeData_set(long jarg1, btStaticPlaneShapeData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btStaticPlaneShapeData_collisionShapeData_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native void btStaticPlaneShapeData_localScaling_set(long jarg1, btStaticPlaneShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btStaticPlaneShapeData_localScaling_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native void btStaticPlaneShapeData_planeNormal_set(long jarg1, btStaticPlaneShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btStaticPlaneShapeData_planeNormal_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native void btStaticPlaneShapeData_planeConstant_set(long jarg1, btStaticPlaneShapeData jarg1_, float jarg2);
  public final static native float btStaticPlaneShapeData_planeConstant_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native void btStaticPlaneShapeData_pad_set(long jarg1, btStaticPlaneShapeData jarg1_, String jarg2);
  public final static native String btStaticPlaneShapeData_pad_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native long new_btStaticPlaneShapeData();
  public final static native void delete_btStaticPlaneShapeData(long jarg1);
  public final static native void delete_btHeightfieldTerrainShape(long jarg1);
  public final static native void btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_0(long jarg1, btHeightfieldTerrainShape jarg1_, boolean jarg2);
  public final static native void btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_1(long jarg1, btHeightfieldTerrainShape jarg1_);
  public final static native void btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_0(long jarg1, btHeightfieldTerrainShape jarg1_, boolean jarg2);
  public final static native void btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_1(long jarg1, btHeightfieldTerrainShape jarg1_);
  public final static native long new_btHeightfieldTerrainShape__SWIG_0(int jarg1, int jarg2, java.nio.FloatBuffer jarg3, float jarg4, float jarg5, float jarg6, int jarg7, boolean jarg8);
  public final static native long new_btHeightfieldTerrainShape__SWIG_1(int jarg1, int jarg2, java.nio.ShortBuffer jarg3, float jarg4, float jarg5, float jarg6, int jarg7, boolean jarg8);
  public final static native void delete_btTriangleMeshShape(long jarg1);
  public final static native Vector3 btTriangleMeshShape_localGetSupportingVertex(long jarg1, btTriangleMeshShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btTriangleMeshShape_localGetSupportingVertexWithoutMargin(long jarg1, btTriangleMeshShape jarg1_, Vector3 jarg2);
  public final static native void btTriangleMeshShape_recalcLocalAabb(long jarg1, btTriangleMeshShape jarg1_);
  public final static native long btTriangleMeshShape_getMeshInterface__SWIG_0(long jarg1, btTriangleMeshShape jarg1_);
  public final static native Vector3 btTriangleMeshShape_getLocalAabbMin(long jarg1, btTriangleMeshShape jarg1_);
  public final static native Vector3 btTriangleMeshShape_getLocalAabbMax(long jarg1, btTriangleMeshShape jarg1_);
  public final static native void delete_btBvhTriangleMeshShape(long jarg1);
  public final static native boolean btBvhTriangleMeshShape_getOwnsBvh(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native void btBvhTriangleMeshShape_performRaycast(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btBvhTriangleMeshShape_performConvexcast(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleCallback jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native void btBvhTriangleMeshShape_refitTree(long jarg1, btBvhTriangleMeshShape jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btBvhTriangleMeshShape_partialRefitTree(long jarg1, btBvhTriangleMeshShape jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native long btBvhTriangleMeshShape_getOptimizedBvh(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native void btBvhTriangleMeshShape_setOptimizedBvh__SWIG_0(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btOptimizedBvh jarg2_, Vector3 jarg3);
  public final static native void btBvhTriangleMeshShape_setOptimizedBvh__SWIG_1(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btOptimizedBvh jarg2_);
  public final static native void btBvhTriangleMeshShape_buildOptimizedBvh(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native boolean btBvhTriangleMeshShape_usesQuantizedAabbCompression(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native void btBvhTriangleMeshShape_setTriangleInfoMap(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleInfoMap jarg2_);
  public final static native long btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_0(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native void btBvhTriangleMeshShape_serializeSingleBvh(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2);
  public final static native void btBvhTriangleMeshShape_serializeSingleTriangleInfoMap(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2);
  public final static native long new_btBvhTriangleMeshShape__SWIG_0(boolean jarg1, long jarg2, btStridingMeshInterface jarg2_, boolean jarg3, boolean jarg4);
  public final static native long new_btBvhTriangleMeshShape__SWIG_1(boolean jarg1, long jarg2, btStridingMeshInterface jarg2_, boolean jarg3);
  public final static native long new_btBvhTriangleMeshShape__SWIG_2(boolean jarg1, long jarg2, btStridingMeshInterface jarg2_, boolean jarg3, Vector3 jarg4, Vector3 jarg5, boolean jarg6);
  public final static native long new_btBvhTriangleMeshShape__SWIG_3(boolean jarg1, long jarg2, btStridingMeshInterface jarg2_, boolean jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native void btTriangleMeshShapeData_collisionShapeData_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btTriangleMeshShapeData_collisionShapeData_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_meshInterface_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btStridingMeshInterfaceData jarg2_);
  public final static native long btTriangleMeshShapeData_meshInterface_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_quantizedFloatBvh_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btQuantizedBvhFloatData jarg2_);
  public final static native long btTriangleMeshShapeData_quantizedFloatBvh_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_quantizedDoubleBvh_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btQuantizedBvhDoubleData jarg2_);
  public final static native long btTriangleMeshShapeData_quantizedDoubleBvh_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_triangleInfoMap_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btTriangleInfoMapData jarg2_);
  public final static native long btTriangleMeshShapeData_triangleInfoMap_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_collisionMargin_set(long jarg1, btTriangleMeshShapeData jarg1_, float jarg2);
  public final static native float btTriangleMeshShapeData_collisionMargin_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_pad3_set(long jarg1, btTriangleMeshShapeData jarg1_, String jarg2);
  public final static native String btTriangleMeshShapeData_pad3_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native long new_btTriangleMeshShapeData();
  public final static native void delete_btTriangleMeshShapeData(long jarg1);
  public final static native Vector3 btBoxShape_getHalfExtentsWithMargin(long jarg1, btBoxShape jarg1_);
  public final static native Vector3 btBoxShape_getHalfExtentsWithoutMargin(long jarg1, btBoxShape jarg1_);
  public final static native long new_btBoxShape(Vector3 jarg1);
  public final static native void btBoxShape_getPlaneEquation(long jarg1, btBoxShape jarg1_, long jarg2, btVector4 jarg2_, int jarg3);
  public final static native void delete_btBoxShape(long jarg1);
  public final static native long new_btCapsuleShape__SWIG_1(float jarg1, float jarg2);
  public final static native int btCapsuleShape_getUpAxis(long jarg1, btCapsuleShape jarg1_);
  public final static native float btCapsuleShape_getRadius(long jarg1, btCapsuleShape jarg1_);
  public final static native float btCapsuleShape_getHalfHeight(long jarg1, btCapsuleShape jarg1_);
  public final static native void btCapsuleShape_deSerializeFloat(long jarg1, btCapsuleShape jarg1_, long jarg2, btCapsuleShapeData jarg2_);
  public final static native void delete_btCapsuleShape(long jarg1);
  public final static native long new_btCapsuleShapeX(float jarg1, float jarg2);
  public final static native void delete_btCapsuleShapeX(long jarg1);
  public final static native long new_btCapsuleShapeZ(float jarg1, float jarg2);
  public final static native void delete_btCapsuleShapeZ(long jarg1);
  public final static native void btCapsuleShapeData_convexInternalShapeData_set(long jarg1, btCapsuleShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
  public final static native long btCapsuleShapeData_convexInternalShapeData_get(long jarg1, btCapsuleShapeData jarg1_);
  public final static native void btCapsuleShapeData_upAxis_set(long jarg1, btCapsuleShapeData jarg1_, int jarg2);
  public final static native int btCapsuleShapeData_upAxis_get(long jarg1, btCapsuleShapeData jarg1_);
  public final static native void btCapsuleShapeData_padding_set(long jarg1, btCapsuleShapeData jarg1_, String jarg2);
  public final static native String btCapsuleShapeData_padding_get(long jarg1, btCapsuleShapeData jarg1_);
  public final static native long new_btCapsuleShapeData();
  public final static native void delete_btCapsuleShapeData(long jarg1);
  public final static native Vector3 btBox2dShape_getHalfExtentsWithMargin(long jarg1, btBox2dShape jarg1_);
  public final static native Vector3 btBox2dShape_getHalfExtentsWithoutMargin(long jarg1, btBox2dShape jarg1_);
  public final static native long new_btBox2dShape(Vector3 jarg1);
  public final static native int btBox2dShape_getVertexCount(long jarg1, btBox2dShape jarg1_);
  public final static native long btBox2dShape_getVertices(long jarg1, btBox2dShape jarg1_);
  public final static native long btBox2dShape_getNormals(long jarg1, btBox2dShape jarg1_);
  public final static native Vector3 btBox2dShape_getCentroid(long jarg1, btBox2dShape jarg1_);
  public final static native void btBox2dShape_getPlaneEquation(long jarg1, btBox2dShape jarg1_, long jarg2, btVector4 jarg2_, int jarg3);
  public final static native void delete_btBox2dShape(long jarg1);
  public final static native void btTriangleShape_vertices1_set(long jarg1, btTriangleShape jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangleShape_vertices1_get(long jarg1, btTriangleShape jarg1_);
  public final static native Vector3 btTriangleShape_getVertexPtr__SWIG_0(long jarg1, btTriangleShape jarg1_, int jarg2);
  public final static native long new_btTriangleShape__SWIG_0();
  public final static native long new_btTriangleShape__SWIG_1(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native void btTriangleShape_calcNormal(long jarg1, btTriangleShape jarg1_, Vector3 jarg2);
  public final static native void btTriangleShape_getPlaneEquation(long jarg1, btTriangleShape jarg1_, int jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void delete_btTriangleShape(long jarg1);
  public final static native long new_btSphereShape(float jarg1);
  public final static native float btSphereShape_getRadius(long jarg1, btSphereShape jarg1_);
  public final static native void btSphereShape_setUnscaledRadius(long jarg1, btSphereShape jarg1_, float jarg2);
  public final static native void delete_btSphereShape(long jarg1);
  public final static native void delete_btStridingMeshInterface(long jarg1);
  public final static native void btStridingMeshInterface_InternalProcessAllTriangles(long jarg1, btStridingMeshInterface jarg1_, long jarg2, btInternalTriangleIndexCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btStridingMeshInterface_calculateAabbBruteForce(long jarg1, btStridingMeshInterface jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btStridingMeshInterface_getLockedVertexIndexBase__SWIG_0(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btStridingMeshInterface_getLockedVertexIndexBase__SWIG_1(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_0(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_1(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void btStridingMeshInterface_unLockVertexBase(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native void btStridingMeshInterface_unLockReadOnlyVertexBase(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native int btStridingMeshInterface_getNumSubParts(long jarg1, btStridingMeshInterface jarg1_);
  public final static native void btStridingMeshInterface_preallocateVertices(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native void btStridingMeshInterface_preallocateIndices(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native boolean btStridingMeshInterface_hasPremadeAabb(long jarg1, btStridingMeshInterface jarg1_);
  public final static native void btStridingMeshInterface_setPremadeAabb(long jarg1, btStridingMeshInterface jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btStridingMeshInterface_getPremadeAabb(long jarg1, btStridingMeshInterface jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_);
  public final static native Vector3 btStridingMeshInterface_getScaling(long jarg1, btStridingMeshInterface jarg1_);
  public final static native void btStridingMeshInterface_setScaling(long jarg1, btStridingMeshInterface jarg1_, Vector3 jarg2);
  public final static native int btStridingMeshInterface_calculateSerializeBufferSize(long jarg1, btStridingMeshInterface jarg1_);
  public final static native String btStridingMeshInterface_serialize(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3);
  public final static native void btIntIndexData_value_set(long jarg1, btIntIndexData jarg1_, int jarg2);
  public final static native int btIntIndexData_value_get(long jarg1, btIntIndexData jarg1_);
  public final static native long new_btIntIndexData();
  public final static native void delete_btIntIndexData(long jarg1);
  public final static native void btShortIntIndexData_value_set(long jarg1, btShortIntIndexData jarg1_, short jarg2);
  public final static native short btShortIntIndexData_value_get(long jarg1, btShortIntIndexData jarg1_);
  public final static native void btShortIntIndexData_pad_set(long jarg1, btShortIntIndexData jarg1_, String jarg2);
  public final static native String btShortIntIndexData_pad_get(long jarg1, btShortIntIndexData jarg1_);
  public final static native long new_btShortIntIndexData();
  public final static native void delete_btShortIntIndexData(long jarg1);
  public final static native void btShortIntIndexTripletData_values_set(long jarg1, btShortIntIndexTripletData jarg1_, short[] jarg2);
  public final static native short[] btShortIntIndexTripletData_values_get(long jarg1, btShortIntIndexTripletData jarg1_);
  public final static native void btShortIntIndexTripletData_pad_set(long jarg1, btShortIntIndexTripletData jarg1_, String jarg2);
  public final static native String btShortIntIndexTripletData_pad_get(long jarg1, btShortIntIndexTripletData jarg1_);
  public final static native long new_btShortIntIndexTripletData();
  public final static native void delete_btShortIntIndexTripletData(long jarg1);
  public final static native void btCharIndexTripletData_values_set(long jarg1, btCharIndexTripletData jarg1_, short[] jarg2);
  public final static native short[] btCharIndexTripletData_values_get(long jarg1, btCharIndexTripletData jarg1_);
  public final static native void btCharIndexTripletData_pad_set(long jarg1, btCharIndexTripletData jarg1_, char jarg2);
  public final static native char btCharIndexTripletData_pad_get(long jarg1, btCharIndexTripletData jarg1_);
  public final static native long new_btCharIndexTripletData();
  public final static native void delete_btCharIndexTripletData(long jarg1);
  public final static native void btMeshPartData_vertices3f_set(long jarg1, btMeshPartData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btMeshPartData_vertices3f_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_vertices3d_set(long jarg1, btMeshPartData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btMeshPartData_vertices3d_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_indices32_set(long jarg1, btMeshPartData jarg1_, long jarg2, btIntIndexData jarg2_);
  public final static native long btMeshPartData_indices32_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_3indices16_set(long jarg1, btMeshPartData jarg1_, long jarg2, btShortIntIndexTripletData jarg2_);
  public final static native long btMeshPartData_3indices16_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_3indices8_set(long jarg1, btMeshPartData jarg1_, long jarg2, btCharIndexTripletData jarg2_);
  public final static native long btMeshPartData_3indices8_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_indices16_set(long jarg1, btMeshPartData jarg1_, long jarg2, btShortIntIndexData jarg2_);
  public final static native long btMeshPartData_indices16_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_numTriangles_set(long jarg1, btMeshPartData jarg1_, int jarg2);
  public final static native int btMeshPartData_numTriangles_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_numVertices_set(long jarg1, btMeshPartData jarg1_, int jarg2);
  public final static native int btMeshPartData_numVertices_get(long jarg1, btMeshPartData jarg1_);
  public final static native long new_btMeshPartData();
  public final static native void delete_btMeshPartData(long jarg1);
  public final static native void btStridingMeshInterfaceData_meshPartsPtr_set(long jarg1, btStridingMeshInterfaceData jarg1_, long jarg2, btMeshPartData jarg2_);
  public final static native long btStridingMeshInterfaceData_meshPartsPtr_get(long jarg1, btStridingMeshInterfaceData jarg1_);
  public final static native void btStridingMeshInterfaceData_scaling_set(long jarg1, btStridingMeshInterfaceData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btStridingMeshInterfaceData_scaling_get(long jarg1, btStridingMeshInterfaceData jarg1_);
  public final static native void btStridingMeshInterfaceData_numMeshParts_set(long jarg1, btStridingMeshInterfaceData jarg1_, int jarg2);
  public final static native int btStridingMeshInterfaceData_numMeshParts_get(long jarg1, btStridingMeshInterfaceData jarg1_);
  public final static native void btStridingMeshInterfaceData_padding_set(long jarg1, btStridingMeshInterfaceData jarg1_, String jarg2);
  public final static native String btStridingMeshInterfaceData_padding_get(long jarg1, btStridingMeshInterfaceData jarg1_);
  public final static native long new_btStridingMeshInterfaceData();
  public final static native void delete_btStridingMeshInterfaceData(long jarg1);
  public final static native long new_btMinkowskiSumShape(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_);
  public final static native void btMinkowskiSumShape_setTransformA(long jarg1, btMinkowskiSumShape jarg1_, Matrix4 jarg2);
  public final static native void btMinkowskiSumShape_setTransformB(long jarg1, btMinkowskiSumShape jarg1_, Matrix4 jarg2);
  public final static native Matrix4 btMinkowskiSumShape_getTransformA(long jarg1, btMinkowskiSumShape jarg1_);
  public final static native Matrix4 btMinkowskiSumShape_GetTransformB(long jarg1, btMinkowskiSumShape jarg1_);
  public final static native long btMinkowskiSumShape_getShapeA(long jarg1, btMinkowskiSumShape jarg1_);
  public final static native long btMinkowskiSumShape_getShapeB(long jarg1, btMinkowskiSumShape jarg1_);
  public final static native void delete_btMinkowskiSumShape(long jarg1);
  public final static native void btFace_indices_set(long jarg1, btFace jarg1_, long jarg2);
  public final static native long btFace_indices_get(long jarg1, btFace jarg1_);
  public final static native void btFace_plane_set(long jarg1, btFace jarg1_, float[] jarg2);
  public final static native float[] btFace_plane_get(long jarg1, btFace jarg1_);
  public final static native long new_btFace();
  public final static native void delete_btFace(long jarg1);
  public final static native long new_btConvexPolyhedron();
  public final static native void delete_btConvexPolyhedron(long jarg1);
  public final static native void btConvexPolyhedron_vertices_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3Array jarg2_);
  public final static native long btConvexPolyhedron_vertices_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_faces_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2);
  public final static native long btConvexPolyhedron_faces_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_uniqueEdges_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3Array jarg2_);
  public final static native long btConvexPolyhedron_uniqueEdges_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_localCenter_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexPolyhedron_localCenter_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_extents_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexPolyhedron_extents_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_radius_set(long jarg1, btConvexPolyhedron jarg1_, float jarg2);
  public final static native float btConvexPolyhedron_radius_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_mC_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexPolyhedron_mC_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_mE_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexPolyhedron_mE_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_initialize(long jarg1, btConvexPolyhedron jarg1_);
  public final static native boolean btConvexPolyhedron_testContainment(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_project(long jarg1, btConvexPolyhedron jarg1_, Matrix4 jarg2, Vector3 jarg3, long jarg4, long jarg5, Vector3 jarg6, Vector3 jarg7);
  public final static native long new_btOptimizedBvh();
  public final static native void delete_btOptimizedBvh(long jarg1);
  public final static native void btOptimizedBvh_build(long jarg1, btOptimizedBvh jarg1_, long jarg2, btStridingMeshInterface jarg2_, boolean jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native void btOptimizedBvh_refit(long jarg1, btOptimizedBvh jarg1_, long jarg2, btStridingMeshInterface jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btOptimizedBvh_refitPartial(long jarg1, btOptimizedBvh jarg1_, long jarg2, btStridingMeshInterface jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btOptimizedBvh_updateBvhNodes(long jarg1, btOptimizedBvh jarg1_, long jarg2, btStridingMeshInterface jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native boolean btOptimizedBvh_serializeInPlace(long jarg1, btOptimizedBvh jarg1_, long jarg2, long jarg3, boolean jarg4);
  public final static native long btOptimizedBvh_deSerializeInPlace(long jarg1, long jarg2, boolean jarg3);
  public final static native void btTriangle_vertex0_set(long jarg1, btTriangle jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangle_vertex0_get(long jarg1, btTriangle jarg1_);
  public final static native void btTriangle_vertex1_set(long jarg1, btTriangle jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangle_vertex1_get(long jarg1, btTriangle jarg1_);
  public final static native void btTriangle_vertex2_set(long jarg1, btTriangle jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangle_vertex2_get(long jarg1, btTriangle jarg1_);
  public final static native void btTriangle_partId_set(long jarg1, btTriangle jarg1_, int jarg2);
  public final static native int btTriangle_partId_get(long jarg1, btTriangle jarg1_);
  public final static native void btTriangle_triangleIndex_set(long jarg1, btTriangle jarg1_, int jarg2);
  public final static native int btTriangle_triangleIndex_get(long jarg1, btTriangle jarg1_);
  public final static native long new_btTriangle();
  public final static native void delete_btTriangle(long jarg1);
  public final static native int btTriangleBuffer_getNumTriangles(long jarg1, btTriangleBuffer jarg1_);
  public final static native long btTriangleBuffer_getTriangle(long jarg1, btTriangleBuffer jarg1_, int jarg2);
  public final static native void btTriangleBuffer_clearBuffer(long jarg1, btTriangleBuffer jarg1_);
  public final static native long new_btTriangleBuffer();
  public final static native void delete_btTriangleBuffer(long jarg1);
  public final static native void btIndexedMesh_numTriangles_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_numTriangles_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_triangleIndexBase_set(long jarg1, btIndexedMesh jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btIndexedMesh_triangleIndexBase_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_triangleIndexStride_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_triangleIndexStride_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_numVertices_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_numVertices_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_vertexBase_set(long jarg1, btIndexedMesh jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btIndexedMesh_vertexBase_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_vertexStride_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_vertexStride_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_indexType_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_indexType_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_vertexType_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_vertexType_get(long jarg1, btIndexedMesh jarg1_);
  public final static native long new_btIndexedMesh();
  public final static native void btIndexedMesh_setTriangleIndexBase(long jarg1, btIndexedMesh jarg1_, java.nio.ShortBuffer jarg2);
  public final static native void btIndexedMesh_setVertexBase(long jarg1, btIndexedMesh jarg1_, java.nio.FloatBuffer jarg2);
  public final static native void btIndexedMesh_setVertices(long jarg1, btIndexedMesh jarg1_, java.nio.FloatBuffer jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void btIndexedMesh_setIndices(long jarg1, btIndexedMesh jarg1_, java.nio.ShortBuffer jarg2, int jarg3, int jarg4);
  public final static native void delete_btIndexedMesh(long jarg1);
  public final static native long new_btTriangleIndexVertexArray();
  public final static native void delete_btTriangleIndexVertexArray(long jarg1);
  public final static native void btTriangleIndexVertexArray_internalAddIndexedMesh__SWIG_0(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, btIndexedMesh jarg2_, int jarg3);
  public final static native void btTriangleIndexVertexArray_internalAddIndexedMesh__SWIG_1(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, btIndexedMesh jarg2_);
  public final static native void btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_0(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_1(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_0(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_1(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native long btTriangleIndexVertexArray_getIndexedMeshArray(long jarg1, btTriangleIndexVertexArray jarg1_);
  public final static native void btMaterial_friction_set(long jarg1, btMaterial jarg1_, float jarg2);
  public final static native float btMaterial_friction_get(long jarg1, btMaterial jarg1_);
  public final static native void btMaterial_restitution_set(long jarg1, btMaterial jarg1_, float jarg2);
  public final static native float btMaterial_restitution_get(long jarg1, btMaterial jarg1_);
  public final static native void btMaterial_pad_set(long jarg1, btMaterial jarg1_, int[] jarg2);
  public final static native int[] btMaterial_pad_get(long jarg1, btMaterial jarg1_);
  public final static native long new_btMaterial__SWIG_0();
  public final static native long new_btMaterial__SWIG_1(float jarg1, float jarg2);
  public final static native void delete_btMaterial(long jarg1);
  public final static native long new_btScaledBvhTriangleMeshShape(long jarg1, btBvhTriangleMeshShape jarg1_, Vector3 jarg2);
  public final static native void delete_btScaledBvhTriangleMeshShape(long jarg1);
  public final static native long btScaledBvhTriangleMeshShape_getChildShape__SWIG_0(long jarg1, btScaledBvhTriangleMeshShape jarg1_);
  public final static native void btScaledTriangleMeshShapeData_trimeshShapeData_set(long jarg1, btScaledTriangleMeshShapeData jarg1_, long jarg2, btTriangleMeshShapeData jarg2_);
  public final static native long btScaledTriangleMeshShapeData_trimeshShapeData_get(long jarg1, btScaledTriangleMeshShapeData jarg1_);
  public final static native void btScaledTriangleMeshShapeData_localScaling_set(long jarg1, btScaledTriangleMeshShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btScaledTriangleMeshShapeData_localScaling_get(long jarg1, btScaledTriangleMeshShapeData jarg1_);
  public final static native long new_btScaledTriangleMeshShapeData();
  public final static native void delete_btScaledTriangleMeshShapeData(long jarg1);
  public final static native long new_btShapeHull(long jarg1, btConvexShape jarg1_);
  public final static native void delete_btShapeHull(long jarg1);
  public final static native boolean btShapeHull_buildHull(long jarg1, btShapeHull jarg1_, float jarg2);
  public final static native int btShapeHull_numTriangles(long jarg1, btShapeHull jarg1_);
  public final static native int btShapeHull_numVertices(long jarg1, btShapeHull jarg1_);
  public final static native int btShapeHull_numIndices(long jarg1, btShapeHull jarg1_);
  public final static native long btShapeHull_getVertexPointer(long jarg1, btShapeHull jarg1_);
  public final static native java.nio.LongBuffer btShapeHull_getIndexPointer(long jarg1, btShapeHull jarg1_);
  public final static native long new_btConvexHullShape__SWIG_0(java.nio.FloatBuffer jarg1, int jarg2, int jarg3);
  public final static native long new_btConvexHullShape__SWIG_1(java.nio.FloatBuffer jarg1, int jarg2);
  public final static native long new_btConvexHullShape__SWIG_2(java.nio.FloatBuffer jarg1);
  public final static native long new_btConvexHullShape__SWIG_3();
  public final static native void btConvexHullShape_addPoint__SWIG_0(long jarg1, btConvexHullShape jarg1_, Vector3 jarg2, boolean jarg3);
  public final static native void btConvexHullShape_addPoint__SWIG_1(long jarg1, btConvexHullShape jarg1_, Vector3 jarg2);
  public final static native long btConvexHullShape_getUnscaledPoints__SWIG_0(long jarg1, btConvexHullShape jarg1_);
  public final static native long btConvexHullShape_getPoints(long jarg1, btConvexHullShape jarg1_);
  public final static native Vector3 btConvexHullShape_getScaledPoint(long jarg1, btConvexHullShape jarg1_, int jarg2);
  public final static native int btConvexHullShape_getNumPoints(long jarg1, btConvexHullShape jarg1_);
  public final static native long new_btConvexHullShape__SWIG_4(long jarg1, btShapeHull jarg1_);
  public final static native void delete_btConvexHullShape(long jarg1);
  public final static native void btConvexHullShapeData_convexInternalShapeData_set(long jarg1, btConvexHullShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
  public final static native long btConvexHullShapeData_convexInternalShapeData_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native void btConvexHullShapeData_unscaledPointsFloatPtr_set(long jarg1, btConvexHullShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btConvexHullShapeData_unscaledPointsFloatPtr_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native void btConvexHullShapeData_unscaledPointsDoublePtr_set(long jarg1, btConvexHullShapeData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btConvexHullShapeData_unscaledPointsDoublePtr_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native void btConvexHullShapeData_numUnscaledPoints_set(long jarg1, btConvexHullShapeData jarg1_, int jarg2);
  public final static native int btConvexHullShapeData_numUnscaledPoints_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native void btConvexHullShapeData_padding3_set(long jarg1, btConvexHullShapeData jarg1_, String jarg2);
  public final static native String btConvexHullShapeData_padding3_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native long new_btConvexHullShapeData();
  public final static native void delete_btConvexHullShapeData(long jarg1);
  public final static native void btMaterialProperties_numMaterials_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_numMaterials_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_materialBase_set(long jarg1, btMaterialProperties jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btMaterialProperties_materialBase_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_materialStride_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_materialStride_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_materialType_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_materialType_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_numTriangles_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_numTriangles_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_triangleMaterialsBase_set(long jarg1, btMaterialProperties jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btMaterialProperties_triangleMaterialsBase_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_triangleMaterialStride_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_triangleMaterialStride_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_triangleType_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_triangleType_get(long jarg1, btMaterialProperties jarg1_);
  public final static native long new_btMaterialProperties();
  public final static native void delete_btMaterialProperties(long jarg1);
  public final static native long new_btTriangleIndexVertexMaterialArray__SWIG_0();
  public final static native long new_btTriangleIndexVertexMaterialArray__SWIG_1(int jarg1, java.nio.IntBuffer jarg2, int jarg3, int jarg4, java.nio.FloatBuffer jarg5, int jarg6, int jarg7, java.nio.ByteBuffer jarg8, int jarg9, java.nio.IntBuffer jarg10, int jarg11);
  public final static native void delete_btTriangleIndexVertexMaterialArray(long jarg1);
  public final static native void btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_0(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, btMaterialProperties jarg2_, int jarg3);
  public final static native void btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_1(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, btMaterialProperties jarg2_);
  public final static native void btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_0(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_1(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_0(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_1(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native Vector3 btCylinderShape_getHalfExtentsWithMargin(long jarg1, btCylinderShape jarg1_);
  public final static native Vector3 btCylinderShape_getHalfExtentsWithoutMargin(long jarg1, btCylinderShape jarg1_);
  public final static native long new_btCylinderShape(Vector3 jarg1);
  public final static native int btCylinderShape_getUpAxis(long jarg1, btCylinderShape jarg1_);
  public final static native float btCylinderShape_getRadius(long jarg1, btCylinderShape jarg1_);
  public final static native void delete_btCylinderShape(long jarg1);
  public final static native long new_btCylinderShapeX(Vector3 jarg1);
  public final static native void delete_btCylinderShapeX(long jarg1);
  public final static native long new_btCylinderShapeZ(Vector3 jarg1);
  public final static native void delete_btCylinderShapeZ(long jarg1);
  public final static native void btCylinderShapeData_convexInternalShapeData_set(long jarg1, btCylinderShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
  public final static native long btCylinderShapeData_convexInternalShapeData_get(long jarg1, btCylinderShapeData jarg1_);
  public final static native void btCylinderShapeData_upAxis_set(long jarg1, btCylinderShapeData jarg1_, int jarg2);
  public final static native int btCylinderShapeData_upAxis_get(long jarg1, btCylinderShapeData jarg1_);
  public final static native void btCylinderShapeData_padding_set(long jarg1, btCylinderShapeData jarg1_, String jarg2);
  public final static native String btCylinderShapeData_padding_get(long jarg1, btCylinderShapeData jarg1_);
  public final static native long new_btCylinderShapeData();
  public final static native void delete_btCylinderShapeData(long jarg1);
  public final static native void btTriangleMesh_weldingThreshold_set(long jarg1, btTriangleMesh jarg1_, float jarg2);
  public final static native float btTriangleMesh_weldingThreshold_get(long jarg1, btTriangleMesh jarg1_);
  public final static native long new_btTriangleMesh__SWIG_0(boolean jarg1, boolean jarg2);
  public final static native long new_btTriangleMesh__SWIG_1(boolean jarg1);
  public final static native long new_btTriangleMesh__SWIG_2();
  public final static native boolean btTriangleMesh_getUse32bitIndices(long jarg1, btTriangleMesh jarg1_);
  public final static native boolean btTriangleMesh_getUse4componentVertices(long jarg1, btTriangleMesh jarg1_);
  public final static native void btTriangleMesh_addTriangle__SWIG_0(long jarg1, btTriangleMesh jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, boolean jarg5);
  public final static native void btTriangleMesh_addTriangle__SWIG_1(long jarg1, btTriangleMesh jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btTriangleMesh_addTriangleIndices(long jarg1, btTriangleMesh jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int btTriangleMesh_getNumTriangles(long jarg1, btTriangleMesh jarg1_);
  public final static native int btTriangleMesh_findOrAddVertex(long jarg1, btTriangleMesh jarg1_, Vector3 jarg2, boolean jarg3);
  public final static native void btTriangleMesh_addIndex(long jarg1, btTriangleMesh jarg1_, int jarg2);
  public final static native void delete_btTriangleMesh(long jarg1);
  public final static native long new_btConeShape(float jarg1, float jarg2);
  public final static native float btConeShape_getRadius(long jarg1, btConeShape jarg1_);
  public final static native float btConeShape_getHeight(long jarg1, btConeShape jarg1_);
  public final static native void btConeShape_setConeUpIndex(long jarg1, btConeShape jarg1_, int jarg2);
  public final static native int btConeShape_getConeUpIndex(long jarg1, btConeShape jarg1_);
  public final static native void delete_btConeShape(long jarg1);
  public final static native long new_btConeShapeX(float jarg1, float jarg2);
  public final static native void delete_btConeShapeX(long jarg1);
  public final static native long new_btConeShapeZ(float jarg1, float jarg2);
  public final static native void delete_btConeShapeZ(long jarg1);
  public final static native void btConeShapeData_convexInternalShapeData_set(long jarg1, btConeShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
  public final static native long btConeShapeData_convexInternalShapeData_get(long jarg1, btConeShapeData jarg1_);
  public final static native void btConeShapeData_upIndex_set(long jarg1, btConeShapeData jarg1_, int jarg2);
  public final static native int btConeShapeData_upIndex_get(long jarg1, btConeShapeData jarg1_);
  public final static native void btConeShapeData_padding_set(long jarg1, btConeShapeData jarg1_, String jarg2);
  public final static native String btConeShapeData_padding_get(long jarg1, btConeShapeData jarg1_);
  public final static native long new_btConeShapeData();
  public final static native void delete_btConeShapeData(long jarg1);
  public final static native long new_btConvexTriangleMeshShape__SWIG_0(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2);
  public final static native long new_btConvexTriangleMeshShape__SWIG_1(long jarg1, btStridingMeshInterface jarg1_);
  public final static native long btConvexTriangleMeshShape_getMeshInterface__SWIG_0(long jarg1, btConvexTriangleMeshShape jarg1_);
  public final static native void btConvexTriangleMeshShape_calculatePrincipalAxisTransform(long jarg1, btConvexTriangleMeshShape jarg1_, Matrix4 jarg2, Vector3 jarg3, long jarg4);
  public final static native void delete_btConvexTriangleMeshShape(long jarg1);
  public final static native long new_btEmptyShape();
  public final static native void delete_btEmptyShape(long jarg1);
  public final static native long new_btMultimaterialTriangleMeshShape__SWIG_0(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2, boolean jarg3);
  public final static native long new_btMultimaterialTriangleMeshShape__SWIG_1(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2);
  public final static native long new_btMultimaterialTriangleMeshShape__SWIG_2(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2, Vector3 jarg3, Vector3 jarg4, boolean jarg5);
  public final static native long new_btMultimaterialTriangleMeshShape__SWIG_3(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void delete_btMultimaterialTriangleMeshShape(long jarg1);
  public final static native long btMultimaterialTriangleMeshShape_getMaterialProperties(long jarg1, btMultimaterialTriangleMeshShape jarg1_, int jarg2, int jarg3);
  public final static native long new_btBU_Simplex1to4__SWIG_0();
  public final static native long new_btBU_Simplex1to4__SWIG_1(Vector3 jarg1);
  public final static native long new_btBU_Simplex1to4__SWIG_2(Vector3 jarg1, Vector3 jarg2);
  public final static native long new_btBU_Simplex1to4__SWIG_3(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native long new_btBU_Simplex1to4__SWIG_4(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btBU_Simplex1to4_reset(long jarg1, btBU_Simplex1to4 jarg1_);
  public final static native void btBU_Simplex1to4_addVertex(long jarg1, btBU_Simplex1to4 jarg1_, Vector3 jarg2);
  public final static native int btBU_Simplex1to4_getIndex(long jarg1, btBU_Simplex1to4 jarg1_, int jarg2);
  public final static native void delete_btBU_Simplex1to4(long jarg1);
  public final static native long new_btUniformScalingShape(long jarg1, btConvexShape jarg1_, float jarg2);
  public final static native void delete_btUniformScalingShape(long jarg1);
  public final static native float btUniformScalingShape_getUniformScalingFactor(long jarg1, btUniformScalingShape jarg1_);
  public final static native long btUniformScalingShape_getChildShape__SWIG_0(long jarg1, btUniformScalingShape jarg1_);
  public final static native long new_btConvexPointCloudShape__SWIG_0();
  public final static native long new_btConvexPointCloudShape__SWIG_1(long jarg1, btVector3 jarg1_, int jarg2, Vector3 jarg3, boolean jarg4);
  public final static native long new_btConvexPointCloudShape__SWIG_2(long jarg1, btVector3 jarg1_, int jarg2, Vector3 jarg3);
  public final static native void btConvexPointCloudShape_setPoints__SWIG_0(long jarg1, btConvexPointCloudShape jarg1_, long jarg2, btVector3 jarg2_, int jarg3, boolean jarg4, Vector3 jarg5);
  public final static native void btConvexPointCloudShape_setPoints__SWIG_1(long jarg1, btConvexPointCloudShape jarg1_, long jarg2, btVector3 jarg2_, int jarg3, boolean jarg4);
  public final static native void btConvexPointCloudShape_setPoints__SWIG_2(long jarg1, btConvexPointCloudShape jarg1_, long jarg2, btVector3 jarg2_, int jarg3);
  public final static native long btConvexPointCloudShape_getUnscaledPoints__SWIG_0(long jarg1, btConvexPointCloudShape jarg1_);
  public final static native int btConvexPointCloudShape_getNumPoints(long jarg1, btConvexPointCloudShape jarg1_);
  public final static native Vector3 btConvexPointCloudShape_getScaledPoint(long jarg1, btConvexPointCloudShape jarg1_, int jarg2);
  public final static native void delete_btConvexPointCloudShape(long jarg1);
  public final static native long new_btConvex2dShape(long jarg1, btConvexShape jarg1_);
  public final static native void delete_btConvex2dShape(long jarg1);
  public final static native long btConvex2dShape_getChildShape__SWIG_0(long jarg1, btConvex2dShape jarg1_);
  public final static native boolean btCollisionObject_mergesSimulationIslands(long jarg1, btCollisionObject jarg1_);
  public final static native Vector3 btCollisionObject_getAnisotropicFriction__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setAnisotropicFriction__SWIG_0(long jarg1, btCollisionObject jarg1_, Vector3 jarg2, int jarg3);
  public final static native void btCollisionObject_setAnisotropicFriction__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native boolean btCollisionObject_hasAnisotropicFriction__SWIG_0(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native boolean btCollisionObject_hasAnisotropicFriction__SWIG_1(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setContactProcessingThreshold(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getContactProcessingThreshold(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_isStaticObject(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_isKinematicObject(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_isStaticOrKinematicObject(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_hasContactResponse(long jarg1, btCollisionObject jarg1_);
  public final static native long new_btCollisionObject();
  public final static native void delete_btCollisionObject(long jarg1);
  public final static native void btCollisionObject_internalSetCollisionShape(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native long btCollisionObject_internalGetCollisionShape__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setIgnoreCollisionCheck(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_, boolean jarg3);
  public final static native boolean btCollisionObject_checkCollideWithOverride(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long btCollisionObject_internalGetExtensionPointer(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_internalSetExtensionPointer(long jarg1, btCollisionObject jarg1_, long jarg2);
  public final static native int btCollisionObject_getActivationState(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setActivationState(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native void btCollisionObject_setDeactivationTime(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getDeactivationTime(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_forceActivationState(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native void btCollisionObject_activate__SWIG_0(long jarg1, btCollisionObject jarg1_, boolean jarg2);
  public final static native void btCollisionObject_activate__SWIG_1(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_isActive(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setRestitution(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getRestitution(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setFriction(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getFriction(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setRollingFriction(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getRollingFriction(long jarg1, btCollisionObject jarg1_);
  public final static native int btCollisionObject_getInternalType(long jarg1, btCollisionObject jarg1_);
  public final static native Matrix4 btCollisionObject_getWorldTransform__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setWorldTransform(long jarg1, btCollisionObject jarg1_, Matrix4 jarg2);
  public final static native long btCollisionObject_getBroadphaseHandle__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setBroadphaseHandle(long jarg1, btCollisionObject jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native Matrix4 btCollisionObject_getInterpolationWorldTransform__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setInterpolationWorldTransform(long jarg1, btCollisionObject jarg1_, Matrix4 jarg2);
  public final static native void btCollisionObject_setInterpolationLinearVelocity(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native void btCollisionObject_setInterpolationAngularVelocity(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native Vector3 btCollisionObject_getInterpolationLinearVelocity__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native Vector3 btCollisionObject_getInterpolationAngularVelocity__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native int btCollisionObject_getIslandTag(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setIslandTag(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native int btCollisionObject_getCompanionId(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setCompanionId(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native float btCollisionObject_getHitFraction(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setHitFraction(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native int btCollisionObject_getCollisionFlags(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setCollisionFlags(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native float btCollisionObject_getCcdSweptSphereRadius(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setCcdSweptSphereRadius(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getCcdMotionThreshold(long jarg1, btCollisionObject jarg1_);
  public final static native float btCollisionObject_getCcdSquareMotionThreshold(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setCcdMotionThreshold(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native long btCollisionObject_getUserPointer(long jarg1, btCollisionObject jarg1_);
  public final static native int btCollisionObject_getUserIndex(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setUserPointer(long jarg1, btCollisionObject jarg1_, long jarg2);
  public final static native void btCollisionObject_setUserIndex(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native int btCollisionObject_getUpdateRevisionInternal(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_checkCollideWith(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native int btCollisionObject_calculateSerializeBufferSize(long jarg1, btCollisionObject jarg1_);
  public final static native String btCollisionObject_serialize(long jarg1, btCollisionObject jarg1_, long jarg2, long jarg3);
  public final static native void btCollisionObject_serializeSingleObject(long jarg1, btCollisionObject jarg1_, long jarg2);
  public final static native void btCollisionObject_internalSetGdxBridge(long jarg1, btCollisionObject jarg1_, long jarg2, GdxCollisionObjectBridge jarg2_);
  public final static native long btCollisionObject_internalGetGdxBridge(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_getAnisotropicFriction__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native void btCollisionObject_getWorldTransform__SWIG_2(long jarg1, btCollisionObject jarg1_, Matrix4 jarg2);
  public final static native void btCollisionObject_getInterpolationWorldTransform__SWIG_2(long jarg1, btCollisionObject jarg1_, Matrix4 jarg2);
  public final static native void btCollisionObject_getInterpolationLinearVelocity__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native void btCollisionObject_getInterpolationAngularVelocity__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native void btCollisionObjectDoubleData_broadphaseHandle_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2);
  public final static native long btCollisionObjectDoubleData_broadphaseHandle_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_collisionShape_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2);
  public final static native long btCollisionObjectDoubleData_collisionShape_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_rootCollisionShape_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btCollisionObjectDoubleData_rootCollisionShape_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_name_set(long jarg1, btCollisionObjectDoubleData jarg1_, String jarg2);
  public final static native String btCollisionObjectDoubleData_name_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_worldTransform_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btTransformDoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_worldTransform_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_interpolationWorldTransform_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btTransformDoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_interpolationWorldTransform_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_interpolationLinearVelocity_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_interpolationLinearVelocity_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_interpolationAngularVelocity_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_interpolationAngularVelocity_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_anisotropicFriction_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_anisotropicFriction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_contactProcessingThreshold_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_contactProcessingThreshold_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_deactivationTime_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_deactivationTime_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_friction_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_friction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_rollingFriction_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_rollingFriction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_restitution_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_restitution_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_hitFraction_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_hitFraction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_ccdSweptSphereRadius_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_ccdSweptSphereRadius_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_ccdMotionThreshold_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_ccdMotionThreshold_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_hasAnisotropicFriction_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_hasAnisotropicFriction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_collisionFlags_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_collisionFlags_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_islandTag1_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_islandTag1_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_companionId_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_companionId_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_activationState1_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_activationState1_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_internalType_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_internalType_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_checkCollideWith_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_checkCollideWith_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_padding_set(long jarg1, btCollisionObjectDoubleData jarg1_, String jarg2);
  public final static native String btCollisionObjectDoubleData_padding_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native long new_btCollisionObjectDoubleData();
  public final static native void delete_btCollisionObjectDoubleData(long jarg1);
  public final static native void btCollisionObjectFloatData_broadphaseHandle_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2);
  public final static native long btCollisionObjectFloatData_broadphaseHandle_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_collisionShape_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2);
  public final static native long btCollisionObjectFloatData_collisionShape_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_rootCollisionShape_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btCollisionObjectFloatData_rootCollisionShape_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_name_set(long jarg1, btCollisionObjectFloatData jarg1_, String jarg2);
  public final static native String btCollisionObjectFloatData_name_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_worldTransform_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btCollisionObjectFloatData_worldTransform_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_interpolationWorldTransform_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btCollisionObjectFloatData_interpolationWorldTransform_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_interpolationLinearVelocity_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btCollisionObjectFloatData_interpolationLinearVelocity_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_interpolationAngularVelocity_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btCollisionObjectFloatData_interpolationAngularVelocity_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_anisotropicFriction_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btCollisionObjectFloatData_anisotropicFriction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_contactProcessingThreshold_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_contactProcessingThreshold_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_deactivationTime_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_deactivationTime_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_friction_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_friction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_rollingFriction_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_rollingFriction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_restitution_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_restitution_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_hitFraction_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_hitFraction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_ccdSweptSphereRadius_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_ccdSweptSphereRadius_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_ccdMotionThreshold_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_ccdMotionThreshold_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_hasAnisotropicFriction_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_hasAnisotropicFriction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_collisionFlags_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_collisionFlags_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_islandTag1_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_islandTag1_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_companionId_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_companionId_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_activationState1_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_activationState1_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_internalType_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_internalType_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_checkCollideWith_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_checkCollideWith_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_padding_set(long jarg1, btCollisionObjectFloatData jarg1_, String jarg2);
  public final static native String btCollisionObjectFloatData_padding_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native long new_btCollisionObjectFloatData();
  public final static native void delete_btCollisionObjectFloatData(long jarg1);
  public final static native void GdxCollisionObjectBridge_userValue_set(long jarg1, GdxCollisionObjectBridge jarg1_, int jarg2);
  public final static native int GdxCollisionObjectBridge_userValue_get(long jarg1, GdxCollisionObjectBridge jarg1_);
  public final static native void GdxCollisionObjectBridge_contactCallbackFlag_set(long jarg1, GdxCollisionObjectBridge jarg1_, int jarg2);
  public final static native int GdxCollisionObjectBridge_contactCallbackFlag_get(long jarg1, GdxCollisionObjectBridge jarg1_);
  public final static native void GdxCollisionObjectBridge_contactCallbackFilter_set(long jarg1, GdxCollisionObjectBridge jarg1_, int jarg2);
  public final static native int GdxCollisionObjectBridge_contactCallbackFilter_get(long jarg1, GdxCollisionObjectBridge jarg1_);
  public final static native long new_GdxCollisionObjectBridge();
  public final static native void delete_GdxCollisionObjectBridge(long jarg1);
  public final static native boolean gdxCheckFilter__SWIG_0(int jarg1, int jarg2);
  public final static native boolean gdxCheckFilter__SWIG_1(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native Vector3 btDbvtAabbMm_Center(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_Lengths(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_Extents(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_Mins(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_Maxs(long jarg1, btDbvtAabbMm jarg1_);
  public final static native long btDbvtAabbMm_FromCE(Vector3 jarg1, Vector3 jarg2);
  public final static native long btDbvtAabbMm_FromCR(Vector3 jarg1, float jarg2);
  public final static native long btDbvtAabbMm_FromMM(Vector3 jarg1, Vector3 jarg2);
  public final static native long btDbvtAabbMm_FromPoints__SWIG_0(long jarg1, btVector3 jarg1_, int jarg2);
  public final static native long btDbvtAabbMm_FromPoints__SWIG_1(long jarg1, int jarg2);
  public final static native void btDbvtAabbMm_Expand(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2);
  public final static native void btDbvtAabbMm_SignedExpand(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2);
  public final static native boolean btDbvtAabbMm_Contain(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native int btDbvtAabbMm_Classify(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2, float jarg3, int jarg4);
  public final static native float btDbvtAabbMm_ProjectMinimum(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2, long jarg3);
  public final static native boolean Intersect__SWIG_0(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native boolean Intersect__SWIG_1(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2);
  public final static native float Proximity(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native int Select(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_, long jarg3, btDbvtAabbMm jarg3_);
  public final static native void Merge(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_, long jarg3, btDbvtAabbMm jarg3_);
  public final static native boolean NotEqual(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native Vector3 btDbvtAabbMm_tMins(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_tMaxs(long jarg1, btDbvtAabbMm jarg1_);
  public final static native long new_btDbvtAabbMm();
  public final static native void delete_btDbvtAabbMm(long jarg1);
  public final static native void btDbvtNode_volume_set(long jarg1, btDbvtNode jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native long btDbvtNode_volume_get(long jarg1, btDbvtNode jarg1_);
  public final static native void btDbvtNode_parent_set(long jarg1, btDbvtNode jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvtNode_parent_get(long jarg1, btDbvtNode jarg1_);
  public final static native boolean btDbvtNode_isleaf(long jarg1, btDbvtNode jarg1_);
  public final static native boolean btDbvtNode_isinternal(long jarg1, btDbvtNode jarg1_);
  public final static native void btDbvtNode_childs_set(long jarg1, btDbvtNode jarg1_, long jarg2);
  public final static native long btDbvtNode_childs_get(long jarg1, btDbvtNode jarg1_);
  public final static native void btDbvtNode_data_set(long jarg1, btDbvtNode jarg1_, long jarg2);
  public final static native long btDbvtNode_data_get(long jarg1, btDbvtNode jarg1_);
  public final static native void btDbvtNode_dataAsInt_set(long jarg1, btDbvtNode jarg1_, int jarg2);
  public final static native int btDbvtNode_dataAsInt_get(long jarg1, btDbvtNode jarg1_);
  public final static native long btDbvtNode_getChild(long jarg1, btDbvtNode jarg1_, int jarg2);
  public final static native long btDbvtNode_getChild0(long jarg1, btDbvtNode jarg1_);
  public final static native long btDbvtNode_getChild1(long jarg1, btDbvtNode jarg1_);
  public final static native long btDbvtNode_getDataAsProxy(long jarg1, btDbvtNode jarg1_);
  public final static native long btDbvtNode_getDataAsProxyClientObject(long jarg1, btDbvtNode jarg1_);
  public final static native long new_btDbvtNode();
  public final static native void delete_btDbvtNode(long jarg1);
  public final static native void btDbvt_sStkNN_a_set(long jarg1, btDbvt.sStkNN jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_sStkNN_a_get(long jarg1, btDbvt.sStkNN jarg1_);
  public final static native void btDbvt_sStkNN_b_set(long jarg1, btDbvt.sStkNN jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_sStkNN_b_get(long jarg1, btDbvt.sStkNN jarg1_);
  public final static native long new_btDbvt_sStkNN__SWIG_0();
  public final static native long new_btDbvt_sStkNN__SWIG_1(long jarg1, btDbvtNode jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native void delete_btDbvt_sStkNN(long jarg1);
  public final static native void btDbvt_sStkNP_node_set(long jarg1, btDbvt.sStkNP jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_sStkNP_node_get(long jarg1, btDbvt.sStkNP jarg1_);
  public final static native void btDbvt_sStkNP_mask_set(long jarg1, btDbvt.sStkNP jarg1_, int jarg2);
  public final static native int btDbvt_sStkNP_mask_get(long jarg1, btDbvt.sStkNP jarg1_);
  public final static native long new_btDbvt_sStkNP(long jarg1, btDbvtNode jarg1_, long jarg2);
  public final static native void delete_btDbvt_sStkNP(long jarg1);
  public final static native void btDbvt_sStkNPS_node_set(long jarg1, btDbvt.sStkNPS jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_sStkNPS_node_get(long jarg1, btDbvt.sStkNPS jarg1_);
  public final static native void btDbvt_sStkNPS_mask_set(long jarg1, btDbvt.sStkNPS jarg1_, int jarg2);
  public final static native int btDbvt_sStkNPS_mask_get(long jarg1, btDbvt.sStkNPS jarg1_);
  public final static native void btDbvt_sStkNPS_value_set(long jarg1, btDbvt.sStkNPS jarg1_, float jarg2);
  public final static native float btDbvt_sStkNPS_value_get(long jarg1, btDbvt.sStkNPS jarg1_);
  public final static native long new_btDbvt_sStkNPS__SWIG_0();
  public final static native long new_btDbvt_sStkNPS__SWIG_1(long jarg1, btDbvtNode jarg1_, long jarg2, float jarg3);
  public final static native void delete_btDbvt_sStkNPS(long jarg1);
  public final static native void btDbvt_sStkCLN_node_set(long jarg1, btDbvt.sStkCLN jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_sStkCLN_node_get(long jarg1, btDbvt.sStkCLN jarg1_);
  public final static native void btDbvt_sStkCLN_parent_set(long jarg1, btDbvt.sStkCLN jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_sStkCLN_parent_get(long jarg1, btDbvt.sStkCLN jarg1_);
  public final static native long new_btDbvt_sStkCLN(long jarg1, btDbvtNode jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native void delete_btDbvt_sStkCLN(long jarg1);
  public final static native void delete_btDbvt_IWriter(long jarg1);
  public final static native void btDbvt_IWriter_Prepare(long jarg1, btDbvt.IWriter jarg1_, long jarg2, btDbvtNode jarg2_, int jarg3);
  public final static native void btDbvt_IWriter_WriteNode(long jarg1, btDbvt.IWriter jarg1_, long jarg2, btDbvtNode jarg2_, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void btDbvt_IWriter_WriteLeaf(long jarg1, btDbvt.IWriter jarg1_, long jarg2, btDbvtNode jarg2_, int jarg3, int jarg4);
  public final static native void delete_btDbvt_IClone(long jarg1);
  public final static native void btDbvt_IClone_CloneLeaf(long jarg1, btDbvt.IClone jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long new_btDbvt_IClone();
  public final static native void btDbvt_root_set(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_root_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_free_set(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_free_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_lkhd_set(long jarg1, btDbvt jarg1_, int jarg2);
  public final static native int btDbvt_lkhd_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_leaves_set(long jarg1, btDbvt jarg1_, int jarg2);
  public final static native int btDbvt_leaves_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_opath_set(long jarg1, btDbvt jarg1_, long jarg2);
  public final static native long btDbvt_opath_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_stkStack_set(long jarg1, btDbvt jarg1_, long jarg2);
  public final static native long btDbvt_stkStack_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_rayTestStack_set(long jarg1, btDbvt jarg1_, long jarg2);
  public final static native long btDbvt_rayTestStack_get(long jarg1, btDbvt jarg1_);
  public final static native long new_btDbvt();
  public final static native void delete_btDbvt(long jarg1);
  public final static native void btDbvt_clear(long jarg1, btDbvt jarg1_);
  public final static native boolean btDbvt_empty(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_optimizeBottomUp(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_optimizeTopDown__SWIG_0(long jarg1, btDbvt jarg1_, int jarg2);
  public final static native void btDbvt_optimizeTopDown__SWIG_1(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_optimizeIncremental(long jarg1, btDbvt jarg1_, int jarg2);
  public final static native long btDbvt_insert(long jarg1, btDbvt jarg1_, long jarg2, btDbvtAabbMm jarg2_, long jarg3);
  public final static native void btDbvt_update__SWIG_0(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, int jarg3);
  public final static native void btDbvt_update__SWIG_1(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native void btDbvt_update__SWIG_2(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_);
  public final static native boolean btDbvt_update__SWIG_3(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_, Vector3 jarg4, float jarg5);
  public final static native boolean btDbvt_update__SWIG_4(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_, Vector3 jarg4);
  public final static native boolean btDbvt_update__SWIG_5(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_, float jarg4);
  public final static native void btDbvt_remove(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native void btDbvt_write(long jarg1, btDbvt jarg1_, long jarg2, btDbvt.IWriter jarg2_);
  public final static native void btDbvt_clone__SWIG_0(long jarg1, btDbvt jarg1_, long jarg2, btDbvt jarg2_, long jarg3, btDbvt.IClone jarg3_);
  public final static native void btDbvt_clone__SWIG_1(long jarg1, btDbvt jarg1_, long jarg2, btDbvt jarg2_);
  public final static native int btDbvt_maxdepth(long jarg1, btDbvtNode jarg1_);
  public final static native int btDbvt_countLeaves(long jarg1, btDbvtNode jarg1_);
  public final static native void btDbvt_extractLeaves(long jarg1, btDbvtNode jarg1_, long jarg2);
  public final static native void btDbvt_benchmark();
  public final static native void btDbvt_enumNodes(long jarg1, btDbvtNode jarg1_, long jarg2, ICollide jarg2_);
  public final static native void btDbvt_enumLeaves(long jarg1, btDbvtNode jarg1_, long jarg2, ICollide jarg2_);
  public final static native void btDbvt_collideTT(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtNode jarg3_, long jarg4, ICollide jarg4_);
  public final static native void btDbvt_collideTTpersistentStack(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtNode jarg3_, long jarg4, ICollide jarg4_);
  public final static native void btDbvt_collideTV(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_, long jarg4, ICollide jarg4_);
  public final static native void btDbvt_rayTest(long jarg1, btDbvtNode jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, ICollide jarg4_);
  public final static native void btDbvt_rayTestInternal(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, long[] jarg6, float jarg7, Vector3 jarg8, Vector3 jarg9, long jarg10, ICollide jarg10_);
  public final static native void btDbvt_collideKDOP__SWIG_0(long jarg1, btDbvtNode jarg1_, long jarg2, btVector3 jarg2_, java.nio.FloatBuffer jarg3, int jarg4, long jarg5, ICollide jarg5_);
  public final static native void btDbvt_collideOCL__SWIG_0(long jarg1, btDbvtNode jarg1_, long jarg2, btVector3 jarg2_, java.nio.FloatBuffer jarg3, Vector3 jarg4, int jarg5, long jarg6, ICollide jarg6_, boolean jarg7);
  public final static native void btDbvt_collideOCL__SWIG_1(long jarg1, btDbvtNode jarg1_, long jarg2, btVector3 jarg2_, java.nio.FloatBuffer jarg3, Vector3 jarg4, int jarg5, long jarg6, ICollide jarg6_);
  public final static native void btDbvt_collideTU(long jarg1, btDbvtNode jarg1_, long jarg2, ICollide jarg2_);
  public final static native int btDbvt_nearest(java.nio.IntBuffer jarg1, long jarg2, btDbvt.sStkNPS jarg2_, float jarg3, int jarg4, int jarg5);
  public final static native int btDbvt_allocate(long jarg1, long jarg2, long jarg3, btDbvt.sStkNPS jarg3_);
  public final static native void btDbvt_collideKDOP__SWIG_1(long jarg1, btDbvtNode jarg1_, java.nio.FloatBuffer jarg2, java.nio.FloatBuffer jarg3, int jarg4, long jarg5, ICollide jarg5_);
  public final static native void btDbvt_collideOCL__SWIG_2(long jarg1, btDbvtNode jarg1_, java.nio.FloatBuffer jarg2, java.nio.FloatBuffer jarg3, Vector3 jarg4, int jarg5, long jarg6, ICollide jarg6_, boolean jarg7);
  public final static native void btDbvt_collideOCL__SWIG_3(long jarg1, btDbvtNode jarg1_, java.nio.FloatBuffer jarg2, java.nio.FloatBuffer jarg3, Vector3 jarg4, int jarg5, long jarg6, ICollide jarg6_);
  public final static native void delete_ICollide(long jarg1);
  public final static native void ICollide_Process__SWIG_0(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtNode jarg3_);
  public final static native void ICollide_ProcessSwigExplicitICollide__SWIG_0(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtNode jarg3_);
  public final static native void ICollide_Process__SWIG_1(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native void ICollide_ProcessSwigExplicitICollide__SWIG_1(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native void ICollide_Process__SWIG_2(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_, float jarg3);
  public final static native void ICollide_ProcessSwigExplicitICollide__SWIG_2(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_, float jarg3);
  public final static native boolean ICollide_Descent(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native boolean ICollide_DescentSwigExplicitICollide(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native boolean ICollide_AllLeaves(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native boolean ICollide_AllLeavesSwigExplicitICollide(long jarg1, ICollide jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long new_ICollide();
  public final static native void ICollide_director_connect(ICollide obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ICollide_change_ownership(ICollide obj, long cptr, boolean take_or_release);
  public final static native void btDbvtProxy_leaf_set(long jarg1, btDbvtProxy jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvtProxy_leaf_get(long jarg1, btDbvtProxy jarg1_);
  public final static native void btDbvtProxy_links_set(long jarg1, btDbvtProxy jarg1_, long jarg2);
  public final static native long btDbvtProxy_links_get(long jarg1, btDbvtProxy jarg1_);
  public final static native void btDbvtProxy_stage_set(long jarg1, btDbvtProxy jarg1_, int jarg2);
  public final static native int btDbvtProxy_stage_get(long jarg1, btDbvtProxy jarg1_);
  public final static native long new_btDbvtProxy(Vector3 jarg1, Vector3 jarg2, long jarg3, short jarg4, short jarg5);
  public final static native void delete_btDbvtProxy(long jarg1);
  public final static native void btDbvtBroadphase_sets_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btDbvt jarg2_);
  public final static native long btDbvtBroadphase_sets_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_stageRoots_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2);
  public final static native long btDbvtBroadphase_stageRoots_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_paircache_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btOverlappingPairCache jarg2_);
  public final static native long btDbvtBroadphase_paircache_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_prediction_set(long jarg1, btDbvtBroadphase jarg1_, float jarg2);
  public final static native float btDbvtBroadphase_prediction_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_stageCurrent_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_stageCurrent_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_fupdates_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_fupdates_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_dupdates_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_dupdates_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_cupdates_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_cupdates_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_newpairs_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_newpairs_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_fixedleft_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_fixedleft_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_updates_call_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2);
  public final static native long btDbvtBroadphase_updates_call_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_updates_done_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2);
  public final static native long btDbvtBroadphase_updates_done_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_updates_ratio_set(long jarg1, btDbvtBroadphase jarg1_, float jarg2);
  public final static native float btDbvtBroadphase_updates_ratio_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_pid_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_pid_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_cid_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_cid_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_gid_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_gid_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_releasepaircache_set(long jarg1, btDbvtBroadphase jarg1_, boolean jarg2);
  public final static native boolean btDbvtBroadphase_releasepaircache_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_deferedcollide_set(long jarg1, btDbvtBroadphase jarg1_, boolean jarg2);
  public final static native boolean btDbvtBroadphase_deferedcollide_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_needcleanup_set(long jarg1, btDbvtBroadphase jarg1_, boolean jarg2);
  public final static native boolean btDbvtBroadphase_needcleanup_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native long new_btDbvtBroadphase__SWIG_0(long jarg1, btOverlappingPairCache jarg1_);
  public final static native long new_btDbvtBroadphase__SWIG_1();
  public final static native void delete_btDbvtBroadphase(long jarg1);
  public final static native void btDbvtBroadphase_collide(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native void btDbvtBroadphase_optimize(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_rayTest__SWIG_0(long jarg1, btDbvtBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btDbvtBroadphase_rayTest__SWIG_1(long jarg1, btDbvtBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btDbvtBroadphase_rayTest__SWIG_2(long jarg1, btDbvtBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native long btDbvtBroadphase_getOverlappingPairCache__SWIG_0(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_performDeferredRemoval(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native void btDbvtBroadphase_setVelocityPrediction(long jarg1, btDbvtBroadphase jarg1_, float jarg2);
  public final static native float btDbvtBroadphase_getVelocityPrediction(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_setAabbForceUpdate(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4, long jarg5, btDispatcher jarg5_);
  public final static native void btDbvtBroadphase_benchmark(long jarg1, btBroadphaseInterface jarg1_);
  public final static native long btDbvtBroadphase_getSet(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native long btDbvtBroadphase_getSet0(long jarg1, btDbvtBroadphase jarg1_);
  public final static native long btDbvtBroadphase_getSet1(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btCompoundShapeChild_transform_set(long jarg1, btCompoundShapeChild jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btCompoundShapeChild_transform_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native void btCompoundShapeChild_childShape_set(long jarg1, btCompoundShapeChild jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native long btCompoundShapeChild_childShape_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native void btCompoundShapeChild_childShapeType_set(long jarg1, btCompoundShapeChild jarg1_, int jarg2);
  public final static native int btCompoundShapeChild_childShapeType_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native void btCompoundShapeChild_childMargin_set(long jarg1, btCompoundShapeChild jarg1_, float jarg2);
  public final static native float btCompoundShapeChild_childMargin_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native void btCompoundShapeChild_node_set(long jarg1, btCompoundShapeChild jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btCompoundShapeChild_node_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native long new_btCompoundShapeChild();
  public final static native void delete_btCompoundShapeChild(long jarg1);
  public final static native long new_btCompoundShape__SWIG_0(boolean jarg1, int jarg2);
  public final static native long new_btCompoundShape__SWIG_1(boolean jarg1);
  public final static native long new_btCompoundShape__SWIG_2();
  public final static native void delete_btCompoundShape(long jarg1);
  public final static native void btCompoundShape_internalAddChildShape(long jarg1, btCompoundShape jarg1_, Matrix4 jarg2, long jarg3, btCollisionShape jarg3_);
  public final static native void btCompoundShape_internalRemoveChildShape(long jarg1, btCompoundShape jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native void btCompoundShape_internalRemoveChildShapeByIndex(long jarg1, btCompoundShape jarg1_, int jarg2);
  public final static native int btCompoundShape_getNumChildShapes(long jarg1, btCompoundShape jarg1_);
  public final static native Matrix4 btCompoundShape_getChildTransform__SWIG_0(long jarg1, btCompoundShape jarg1_, int jarg2);
  public final static native void btCompoundShape_updateChildTransform__SWIG_0(long jarg1, btCompoundShape jarg1_, int jarg2, Matrix4 jarg3, boolean jarg4);
  public final static native void btCompoundShape_updateChildTransform__SWIG_1(long jarg1, btCompoundShape jarg1_, int jarg2, Matrix4 jarg3);
  public final static native long btCompoundShape_getChildList(long jarg1, btCompoundShape jarg1_);
  public final static native void btCompoundShape_recalculateLocalAabb(long jarg1, btCompoundShape jarg1_);
  public final static native long btCompoundShape_getDynamicAabbTree__SWIG_0(long jarg1, btCompoundShape jarg1_);
  public final static native void btCompoundShape_createAabbTreeFromChildren(long jarg1, btCompoundShape jarg1_);
  public final static native void btCompoundShape_calculatePrincipalAxisTransform(long jarg1, btCompoundShape jarg1_, java.nio.FloatBuffer jarg2, Matrix4 jarg3, Vector3 jarg4);
  public final static native int btCompoundShape_getUpdateRevision(long jarg1, btCompoundShape jarg1_);
  public final static native void btCompoundShapeChildData_transform_set(long jarg1, btCompoundShapeChildData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btCompoundShapeChildData_transform_get(long jarg1, btCompoundShapeChildData jarg1_);
  public final static native void btCompoundShapeChildData_childShape_set(long jarg1, btCompoundShapeChildData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btCompoundShapeChildData_childShape_get(long jarg1, btCompoundShapeChildData jarg1_);
  public final static native void btCompoundShapeChildData_childShapeType_set(long jarg1, btCompoundShapeChildData jarg1_, int jarg2);
  public final static native int btCompoundShapeChildData_childShapeType_get(long jarg1, btCompoundShapeChildData jarg1_);
  public final static native void btCompoundShapeChildData_childMargin_set(long jarg1, btCompoundShapeChildData jarg1_, float jarg2);
  public final static native float btCompoundShapeChildData_childMargin_get(long jarg1, btCompoundShapeChildData jarg1_);
  public final static native long new_btCompoundShapeChildData();
  public final static native void delete_btCompoundShapeChildData(long jarg1);
  public final static native void btCompoundShapeData_collisionShapeData_set(long jarg1, btCompoundShapeData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btCompoundShapeData_collisionShapeData_get(long jarg1, btCompoundShapeData jarg1_);
  public final static native void btCompoundShapeData_childShapePtr_set(long jarg1, btCompoundShapeData jarg1_, long jarg2, btCompoundShapeChildData jarg2_);
  public final static native long btCompoundShapeData_childShapePtr_get(long jarg1, btCompoundShapeData jarg1_);
  public final static native void btCompoundShapeData_numChildShapes_set(long jarg1, btCompoundShapeData jarg1_, int jarg2);
  public final static native int btCompoundShapeData_numChildShapes_get(long jarg1, btCompoundShapeData jarg1_);
  public final static native void btCompoundShapeData_collisionMargin_set(long jarg1, btCompoundShapeData jarg1_, float jarg2);
  public final static native float btCompoundShapeData_collisionMargin_get(long jarg1, btCompoundShapeData jarg1_);
  public final static native long new_btCompoundShapeData();
  public final static native void delete_btCompoundShapeData(long jarg1);
  public final static native long new_btCollisionObjectArray__SWIG_0();
  public final static native void delete_btCollisionObjectArray(long jarg1);
  public final static native long new_btCollisionObjectArray__SWIG_1(long jarg1, btCollisionObjectArray jarg1_);
  public final static native int btCollisionObjectArray_size(long jarg1, btCollisionObjectArray jarg1_);
  public final static native long btCollisionObjectArray_at__SWIG_0(long jarg1, btCollisionObjectArray jarg1_, int jarg2);
  public final static native void btCollisionObjectArray_clear(long jarg1, btCollisionObjectArray jarg1_);
  public final static native void btCollisionObjectArray_pop_back(long jarg1, btCollisionObjectArray jarg1_);
  public final static native void btCollisionObjectArray_resizeNoInitialize(long jarg1, btCollisionObjectArray jarg1_, int jarg2);
  public final static native void btCollisionObjectArray_resize__SWIG_0(long jarg1, btCollisionObjectArray jarg1_, int jarg2, long jarg3, btCollisionObject jarg3_);
  public final static native void btCollisionObjectArray_resize__SWIG_1(long jarg1, btCollisionObjectArray jarg1_, int jarg2);
  public final static native long btCollisionObjectArray_expandNonInitializing(long jarg1, btCollisionObjectArray jarg1_);
  public final static native long btCollisionObjectArray_expand__SWIG_0(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long btCollisionObjectArray_expand__SWIG_1(long jarg1, btCollisionObjectArray jarg1_);
  public final static native void btCollisionObjectArray_push_back(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native int btCollisionObjectArray_capacity(long jarg1, btCollisionObjectArray jarg1_);
  public final static native void btCollisionObjectArray_reserve(long jarg1, btCollisionObjectArray jarg1_, int jarg2);
  public final static native long new_btCollisionObjectArray_less();
  public final static native void delete_btCollisionObjectArray_less(long jarg1);
  public final static native void btCollisionObjectArray_swap(long jarg1, btCollisionObjectArray jarg1_, int jarg2, int jarg3);
  public final static native int btCollisionObjectArray_findBinarySearch(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native int btCollisionObjectArray_findLinearSearch(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionObjectArray_remove(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionObjectArray_initializeFromBuffer(long jarg1, btCollisionObjectArray jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void btCollisionObjectArray_copyFromArray(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObjectArray jarg2_);
  public final static native long new_btCollisionObjectConstArray__SWIG_0();
  public final static native void delete_btCollisionObjectConstArray(long jarg1);
  public final static native long new_btCollisionObjectConstArray__SWIG_1(long jarg1, btCollisionObjectConstArray jarg1_);
  public final static native int btCollisionObjectConstArray_size(long jarg1, btCollisionObjectConstArray jarg1_);
  public final static native long btCollisionObjectConstArray_at__SWIG_0(long jarg1, btCollisionObjectConstArray jarg1_, int jarg2);
  public final static native void btCollisionObjectConstArray_clear(long jarg1, btCollisionObjectConstArray jarg1_);
  public final static native void btCollisionObjectConstArray_pop_back(long jarg1, btCollisionObjectConstArray jarg1_);
  public final static native void btCollisionObjectConstArray_resizeNoInitialize(long jarg1, btCollisionObjectConstArray jarg1_, int jarg2);
  public final static native void btCollisionObjectConstArray_resize__SWIG_0(long jarg1, btCollisionObjectConstArray jarg1_, int jarg2, long jarg3, btCollisionObject jarg3_);
  public final static native void btCollisionObjectConstArray_resize__SWIG_1(long jarg1, btCollisionObjectConstArray jarg1_, int jarg2);
  public final static native long btCollisionObjectConstArray_expandNonInitializing(long jarg1, btCollisionObjectConstArray jarg1_);
  public final static native long btCollisionObjectConstArray_expand__SWIG_0(long jarg1, btCollisionObjectConstArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long btCollisionObjectConstArray_expand__SWIG_1(long jarg1, btCollisionObjectConstArray jarg1_);
  public final static native void btCollisionObjectConstArray_push_back(long jarg1, btCollisionObjectConstArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native int btCollisionObjectConstArray_capacity(long jarg1, btCollisionObjectConstArray jarg1_);
  public final static native void btCollisionObjectConstArray_reserve(long jarg1, btCollisionObjectConstArray jarg1_, int jarg2);
  public final static native long new_btCollisionObjectConstArray_less();
  public final static native void delete_btCollisionObjectConstArray_less(long jarg1);
  public final static native void btCollisionObjectConstArray_swap(long jarg1, btCollisionObjectConstArray jarg1_, int jarg2, int jarg3);
  public final static native int btCollisionObjectConstArray_findBinarySearch(long jarg1, btCollisionObjectConstArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native int btCollisionObjectConstArray_findLinearSearch(long jarg1, btCollisionObjectConstArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionObjectConstArray_remove(long jarg1, btCollisionObjectConstArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionObjectConstArray_initializeFromBuffer(long jarg1, btCollisionObjectConstArray jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void btCollisionObjectConstArray_copyFromArray(long jarg1, btCollisionObjectConstArray jarg1_, long jarg2, btCollisionObjectConstArray jarg2_);
  public final static native void btCollisionObjectWrapper_parent_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
  public final static native long btCollisionObjectWrapper_parent_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native void btCollisionObjectWrapper_shape_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native long btCollisionObjectWrapper_shape_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native void btCollisionObjectWrapper_collisionObject_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long btCollisionObjectWrapper_collisionObject_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native Matrix4 btCollisionObjectWrapper_worldTransform_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native void btCollisionObjectWrapper_partId_set(long jarg1, btCollisionObjectWrapper jarg1_, int jarg2);
  public final static native int btCollisionObjectWrapper_partId_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native void btCollisionObjectWrapper_index_set(long jarg1, btCollisionObjectWrapper jarg1_, int jarg2);
  public final static native int btCollisionObjectWrapper_index_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native long btCollisionObjectWrapper_getCollisionShape(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native long new_CollisionObjectWrapper__SWIG_0(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionShape jarg2_, long jarg3, btCollisionObject jarg3_, Matrix4 jarg4, int jarg5, int jarg6);
  public final static native long new_CollisionObjectWrapper__SWIG_1(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionShape jarg2_, long jarg3, btCollisionObject jarg3_, Matrix4 jarg4, int jarg5);
  public final static native long new_CollisionObjectWrapper__SWIG_2(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionShape jarg2_, long jarg3, btCollisionObject jarg3_, Matrix4 jarg4);
  public final static native long new_CollisionObjectWrapper__SWIG_3(long jarg1, btCollisionShape jarg1_, long jarg2, btCollisionObject jarg2_, Matrix4 jarg3, int jarg4, int jarg5);
  public final static native long new_CollisionObjectWrapper__SWIG_4(long jarg1, btCollisionShape jarg1_, long jarg2, btCollisionObject jarg2_, Matrix4 jarg3, int jarg4);
  public final static native long new_CollisionObjectWrapper__SWIG_5(long jarg1, btCollisionShape jarg1_, long jarg2, btCollisionObject jarg2_, Matrix4 jarg3);
  public final static native long new_CollisionObjectWrapper__SWIG_6(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObject jarg2_, int jarg3, int jarg4);
  public final static native long new_CollisionObjectWrapper__SWIG_7(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObject jarg2_, int jarg3);
  public final static native long new_CollisionObjectWrapper__SWIG_8(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long new_CollisionObjectWrapper__SWIG_9(long jarg1, btCollisionObject jarg1_, int jarg2, int jarg3);
  public final static native long new_CollisionObjectWrapper__SWIG_10(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native long new_CollisionObjectWrapper__SWIG_11(long jarg1, btCollisionObject jarg1_);
  public final static native long CollisionObjectWrapper_getWrapper(long jarg1, CollisionObjectWrapper jarg1_);
  public final static native void delete_CollisionObjectWrapper(long jarg1);
  public final static native long new_btEmptyAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native long btEmptyAlgorithm_CreateFunc_CreateCollisionAlgorithm(long jarg1, btEmptyAlgorithm.CreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btEmptyAlgorithm_CreateFunc();
  public final static native void delete_btEmptyAlgorithm_CreateFunc(long jarg1);
  public final static native void delete_btEmptyAlgorithm(long jarg1);
  public final static native void delete_btActivatingCollisionAlgorithm(long jarg1);
  public final static native void btConvexTriangleCallback_triangleCount_set(long jarg1, btConvexTriangleCallback jarg1_, int jarg2);
  public final static native int btConvexTriangleCallback_triangleCount_get(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native void btConvexTriangleCallback_manifoldPtr_set(long jarg1, btConvexTriangleCallback jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native long btConvexTriangleCallback_manifoldPtr_get(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native long new_btConvexTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
  public final static native void btConvexTriangleCallback_setTimeStepAndCounters(long jarg1, btConvexTriangleCallback jarg1_, float jarg2, long jarg3, btDispatcherInfo jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btCollisionObjectWrapper jarg5_, long jarg6, btManifoldResult jarg6_);
  public final static native void btConvexTriangleCallback_clearWrapperData(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native void delete_btConvexTriangleCallback(long jarg1);
  public final static native void btConvexTriangleCallback_processTriangle(long jarg1, btConvexTriangleCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native void btConvexTriangleCallback_processTriangleSwigExplicitbtConvexTriangleCallback(long jarg1, btConvexTriangleCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native void btConvexTriangleCallback_clearCache(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native Vector3 btConvexTriangleCallback_getAabbMin(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native Vector3 btConvexTriangleCallback_getAabbMax(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native void btConvexTriangleCallback_director_connect(btConvexTriangleCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btConvexTriangleCallback_change_ownership(btConvexTriangleCallback obj, long cptr, boolean take_or_release);
  public final static native long new_btConvexConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
  public final static native void delete_btConvexConcaveCollisionAlgorithm(long jarg1);
  public final static native void btConvexConcaveCollisionAlgorithm_clearCache(long jarg1, btConvexConcaveCollisionAlgorithm jarg1_);
  public final static native long btConvexConcaveCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long jarg1, btConvexConcaveCollisionAlgorithm.CreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btConvexConcaveCollisionAlgorithm_CreateFunc();
  public final static native void delete_btConvexConcaveCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native long btConvexConcaveCollisionAlgorithm_SwappedCreateFunc_CreateCollisionAlgorithm(long jarg1, btConvexConcaveCollisionAlgorithm.SwappedCreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc();
  public final static native void delete_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc(long jarg1);
  public final static native long new_btConvexPlaneCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5, int jarg6, int jarg7);
  public final static native void delete_btConvexPlaneCollisionAlgorithm(long jarg1);
  public final static native void btConvexPlaneCollisionAlgorithm_collideSingleContact(long jarg1, btConvexPlaneCollisionAlgorithm jarg1_, Quaternion jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btDispatcherInfo jarg5_, long jarg6, btManifoldResult jarg6_);
  public final static native void btConvexPlaneCollisionAlgorithm_CreateFunc_numPerturbationIterations_set(long jarg1, btConvexPlaneCollisionAlgorithm.CreateFunc jarg1_, int jarg2);
  public final static native int btConvexPlaneCollisionAlgorithm_CreateFunc_numPerturbationIterations_get(long jarg1, btConvexPlaneCollisionAlgorithm.CreateFunc jarg1_);
  public final static native void btConvexPlaneCollisionAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set(long jarg1, btConvexPlaneCollisionAlgorithm.CreateFunc jarg1_, int jarg2);
  public final static native int btConvexPlaneCollisionAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get(long jarg1, btConvexPlaneCollisionAlgorithm.CreateFunc jarg1_);
  public final static native long new_btConvexPlaneCollisionAlgorithm_CreateFunc();
  public final static native long btConvexPlaneCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long jarg1, btConvexPlaneCollisionAlgorithm.CreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native void delete_btConvexPlaneCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native void gCompoundCompoundChildShapePairCallback_set(long jarg1);
  public final static native long gCompoundCompoundChildShapePairCallback_get();
  public final static native long new_btCompoundCompoundCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
  public final static native void delete_btCompoundCompoundCollisionAlgorithm(long jarg1);
  public final static native void btCompoundCompoundCollisionAlgorithm_processCollision(long jarg1, btCompoundCompoundCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
  public final static native float btCompoundCompoundCollisionAlgorithm_calculateTimeOfImpact(long jarg1, btCompoundCompoundCollisionAlgorithm jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
  public final static native void btCompoundCompoundCollisionAlgorithm_getAllContactManifolds(long jarg1, btCompoundCompoundCollisionAlgorithm jarg1_, long jarg2, btPersistentManifoldArray jarg2_);
  public final static native long btCompoundCompoundCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long jarg1, btCompoundCompoundCollisionAlgorithm.CreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btCompoundCompoundCollisionAlgorithm_CreateFunc();
  public final static native void delete_btCompoundCompoundCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native long btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc_CreateCollisionAlgorithm(long jarg1, btCompoundCompoundCollisionAlgorithm.SwappedCreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc();
  public final static native void delete_btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc(long jarg1);
  public final static native void delete_btCollisionConfiguration(long jarg1);
  public final static native long btCollisionConfiguration_getPersistentManifoldPool(long jarg1, btCollisionConfiguration jarg1_);
  public final static native long btCollisionConfiguration_getCollisionAlgorithmPool(long jarg1, btCollisionConfiguration jarg1_);
  public final static native long btCollisionConfiguration_getCollisionAlgorithmCreateFunc(long jarg1, btCollisionConfiguration jarg1_, int jarg2, int jarg3);
  public final static native void btDefaultCollisionConstructionInfo_persistentManifoldPool_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, long jarg2, btPoolAllocator jarg2_);
  public final static native long btDefaultCollisionConstructionInfo_persistentManifoldPool_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_collisionAlgorithmPool_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, long jarg2, btPoolAllocator jarg2_);
  public final static native long btDefaultCollisionConstructionInfo_collisionAlgorithmPool_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_defaultMaxPersistentManifoldPoolSize_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, int jarg2);
  public final static native int btDefaultCollisionConstructionInfo_defaultMaxPersistentManifoldPoolSize_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_defaultMaxCollisionAlgorithmPoolSize_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, int jarg2);
  public final static native int btDefaultCollisionConstructionInfo_defaultMaxCollisionAlgorithmPoolSize_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_customCollisionAlgorithmMaxElementSize_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, int jarg2);
  public final static native int btDefaultCollisionConstructionInfo_customCollisionAlgorithmMaxElementSize_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_useEpaPenetrationAlgorithm_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, int jarg2);
  public final static native int btDefaultCollisionConstructionInfo_useEpaPenetrationAlgorithm_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native long new_btDefaultCollisionConstructionInfo();
  public final static native void delete_btDefaultCollisionConstructionInfo(long jarg1);
  public final static native long new_btDefaultCollisionConfiguration__SWIG_0(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native long new_btDefaultCollisionConfiguration__SWIG_1();
  public final static native void delete_btDefaultCollisionConfiguration(long jarg1);
  public final static native long btDefaultCollisionConfiguration_getSimplexSolver(long jarg1, btDefaultCollisionConfiguration jarg1_);
  public final static native void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0(long jarg1, btDefaultCollisionConfiguration jarg1_, int jarg2, int jarg3);
  public final static native void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1(long jarg1, btDefaultCollisionConfiguration jarg1_, int jarg2);
  public final static native void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2(long jarg1, btDefaultCollisionConfiguration jarg1_);
  public final static native void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0(long jarg1, btDefaultCollisionConfiguration jarg1_, int jarg2, int jarg3);
  public final static native void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1(long jarg1, btDefaultCollisionConfiguration jarg1_, int jarg2);
  public final static native void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2(long jarg1, btDefaultCollisionConfiguration jarg1_);
  public final static native void gContactAddedCallback_set(long jarg1);
  public final static native long gContactAddedCallback_get();
  public final static native long new_btManifoldResult__SWIG_0();
  public final static native long new_btManifoldResult__SWIG_1(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
  public final static native void delete_btManifoldResult(long jarg1);
  public final static native void btManifoldResult_setPersistentManifold(long jarg1, btManifoldResult jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native long btManifoldResult_getPersistentManifold__SWIG_0(long jarg1, btManifoldResult jarg1_);
  public final static native void btManifoldResult_refreshContactPoints(long jarg1, btManifoldResult jarg1_);
  public final static native long btManifoldResult_getBody0Wrap(long jarg1, btManifoldResult jarg1_);
  public final static native long btManifoldResult_getBody1Wrap(long jarg1, btManifoldResult jarg1_);
  public final static native void btManifoldResult_setBody0Wrap(long jarg1, btManifoldResult jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
  public final static native void btManifoldResult_setBody1Wrap(long jarg1, btManifoldResult jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
  public final static native long btManifoldResult_getBody0Internal(long jarg1, btManifoldResult jarg1_);
  public final static native long btManifoldResult_getBody1Internal(long jarg1, btManifoldResult jarg1_);
  public final static native float btManifoldResult_calculateCombinedRestitution(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native float btManifoldResult_calculateCombinedFriction(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native int BT_SIMPLE_NULL_PAIR_get();
  public final static native long new_btSimplePair(int jarg1, int jarg2);
  public final static native void btSimplePair_indexA_set(long jarg1, btSimplePair jarg1_, int jarg2);
  public final static native int btSimplePair_indexA_get(long jarg1, btSimplePair jarg1_);
  public final static native void btSimplePair_indexB_set(long jarg1, btSimplePair jarg1_, int jarg2);
  public final static native int btSimplePair_indexB_get(long jarg1, btSimplePair jarg1_);
  public final static native void btSimplePair_userPointer_set(long jarg1, btSimplePair jarg1_, long jarg2);
  public final static native long btSimplePair_userPointer_get(long jarg1, btSimplePair jarg1_);
  public final static native void btSimplePair_userValue_set(long jarg1, btSimplePair jarg1_, int jarg2);
  public final static native int btSimplePair_userValue_get(long jarg1, btSimplePair jarg1_);
  public final static native void delete_btSimplePair(long jarg1);
  public final static native void gOverlappingSimplePairs_set(int jarg1);
  public final static native int gOverlappingSimplePairs_get();
  public final static native void gRemoveSimplePairs_set(int jarg1);
  public final static native int gRemoveSimplePairs_get();
  public final static native void gAddedSimplePairs_set(int jarg1);
  public final static native int gAddedSimplePairs_get();
  public final static native void gFindSimplePairs_set(int jarg1);
  public final static native int gFindSimplePairs_get();
  public final static native long new_btHashedSimplePairCache();
  public final static native void delete_btHashedSimplePairCache(long jarg1);
  public final static native void btHashedSimplePairCache_removeAllPairs(long jarg1, btHashedSimplePairCache jarg1_);
  public final static native long btHashedSimplePairCache_removeOverlappingPair(long jarg1, btHashedSimplePairCache jarg1_, int jarg2, int jarg3);
  public final static native long btHashedSimplePairCache_addOverlappingPair(long jarg1, btHashedSimplePairCache jarg1_, int jarg2, int jarg3);
  public final static native long btHashedSimplePairCache_getOverlappingPairArrayPtr__SWIG_0(long jarg1, btHashedSimplePairCache jarg1_);
  public final static native long btHashedSimplePairCache_getOverlappingPairArray__SWIG_0(long jarg1, btHashedSimplePairCache jarg1_);
  public final static native long btHashedSimplePairCache_findPair(long jarg1, btHashedSimplePairCache jarg1_, int jarg2, int jarg3);
  public final static native int btHashedSimplePairCache_GetCount(long jarg1, btHashedSimplePairCache jarg1_);
  public final static native int btHashedSimplePairCache_getNumOverlappingPairs(long jarg1, btHashedSimplePairCache jarg1_);
  public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_1(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native void delete_btSphereSphereCollisionAlgorithm(long jarg1);
  public final static native long btSphereSphereCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long jarg1, btSphereSphereCollisionAlgorithm.CreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btSphereSphereCollisionAlgorithm_CreateFunc();
  public final static native void delete_btSphereSphereCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native void delete_btBoxBoxCollisionAlgorithm(long jarg1);
  public final static native long btBoxBoxCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long jarg1, btBoxBoxCollisionAlgorithm.CreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btBoxBoxCollisionAlgorithm_CreateFunc();
  public final static native void delete_btBoxBoxCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native void btCollisionAlgorithmCreateFunc_swapped_set(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, boolean jarg2);
  public final static native boolean btCollisionAlgorithmCreateFunc_swapped_get(long jarg1, btCollisionAlgorithmCreateFunc jarg1_);
  public final static native long new_btCollisionAlgorithmCreateFunc();
  public final static native void delete_btCollisionAlgorithmCreateFunc(long jarg1);
  public final static native long btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native void delete_btBox2dBox2dCollisionAlgorithm(long jarg1);
  public final static native long new_btBox2dBox2dCollisionAlgorithm_CreateFunc();
  public final static native void delete_btBox2dBox2dCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native void btElement_id_set(long jarg1, btElement jarg1_, int jarg2);
  public final static native int btElement_id_get(long jarg1, btElement jarg1_);
  public final static native void btElement_sz_set(long jarg1, btElement jarg1_, int jarg2);
  public final static native int btElement_sz_get(long jarg1, btElement jarg1_);
  public final static native long new_btElement();
  public final static native void delete_btElement(long jarg1);
  public final static native long new_btUnionFind();
  public final static native void delete_btUnionFind(long jarg1);
  public final static native void btUnionFind_sortIslands(long jarg1, btUnionFind jarg1_);
  public final static native void btUnionFind_reset(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native int btUnionFind_getNumElements(long jarg1, btUnionFind jarg1_);
  public final static native boolean btUnionFind_isRoot(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native long btUnionFind_getElement__SWIG_0(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native void btUnionFind_allocate(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native void btUnionFind_Free(long jarg1, btUnionFind jarg1_);
  public final static native int btUnionFind_find__SWIG_0(long jarg1, btUnionFind jarg1_, int jarg2, int jarg3);
  public final static native void btUnionFind_unite(long jarg1, btUnionFind jarg1_, int jarg2, int jarg3);
  public final static native int btUnionFind_find__SWIG_1(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
  public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_1(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native void delete_btSphereTriangleCollisionAlgorithm(long jarg1);
  public final static native long new_btSphereTriangleCollisionAlgorithm_CreateFunc();
  public final static native void delete_btSphereTriangleCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native long new_btSimulationIslandManager();
  public final static native void delete_btSimulationIslandManager(long jarg1);
  public final static native void btSimulationIslandManager_initUnionFind(long jarg1, btSimulationIslandManager jarg1_, int jarg2);
  public final static native long btSimulationIslandManager_getUnionFind(long jarg1, btSimulationIslandManager jarg1_);
  public final static native void btSimulationIslandManager_updateActivationState(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btCollisionWorld jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native void btSimulationIslandManager_storeIslandActivationState(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btCollisionWorld jarg2_);
  public final static native void btSimulationIslandManager_findUnions(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btDispatcher jarg2_, long jarg3, btCollisionWorld jarg3_);
  public final static native void delete_btSimulationIslandManager_IslandCallback(long jarg1);
  public final static native void btSimulationIslandManager_IslandCallback_processIsland(long jarg1, btSimulationIslandManager.IslandCallback jarg1_, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void btSimulationIslandManager_buildAndProcessIslands(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btDispatcher jarg2_, long jarg3, btCollisionWorld jarg3_, long jarg4, btSimulationIslandManager.IslandCallback jarg4_);
  public final static native void btSimulationIslandManager_buildIslands(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btDispatcher jarg2_, long jarg3, btCollisionWorld jarg3_);
  public final static native boolean btSimulationIslandManager_getSplitIslands(long jarg1, btSimulationIslandManager jarg1_);
  public final static native void btSimulationIslandManager_setSplitIslands(long jarg1, btSimulationIslandManager jarg1_, boolean jarg2);
  public final static native long new_btGhostObject();
  public final static native void delete_btGhostObject(long jarg1);
  public final static native void btGhostObject_convexSweepTest__SWIG_0(long jarg1, btGhostObject jarg1_, long jarg2, btConvexShape jarg2_, Matrix4 jarg3, Matrix4 jarg4, long jarg5, ConvexResultCallback jarg5_, float jarg6);
  public final static native void btGhostObject_convexSweepTest__SWIG_1(long jarg1, btGhostObject jarg1_, long jarg2, btConvexShape jarg2_, Matrix4 jarg3, Matrix4 jarg4, long jarg5, ConvexResultCallback jarg5_);
  public final static native void btGhostObject_rayTest(long jarg1, btGhostObject jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, RayResultCallback jarg4_);
  public final static native void btGhostObject_addOverlappingObjectInternal__SWIG_0(long jarg1, btGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native void btGhostObject_addOverlappingObjectInternal__SWIG_1(long jarg1, btGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native void btGhostObject_removeOverlappingObjectInternal__SWIG_0(long jarg1, btGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_, long jarg4, btBroadphaseProxy jarg4_);
  public final static native void btGhostObject_removeOverlappingObjectInternal__SWIG_1(long jarg1, btGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native int btGhostObject_getNumOverlappingObjects(long jarg1, btGhostObject jarg1_);
  public final static native long btGhostObject_getOverlappingObject__SWIG_0(long jarg1, btGhostObject jarg1_, int jarg2);
  public final static native long btGhostObject_getOverlappingPairs__SWIG_0(long jarg1, btGhostObject jarg1_);
  public final static native long btGhostObject_upcast__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native long new_btPairCachingGhostObject();
  public final static native void delete_btPairCachingGhostObject(long jarg1);
  public final static native void btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_0(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native void btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_1(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native void btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_0(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_, long jarg4, btBroadphaseProxy jarg4_);
  public final static native void btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_1(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native long btPairCachingGhostObject_getOverlappingPairCache(long jarg1, btPairCachingGhostObject jarg1_);
  public final static native long new_btGhostPairCallback();
  public final static native void delete_btGhostPairCallback(long jarg1);
  public final static native long btGhostPairCallback_addOverlappingPair(long jarg1, btGhostPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btGhostPairCallback_addOverlappingPairSwigExplicitbtGhostPairCallback(long jarg1, btGhostPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btGhostPairCallback_removeOverlappingPair(long jarg1, btGhostPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_, long jarg4, btDispatcher jarg4_);
  public final static native long btGhostPairCallback_removeOverlappingPairSwigExplicitbtGhostPairCallback(long jarg1, btGhostPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_, long jarg4, btDispatcher jarg4_);
  public final static native void btGhostPairCallback_removeOverlappingPairsContainingProxy(long jarg1, btGhostPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native void btGhostPairCallback_removeOverlappingPairsContainingProxySwigExplicitbtGhostPairCallback(long jarg1, btGhostPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native void btGhostPairCallback_director_connect(btGhostPairCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btGhostPairCallback_change_ownership(btGhostPairCallback obj, long cptr, boolean take_or_release);
  public final static native long new_btCollisionWorld(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btCollisionConfiguration jarg3_);
  public final static native void delete_btCollisionWorld(long jarg1);
  public final static native void btCollisionWorld_setBroadphase(long jarg1, btCollisionWorld jarg1_, long jarg2, btBroadphaseInterface jarg2_);
  public final static native long btCollisionWorld_getBroadphase__SWIG_0(long jarg1, btCollisionWorld jarg1_);
  public final static native long btCollisionWorld_getPairCache(long jarg1, btCollisionWorld jarg1_);
  public final static native long btCollisionWorld_getDispatcher__SWIG_0(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_updateSingleAabb(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionWorld_updateAabbs(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_computeOverlappingPairs(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_setDebugDrawer(long jarg1, btCollisionWorld jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native long btCollisionWorld_getDebugDrawer(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_debugDrawWorld(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_debugDrawObject(long jarg1, btCollisionWorld jarg1_, Matrix4 jarg2, long jarg3, btCollisionShape jarg3_, Vector3 jarg4);
  public final static native int btCollisionWorld_getNumCollisionObjects(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_rayTest(long jarg1, btCollisionWorld jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, RayResultCallback jarg4_);
  public final static native void btCollisionWorld_convexSweepTest__SWIG_0(long jarg1, btCollisionWorld jarg1_, long jarg2, btConvexShape jarg2_, Matrix4 jarg3, Matrix4 jarg4, long jarg5, ConvexResultCallback jarg5_, float jarg6);
  public final static native void btCollisionWorld_convexSweepTest__SWIG_1(long jarg1, btCollisionWorld jarg1_, long jarg2, btConvexShape jarg2_, Matrix4 jarg3, Matrix4 jarg4, long jarg5, ConvexResultCallback jarg5_);
  public final static native void btCollisionWorld_contactTest(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, ContactResultCallback jarg3_);
  public final static native void btCollisionWorld_contactPairTest(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, ContactResultCallback jarg4_);
  public final static native void btCollisionWorld_rayTestSingle(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionShape jarg4_, Matrix4 jarg5, long jarg6, RayResultCallback jarg6_);
  public final static native void btCollisionWorld_rayTestSingleInternal(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, RayResultCallback jarg4_);
  public final static native void btCollisionWorld_objectQuerySingle(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, btCollisionObject jarg4_, long jarg5, btCollisionShape jarg5_, Matrix4 jarg6, long jarg7, ConvexResultCallback jarg7_, float jarg8);
  public final static native void btCollisionWorld_objectQuerySingleInternal(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, ConvexResultCallback jarg5_, float jarg6);
  public final static native void btCollisionWorld_addCollisionObject__SWIG_0(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3, short jarg4);
  public final static native void btCollisionWorld_addCollisionObject__SWIG_1(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3);
  public final static native void btCollisionWorld_addCollisionObject__SWIG_2(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long btCollisionWorld_getCollisionObjectArray__SWIG_0(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_removeCollisionObject(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionWorld_performDiscreteCollisionDetection(long jarg1, btCollisionWorld jarg1_);
  public final static native long btCollisionWorld_getDispatchInfo__SWIG_0(long jarg1, btCollisionWorld jarg1_);
  public final static native boolean btCollisionWorld_getForceUpdateAllAabbs(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_setForceUpdateAllAabbs(long jarg1, btCollisionWorld jarg1_, boolean jarg2);
  public final static native void btCollisionWorld_serialize(long jarg1, btCollisionWorld jarg1_, long jarg2);
  public final static native void LocalShapeInfo_shapePart_set(long jarg1, LocalShapeInfo jarg1_, int jarg2);
  public final static native int LocalShapeInfo_shapePart_get(long jarg1, LocalShapeInfo jarg1_);
  public final static native void LocalShapeInfo_triangleIndex_set(long jarg1, LocalShapeInfo jarg1_, int jarg2);
  public final static native int LocalShapeInfo_triangleIndex_get(long jarg1, LocalShapeInfo jarg1_);
  public final static native long new_LocalShapeInfo();
  public final static native void delete_LocalShapeInfo(long jarg1);
  public final static native long new_LocalRayResult(long jarg1, btCollisionObject jarg1_, long jarg2, LocalShapeInfo jarg2_, Vector3 jarg3, float jarg4);
  public final static native void LocalRayResult_collisionObject_set(long jarg1, LocalRayResult jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long LocalRayResult_collisionObject_get(long jarg1, LocalRayResult jarg1_);
  public final static native void LocalRayResult_localShapeInfo_set(long jarg1, LocalRayResult jarg1_, long jarg2, LocalShapeInfo jarg2_);
  public final static native long LocalRayResult_localShapeInfo_get(long jarg1, LocalRayResult jarg1_);
  public final static native void LocalRayResult_hitNormalLocal_set(long jarg1, LocalRayResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long LocalRayResult_hitNormalLocal_get(long jarg1, LocalRayResult jarg1_);
  public final static native void LocalRayResult_hitFraction_set(long jarg1, LocalRayResult jarg1_, float jarg2);
  public final static native float LocalRayResult_hitFraction_get(long jarg1, LocalRayResult jarg1_);
  public final static native void delete_LocalRayResult(long jarg1);
  public final static native void RayResultCallback_closestHitFraction_set(long jarg1, RayResultCallback jarg1_, float jarg2);
  public final static native float RayResultCallback_closestHitFraction_get(long jarg1, RayResultCallback jarg1_);
  public final static native void RayResultCallback_collisionObject_set(long jarg1, RayResultCallback jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long RayResultCallback_collisionObject_get(long jarg1, RayResultCallback jarg1_);
  public final static native void RayResultCallback_collisionFilterGroup_set(long jarg1, RayResultCallback jarg1_, short jarg2);
  public final static native short RayResultCallback_collisionFilterGroup_get(long jarg1, RayResultCallback jarg1_);
  public final static native void RayResultCallback_collisionFilterMask_set(long jarg1, RayResultCallback jarg1_, short jarg2);
  public final static native short RayResultCallback_collisionFilterMask_get(long jarg1, RayResultCallback jarg1_);
  public final static native void RayResultCallback_flags_set(long jarg1, RayResultCallback jarg1_, long jarg2);
  public final static native long RayResultCallback_flags_get(long jarg1, RayResultCallback jarg1_);
  public final static native void delete_RayResultCallback(long jarg1);
  public final static native boolean RayResultCallback_hasHit(long jarg1, RayResultCallback jarg1_);
  public final static native long new_RayResultCallback();
  public final static native boolean RayResultCallback_needsCollision(long jarg1, RayResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native boolean RayResultCallback_needsCollisionSwigExplicitRayResultCallback(long jarg1, RayResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native float RayResultCallback_addSingleResult(long jarg1, RayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native void RayResultCallback_director_connect(RayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void RayResultCallback_change_ownership(RayResultCallback obj, long cptr, boolean take_or_release);
  public final static native long new_ClosestRayResultCallback(Vector3 jarg1, Vector3 jarg2);
  public final static native float ClosestRayResultCallback_addSingleResult(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native float ClosestRayResultCallback_addSingleResultSwigExplicitClosestRayResultCallback(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native void ClosestRayResultCallback_getRayFromWorld(long jarg1, ClosestRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestRayResultCallback_setRayFromWorld(long jarg1, ClosestRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestRayResultCallback_getRayToWorld(long jarg1, ClosestRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestRayResultCallback_setRayToWorld(long jarg1, ClosestRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestRayResultCallback_getHitNormalWorld(long jarg1, ClosestRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestRayResultCallback_setHitNormalWorld(long jarg1, ClosestRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestRayResultCallback_getHitPointWorld(long jarg1, ClosestRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestRayResultCallback_setHitPointWorld(long jarg1, ClosestRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void delete_ClosestRayResultCallback(long jarg1);
  public final static native void ClosestRayResultCallback_director_connect(ClosestRayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ClosestRayResultCallback_change_ownership(ClosestRayResultCallback obj, long cptr, boolean take_or_release);
  public final static native long new_AllHitsRayResultCallback(Vector3 jarg1, Vector3 jarg2);
  public final static native void AllHitsRayResultCallback_collisionObjects_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, btCollisionObjectConstArray jarg2_);
  public final static native long AllHitsRayResultCallback_collisionObjects_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native void AllHitsRayResultCallback_hitNormalWorld_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, btVector3Array jarg2_);
  public final static native long AllHitsRayResultCallback_hitNormalWorld_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native void AllHitsRayResultCallback_hitPointWorld_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, btVector3Array jarg2_);
  public final static native long AllHitsRayResultCallback_hitPointWorld_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native void AllHitsRayResultCallback_hitFractions_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, btScalarArray jarg2_);
  public final static native long AllHitsRayResultCallback_hitFractions_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native float AllHitsRayResultCallback_addSingleResult(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native float AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native void AllHitsRayResultCallback_getRayFromWorld(long jarg1, AllHitsRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void AllHitsRayResultCallback_setRayFromWorld(long jarg1, AllHitsRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void AllHitsRayResultCallback_getRayToWorld(long jarg1, AllHitsRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void AllHitsRayResultCallback_setRayToWorld(long jarg1, AllHitsRayResultCallback jarg1_, Vector3 jarg2);
  public final static native void delete_AllHitsRayResultCallback(long jarg1);
  public final static native void AllHitsRayResultCallback_director_connect(AllHitsRayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AllHitsRayResultCallback_change_ownership(AllHitsRayResultCallback obj, long cptr, boolean take_or_release);
  public final static native long new_LocalConvexResult(long jarg1, btCollisionObject jarg1_, long jarg2, LocalShapeInfo jarg2_, Vector3 jarg3, Vector3 jarg4, float jarg5);
  public final static native void LocalConvexResult_hitCollisionObject_set(long jarg1, LocalConvexResult jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long LocalConvexResult_hitCollisionObject_get(long jarg1, LocalConvexResult jarg1_);
  public final static native void LocalConvexResult_localShapeInfo_set(long jarg1, LocalConvexResult jarg1_, long jarg2, LocalShapeInfo jarg2_);
  public final static native long LocalConvexResult_localShapeInfo_get(long jarg1, LocalConvexResult jarg1_);
  public final static native void LocalConvexResult_hitFraction_set(long jarg1, LocalConvexResult jarg1_, float jarg2);
  public final static native float LocalConvexResult_hitFraction_get(long jarg1, LocalConvexResult jarg1_);
  public final static native void LocalConvexResult_getHitNormalLocal(long jarg1, LocalConvexResult jarg1_, Vector3 jarg2);
  public final static native void LocalConvexResult_setHitNormalLocal(long jarg1, LocalConvexResult jarg1_, Vector3 jarg2);
  public final static native void LocalConvexResult_getHitPointLocal(long jarg1, LocalConvexResult jarg1_, Vector3 jarg2);
  public final static native void LocalConvexResult_setHitPointLocal(long jarg1, LocalConvexResult jarg1_, Vector3 jarg2);
  public final static native void delete_LocalConvexResult(long jarg1);
  public final static native void ConvexResultCallback_closestHitFraction_set(long jarg1, ConvexResultCallback jarg1_, float jarg2);
  public final static native float ConvexResultCallback_closestHitFraction_get(long jarg1, ConvexResultCallback jarg1_);
  public final static native void ConvexResultCallback_collisionFilterGroup_set(long jarg1, ConvexResultCallback jarg1_, short jarg2);
  public final static native short ConvexResultCallback_collisionFilterGroup_get(long jarg1, ConvexResultCallback jarg1_);
  public final static native void ConvexResultCallback_collisionFilterMask_set(long jarg1, ConvexResultCallback jarg1_, short jarg2);
  public final static native short ConvexResultCallback_collisionFilterMask_get(long jarg1, ConvexResultCallback jarg1_);
  public final static native long new_ConvexResultCallback();
  public final static native void delete_ConvexResultCallback(long jarg1);
  public final static native boolean ConvexResultCallback_hasHit(long jarg1, ConvexResultCallback jarg1_);
  public final static native boolean ConvexResultCallback_needsCollision(long jarg1, ConvexResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native boolean ConvexResultCallback_needsCollisionSwigExplicitConvexResultCallback(long jarg1, ConvexResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native float ConvexResultCallback_addSingleResult(long jarg1, ConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
  public final static native void ConvexResultCallback_director_connect(ConvexResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ConvexResultCallback_change_ownership(ConvexResultCallback obj, long cptr, boolean take_or_release);
  public final static native long new_ClosestConvexResultCallback(Vector3 jarg1, Vector3 jarg2);
  public final static native void ClosestConvexResultCallback_convexFromWorld_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestConvexResultCallback_convexFromWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
  public final static native void ClosestConvexResultCallback_convexToWorld_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestConvexResultCallback_convexToWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
  public final static native void ClosestConvexResultCallback_hitCollisionObject_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long ClosestConvexResultCallback_hitCollisionObject_get(long jarg1, ClosestConvexResultCallback jarg1_);
  public final static native float ClosestConvexResultCallback_addSingleResult(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
  public final static native float ClosestConvexResultCallback_addSingleResultSwigExplicitClosestConvexResultCallback(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
  public final static native void ClosestConvexResultCallback_getConvexFromWorld(long jarg1, ClosestConvexResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestConvexResultCallback_setRayFromWorld(long jarg1, ClosestConvexResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestConvexResultCallback_getConvexToWorld(long jarg1, ClosestConvexResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestConvexResultCallback_setConvexToWorld(long jarg1, ClosestConvexResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestConvexResultCallback_getHitNormalWorld(long jarg1, ClosestConvexResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestConvexResultCallback_setHitNormalWorld(long jarg1, ClosestConvexResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestConvexResultCallback_getHitPointWorld(long jarg1, ClosestConvexResultCallback jarg1_, Vector3 jarg2);
  public final static native void ClosestConvexResultCallback_setHitPointWorld(long jarg1, ClosestConvexResultCallback jarg1_, Vector3 jarg2);
  public final static native void delete_ClosestConvexResultCallback(long jarg1);
  public final static native void ClosestConvexResultCallback_director_connect(ClosestConvexResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ClosestConvexResultCallback_change_ownership(ClosestConvexResultCallback obj, long cptr, boolean take_or_release);
  public final static native void ContactResultCallback_collisionFilterGroup_set(long jarg1, ContactResultCallback jarg1_, short jarg2);
  public final static native short ContactResultCallback_collisionFilterGroup_get(long jarg1, ContactResultCallback jarg1_);
  public final static native void ContactResultCallback_collisionFilterMask_set(long jarg1, ContactResultCallback jarg1_, short jarg2);
  public final static native short ContactResultCallback_collisionFilterMask_get(long jarg1, ContactResultCallback jarg1_);
  public final static native long new_ContactResultCallback();
  public final static native void delete_ContactResultCallback(long jarg1);
  public final static native boolean ContactResultCallback_needsCollision(long jarg1, ContactResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native boolean ContactResultCallback_needsCollisionSwigExplicitContactResultCallback(long jarg1, ContactResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native float ContactResultCallback_addSingleResult(long jarg1, ContactResultCallback jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, long jarg6, btCollisionObjectWrapper jarg6_, int jarg7, int jarg8);
  public final static native void ContactResultCallback_director_connect(ContactResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactResultCallback_change_ownership(ContactResultCallback obj, long cptr, boolean take_or_release);
  public final static native void ClosestNotMeConvexResultCallback_me_set(long jarg1, ClosestNotMeConvexResultCallback jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long ClosestNotMeConvexResultCallback_me_get(long jarg1, ClosestNotMeConvexResultCallback jarg1_);
  public final static native void ClosestNotMeConvexResultCallback_allowedPenetration_set(long jarg1, ClosestNotMeConvexResultCallback jarg1_, float jarg2);
  public final static native float ClosestNotMeConvexResultCallback_allowedPenetration_get(long jarg1, ClosestNotMeConvexResultCallback jarg1_);
  public final static native long new_ClosestNotMeConvexResultCallback(long jarg1, btCollisionObject jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native boolean ClosestNotMeConvexResultCallback_needsCollision(long jarg1, ClosestNotMeConvexResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native void delete_ClosestNotMeConvexResultCallback(long jarg1);
  public final static native long new_ClosestNotMeRayResultCallback(long jarg1, btCollisionObject jarg1_);
  public final static native void delete_ClosestNotMeRayResultCallback(long jarg1);
  public final static native long new_btConvex2dConvex2dAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btVoronoiSimplexSolver jarg5_, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
  public final static native void delete_btConvex2dConvex2dAlgorithm(long jarg1);
  public final static native void btConvex2dConvex2dAlgorithm_setLowLevelOfDetail(long jarg1, btConvex2dConvex2dAlgorithm jarg1_, boolean jarg2);
  public final static native long btConvex2dConvex2dAlgorithm_getManifold(long jarg1, btConvex2dConvex2dAlgorithm jarg1_);
  public final static native void btConvex2dConvex2dAlgorithm_CreateFunc_pdSolver_set(long jarg1, btConvex2dConvex2dAlgorithm.CreateFunc jarg1_, long jarg2, btConvexPenetrationDepthSolver jarg2_);
  public final static native long btConvex2dConvex2dAlgorithm_CreateFunc_pdSolver_get(long jarg1, btConvex2dConvex2dAlgorithm.CreateFunc jarg1_);
  public final static native void btConvex2dConvex2dAlgorithm_CreateFunc_simplexSolver_set(long jarg1, btConvex2dConvex2dAlgorithm.CreateFunc jarg1_, long jarg2, btVoronoiSimplexSolver jarg2_);
  public final static native long btConvex2dConvex2dAlgorithm_CreateFunc_simplexSolver_get(long jarg1, btConvex2dConvex2dAlgorithm.CreateFunc jarg1_);
  public final static native void btConvex2dConvex2dAlgorithm_CreateFunc_numPerturbationIterations_set(long jarg1, btConvex2dConvex2dAlgorithm.CreateFunc jarg1_, int jarg2);
  public final static native int btConvex2dConvex2dAlgorithm_CreateFunc_numPerturbationIterations_get(long jarg1, btConvex2dConvex2dAlgorithm.CreateFunc jarg1_);
  public final static native void btConvex2dConvex2dAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set(long jarg1, btConvex2dConvex2dAlgorithm.CreateFunc jarg1_, int jarg2);
  public final static native int btConvex2dConvex2dAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get(long jarg1, btConvex2dConvex2dAlgorithm.CreateFunc jarg1_);
  public final static native long new_btConvex2dConvex2dAlgorithm_CreateFunc(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btConvexPenetrationDepthSolver jarg2_);
  public final static native void delete_btConvex2dConvex2dAlgorithm_CreateFunc(long jarg1);
  public final static native void btBoxBoxDetector_box1_set(long jarg1, btBoxBoxDetector jarg1_, long jarg2, btBoxShape jarg2_);
  public final static native long btBoxBoxDetector_box1_get(long jarg1, btBoxBoxDetector jarg1_);
  public final static native void btBoxBoxDetector_box2_set(long jarg1, btBoxBoxDetector jarg1_, long jarg2, btBoxShape jarg2_);
  public final static native long btBoxBoxDetector_box2_get(long jarg1, btBoxBoxDetector jarg1_);
  public final static native long new_btBoxBoxDetector(long jarg1, btBoxShape jarg1_, long jarg2, btBoxShape jarg2_);
  public final static native void delete_btBoxBoxDetector(long jarg1);
  public final static native void btBoxBoxDetector_getClosestPoints__SWIG_0(long jarg1, btBoxBoxDetector jarg1_, long jarg2, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg2_, long jarg3, btDiscreteCollisionDetectorInterface.Result jarg3_, long jarg4, btIDebugDraw jarg4_, boolean jarg5);
  public final static native void btBoxBoxDetector_getClosestPoints__SWIG_1(long jarg1, btBoxBoxDetector jarg1_, long jarg2, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg2_, long jarg3, btDiscreteCollisionDetectorInterface.Result jarg3_, long jarg4, btIDebugDraw jarg4_);
  public final static native long new_btSphereBoxCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
  public final static native void delete_btSphereBoxCollisionAlgorithm(long jarg1);
  public final static native boolean btSphereBoxCollisionAlgorithm_getSphereDistance(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, Vector3 jarg3, Vector3 jarg4, long jarg5, Vector3 jarg6, float jarg7, float jarg8);
  public final static native float btSphereBoxCollisionAlgorithm_getSpherePenetration(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native long new_btSphereBoxCollisionAlgorithm_CreateFunc();
  public final static native void delete_btSphereBoxCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native int btCollisionDispatcher_getDispatcherFlags(long jarg1, btCollisionDispatcher jarg1_);
  public final static native void btCollisionDispatcher_setDispatcherFlags(long jarg1, btCollisionDispatcher jarg1_, int jarg2);
  public final static native void btCollisionDispatcher_registerCollisionCreateFunc(long jarg1, btCollisionDispatcher jarg1_, int jarg2, int jarg3, long jarg4, btCollisionAlgorithmCreateFunc jarg4_);
  public final static native long btCollisionDispatcher_getManifoldByIndexInternal__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, int jarg2);
  public final static native long new_btCollisionDispatcher(long jarg1, btCollisionConfiguration jarg1_);
  public final static native void delete_btCollisionDispatcher(long jarg1);
  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btPersistentManifold jarg4_);
  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_1(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
  public final static native void btCollisionDispatcher_setNearCallback(long jarg1, btCollisionDispatcher jarg1_, long jarg2);
  public final static native long btCollisionDispatcher_getNearCallback(long jarg1, btCollisionDispatcher jarg1_);
  public final static native void btCollisionDispatcher_defaultNearCallback(btBroadphasePair jarg1, long jarg2, btCollisionDispatcher jarg2_, long jarg3, btDispatcherInfo jarg3_);
  public final static native long btCollisionDispatcher_getCollisionConfiguration__SWIG_0(long jarg1, btCollisionDispatcher jarg1_);
  public final static native void btCollisionDispatcher_setCollisionConfiguration(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionConfiguration jarg2_);
  public final static native long btCollisionDispatcher_getInternalManifoldPool__SWIG_0(long jarg1, btCollisionDispatcher jarg1_);
  public final static native long new_btConvexConvexAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btVoronoiSimplexSolver jarg5_, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
  public final static native void delete_btConvexConvexAlgorithm(long jarg1);
  public final static native void btConvexConvexAlgorithm_setLowLevelOfDetail(long jarg1, btConvexConvexAlgorithm jarg1_, boolean jarg2);
  public final static native long btConvexConvexAlgorithm_getManifold(long jarg1, btConvexConvexAlgorithm jarg1_);
  public final static native void btConvexConvexAlgorithm_CreateFunc_pdSolver_set(long jarg1, btConvexConvexAlgorithm.CreateFunc jarg1_, long jarg2, btConvexPenetrationDepthSolver jarg2_);
  public final static native long btConvexConvexAlgorithm_CreateFunc_pdSolver_get(long jarg1, btConvexConvexAlgorithm.CreateFunc jarg1_);
  public final static native void btConvexConvexAlgorithm_CreateFunc_simplexSolver_set(long jarg1, btConvexConvexAlgorithm.CreateFunc jarg1_, long jarg2, btVoronoiSimplexSolver jarg2_);
  public final static native long btConvexConvexAlgorithm_CreateFunc_simplexSolver_get(long jarg1, btConvexConvexAlgorithm.CreateFunc jarg1_);
  public final static native void btConvexConvexAlgorithm_CreateFunc_numPerturbationIterations_set(long jarg1, btConvexConvexAlgorithm.CreateFunc jarg1_, int jarg2);
  public final static native int btConvexConvexAlgorithm_CreateFunc_numPerturbationIterations_get(long jarg1, btConvexConvexAlgorithm.CreateFunc jarg1_);
  public final static native void btConvexConvexAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set(long jarg1, btConvexConvexAlgorithm.CreateFunc jarg1_, int jarg2);
  public final static native int btConvexConvexAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get(long jarg1, btConvexConvexAlgorithm.CreateFunc jarg1_);
  public final static native long new_btConvexConvexAlgorithm_CreateFunc(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btConvexPenetrationDepthSolver jarg2_);
  public final static native void delete_btConvexConvexAlgorithm_CreateFunc(long jarg1);
  public final static native void SphereTriangleDetector_getClosestPoints__SWIG_0(long jarg1, SphereTriangleDetector jarg1_, long jarg2, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg2_, long jarg3, btDiscreteCollisionDetectorInterface.Result jarg3_, long jarg4, btIDebugDraw jarg4_, boolean jarg5);
  public final static native void SphereTriangleDetector_getClosestPoints__SWIG_1(long jarg1, SphereTriangleDetector jarg1_, long jarg2, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg2_, long jarg3, btDiscreteCollisionDetectorInterface.Result jarg3_, long jarg4, btIDebugDraw jarg4_);
  public final static native long new_SphereTriangleDetector(long jarg1, btSphereShape jarg1_, long jarg2, btTriangleShape jarg2_, float jarg3);
  public final static native void delete_SphereTriangleDetector(long jarg1);
  public final static native boolean SphereTriangleDetector_collide(long jarg1, SphereTriangleDetector jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, long jarg6, float jarg7);
  public final static native void btGenerateInternalEdgeInfo(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleInfoMap jarg2_);
  public final static native void btAdjustInternalEdgeContacts__SWIG_0(long jarg1, btManifoldPoint jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void btAdjustInternalEdgeContacts__SWIG_1(long jarg1, btManifoldPoint jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5);
  public final static native void gCompoundChildShapePairCallback_set(long jarg1);
  public final static native long gCompoundChildShapePairCallback_get();
  public final static native long new_btCompoundCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
  public final static native void delete_btCompoundCollisionAlgorithm(long jarg1);
  public final static native long btCompoundCollisionAlgorithm_getChildAlgorithm(long jarg1, btCompoundCollisionAlgorithm jarg1_, int jarg2);
  public final static native long new_btCompoundCollisionAlgorithm_CreateFunc();
  public final static native void delete_btCompoundCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native long new_btCompoundCollisionAlgorithm_SwappedCreateFunc();
  public final static native void delete_btCompoundCollisionAlgorithm_SwappedCreateFunc(long jarg1);
  public final static native void delete_btConvexCast(long jarg1);
  public final static native void btConvexCast_CastResult_DebugDraw(long jarg1, btConvexCast.CastResult jarg1_, float jarg2);
  public final static native void btConvexCast_CastResult_drawCoordSystem(long jarg1, btConvexCast.CastResult jarg1_, Matrix4 jarg2);
  public final static native void btConvexCast_CastResult_reportFailure(long jarg1, btConvexCast.CastResult jarg1_, int jarg2, int jarg3);
  public final static native long new_btConvexCast_CastResult();
  public final static native void delete_btConvexCast_CastResult(long jarg1);
  public final static native void btConvexCast_CastResult_hitTransformA_set(long jarg1, btConvexCast.CastResult jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btConvexCast_CastResult_hitTransformA_get(long jarg1, btConvexCast.CastResult jarg1_);
  public final static native void btConvexCast_CastResult_hitTransformB_set(long jarg1, btConvexCast.CastResult jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btConvexCast_CastResult_hitTransformB_get(long jarg1, btConvexCast.CastResult jarg1_);
  public final static native void btConvexCast_CastResult_normal_set(long jarg1, btConvexCast.CastResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexCast_CastResult_normal_get(long jarg1, btConvexCast.CastResult jarg1_);
  public final static native void btConvexCast_CastResult_hitPoint_set(long jarg1, btConvexCast.CastResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexCast_CastResult_hitPoint_get(long jarg1, btConvexCast.CastResult jarg1_);
  public final static native void btConvexCast_CastResult_fraction_set(long jarg1, btConvexCast.CastResult jarg1_, float jarg2);
  public final static native float btConvexCast_CastResult_fraction_get(long jarg1, btConvexCast.CastResult jarg1_);
  public final static native void btConvexCast_CastResult_debugDrawer_set(long jarg1, btConvexCast.CastResult jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native long btConvexCast_CastResult_debugDrawer_get(long jarg1, btConvexCast.CastResult jarg1_);
  public final static native void btConvexCast_CastResult_allowedPenetration_set(long jarg1, btConvexCast.CastResult jarg1_, float jarg2);
  public final static native float btConvexCast_CastResult_allowedPenetration_get(long jarg1, btConvexCast.CastResult jarg1_);
  public final static native boolean btConvexCast_calcTimeOfImpact(long jarg1, btConvexCast jarg1_, Matrix4 jarg2, Matrix4 jarg3, Matrix4 jarg4, Matrix4 jarg5, long jarg6, btConvexCast.CastResult jarg6_);
  public final static native long new_btSubsimplexConvexCast(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, long jarg3, btVoronoiSimplexSolver jarg3_);
  public final static native void delete_btSubsimplexConvexCast(long jarg1);
  public final static native void btPolyhedralContactClipping_clipHullAgainstHull(Vector3 jarg1, long jarg2, btConvexPolyhedron jarg2_, long jarg3, btConvexPolyhedron jarg3_, Matrix4 jarg4, Matrix4 jarg5, float jarg6, float jarg7, long jarg8, btDiscreteCollisionDetectorInterface.Result jarg8_);
  public final static native void btPolyhedralContactClipping_clipFaceAgainstHull(Vector3 jarg1, long jarg2, btConvexPolyhedron jarg2_, Matrix4 jarg3, long jarg4, btVector3Array jarg4_, float jarg5, float jarg6, long jarg7, btDiscreteCollisionDetectorInterface.Result jarg7_);
  public final static native boolean btPolyhedralContactClipping_findSeparatingAxis(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btConvexPolyhedron jarg2_, Matrix4 jarg3, Matrix4 jarg4, Vector3 jarg5, long jarg6, btDiscreteCollisionDetectorInterface.Result jarg6_);
  public final static native void btPolyhedralContactClipping_clipFace(long jarg1, btVector3Array jarg1_, long jarg2, btVector3Array jarg2_, Vector3 jarg3, float jarg4);
  public final static native long new_btPolyhedralContactClipping();
  public final static native void delete_btPolyhedralContactClipping(long jarg1);
  public final static native void gContactBreakingThreshold_set(float jarg1);
  public final static native float gContactBreakingThreshold_get();
  public final static native void btPersistentManifold_companionIdA_set(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native int btPersistentManifold_companionIdA_get(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_companionIdB_set(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native int btPersistentManifold_companionIdB_get(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_index1a_set(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native int btPersistentManifold_index1a_get(long jarg1, btPersistentManifold jarg1_);
  public final static native long new_btPersistentManifold__SWIG_0();
  public final static native long new_btPersistentManifold__SWIG_1(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_, int jarg3, float jarg4, float jarg5);
  public final static native long btPersistentManifold_getBody0(long jarg1, btPersistentManifold jarg1_);
  public final static native long btPersistentManifold_getBody1(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_setBodies(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void btPersistentManifold_clearUserCache(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_);
  public final static native int btPersistentManifold_getNumContacts(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_setNumContacts(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native long btPersistentManifold_getContactPoint__SWIG_0(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native float btPersistentManifold_getContactBreakingThreshold(long jarg1, btPersistentManifold jarg1_);
  public final static native float btPersistentManifold_getContactProcessingThreshold(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_setContactBreakingThreshold(long jarg1, btPersistentManifold jarg1_, float jarg2);
  public final static native void btPersistentManifold_setContactProcessingThreshold(long jarg1, btPersistentManifold jarg1_, float jarg2);
  public final static native int btPersistentManifold_getCacheEntry(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_);
  public final static native int btPersistentManifold_addManifoldPoint__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_, boolean jarg3);
  public final static native int btPersistentManifold_addManifoldPoint__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_);
  public final static native void btPersistentManifold_removeContactPoint(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native void btPersistentManifold_replaceContactPoint(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3);
  public final static native boolean btPersistentManifold_validContactDistance(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_);
  public final static native void btPersistentManifold_refreshContactPoints(long jarg1, btPersistentManifold jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native void btPersistentManifold_clearManifold(long jarg1, btPersistentManifold jarg1_);
  public final static native void delete_btPersistentManifold(long jarg1);
  public final static native long new_btPersistentManifoldArray__SWIG_0();
  public final static native void delete_btPersistentManifoldArray(long jarg1);
  public final static native long new_btPersistentManifoldArray__SWIG_1(long jarg1, btPersistentManifoldArray jarg1_);
  public final static native int btPersistentManifoldArray_size(long jarg1, btPersistentManifoldArray jarg1_);
  public final static native long btPersistentManifoldArray_at__SWIG_0(long jarg1, btPersistentManifoldArray jarg1_, int jarg2);
  public final static native void btPersistentManifoldArray_clear(long jarg1, btPersistentManifoldArray jarg1_);
  public final static native void btPersistentManifoldArray_pop_back(long jarg1, btPersistentManifoldArray jarg1_);
  public final static native void btPersistentManifoldArray_resizeNoInitialize(long jarg1, btPersistentManifoldArray jarg1_, int jarg2);
  public final static native void btPersistentManifoldArray_resize__SWIG_0(long jarg1, btPersistentManifoldArray jarg1_, int jarg2, long jarg3, btPersistentManifold jarg3_);
  public final static native void btPersistentManifoldArray_resize__SWIG_1(long jarg1, btPersistentManifoldArray jarg1_, int jarg2);
  public final static native long btPersistentManifoldArray_expandNonInitializing(long jarg1, btPersistentManifoldArray jarg1_);
  public final static native long btPersistentManifoldArray_expand__SWIG_0(long jarg1, btPersistentManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native long btPersistentManifoldArray_expand__SWIG_1(long jarg1, btPersistentManifoldArray jarg1_);
  public final static native void btPersistentManifoldArray_push_back(long jarg1, btPersistentManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native int btPersistentManifoldArray_capacity(long jarg1, btPersistentManifoldArray jarg1_);
  public final static native void btPersistentManifoldArray_reserve(long jarg1, btPersistentManifoldArray jarg1_, int jarg2);
  public final static native long new_btPersistentManifoldArray_less();
  public final static native void delete_btPersistentManifoldArray_less(long jarg1);
  public final static native void btPersistentManifoldArray_swap(long jarg1, btPersistentManifoldArray jarg1_, int jarg2, int jarg3);
  public final static native int btPersistentManifoldArray_findBinarySearch(long jarg1, btPersistentManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native int btPersistentManifoldArray_findLinearSearch(long jarg1, btPersistentManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native void btPersistentManifoldArray_remove(long jarg1, btPersistentManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native void btPersistentManifoldArray_initializeFromBuffer(long jarg1, btPersistentManifoldArray jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void btPersistentManifoldArray_copyFromArray(long jarg1, btPersistentManifoldArray jarg1_, long jarg2, btPersistentManifoldArray jarg2_);
  public final static native void btGjkPairDetector_lastUsedMethod_set(long jarg1, btGjkPairDetector jarg1_, int jarg2);
  public final static native int btGjkPairDetector_lastUsedMethod_get(long jarg1, btGjkPairDetector jarg1_);
  public final static native void btGjkPairDetector_curIter_set(long jarg1, btGjkPairDetector jarg1_, int jarg2);
  public final static native int btGjkPairDetector_curIter_get(long jarg1, btGjkPairDetector jarg1_);
  public final static native void btGjkPairDetector_degenerateSimplex_set(long jarg1, btGjkPairDetector jarg1_, int jarg2);
  public final static native int btGjkPairDetector_degenerateSimplex_get(long jarg1, btGjkPairDetector jarg1_);
  public final static native void btGjkPairDetector_catchDegeneracies_set(long jarg1, btGjkPairDetector jarg1_, int jarg2);
  public final static native int btGjkPairDetector_catchDegeneracies_get(long jarg1, btGjkPairDetector jarg1_);
  public final static native void btGjkPairDetector_fixContactNormalDirection_set(long jarg1, btGjkPairDetector jarg1_, int jarg2);
  public final static native int btGjkPairDetector_fixContactNormalDirection_get(long jarg1, btGjkPairDetector jarg1_);
  public final static native long new_btGjkPairDetector__SWIG_0(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, long jarg3, btVoronoiSimplexSolver jarg3_, long jarg4, btConvexPenetrationDepthSolver jarg4_);
  public final static native long new_btGjkPairDetector__SWIG_1(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, int jarg3, int jarg4, float jarg5, float jarg6, long jarg7, btVoronoiSimplexSolver jarg7_, long jarg8, btConvexPenetrationDepthSolver jarg8_);
  public final static native void delete_btGjkPairDetector(long jarg1);
  public final static native void btGjkPairDetector_getClosestPoints__SWIG_0(long jarg1, btGjkPairDetector jarg1_, long jarg2, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg2_, long jarg3, btDiscreteCollisionDetectorInterface.Result jarg3_, long jarg4, btIDebugDraw jarg4_, boolean jarg5);
  public final static native void btGjkPairDetector_getClosestPoints__SWIG_1(long jarg1, btGjkPairDetector jarg1_, long jarg2, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg2_, long jarg3, btDiscreteCollisionDetectorInterface.Result jarg3_, long jarg4, btIDebugDraw jarg4_);
  public final static native void btGjkPairDetector_getClosestPointsNonVirtual(long jarg1, btGjkPairDetector jarg1_, long jarg2, btDiscreteCollisionDetectorInterface.ClosestPointInput jarg2_, long jarg3, btDiscreteCollisionDetectorInterface.Result jarg3_, long jarg4, btIDebugDraw jarg4_);
  public final static native void btGjkPairDetector_setMinkowskiA(long jarg1, btGjkPairDetector jarg1_, long jarg2, btConvexShape jarg2_);
  public final static native void btGjkPairDetector_setMinkowskiB(long jarg1, btGjkPairDetector jarg1_, long jarg2, btConvexShape jarg2_);
  public final static native void btGjkPairDetector_setCachedSeperatingAxis(long jarg1, btGjkPairDetector jarg1_, Vector3 jarg2);
  public final static native Vector3 btGjkPairDetector_getCachedSeparatingAxis(long jarg1, btGjkPairDetector jarg1_);
  public final static native float btGjkPairDetector_getCachedSeparatingDistance(long jarg1, btGjkPairDetector jarg1_);
  public final static native void btGjkPairDetector_setPenetrationDepthSolver(long jarg1, btGjkPairDetector jarg1_, long jarg2, btConvexPenetrationDepthSolver jarg2_);
  public final static native void btGjkPairDetector_setIgnoreMargin(long jarg1, btGjkPairDetector jarg1_, boolean jarg2);
  public final static native void delete_btConvexPenetrationDepthSolver(long jarg1);
  public final static native boolean btConvexPenetrationDepthSolver_calcPenDepth(long jarg1, btConvexPenetrationDepthSolver jarg1_, long jarg2, btVoronoiSimplexSolver jarg2_, long jarg3, btConvexShape jarg3_, long jarg4, btConvexShape jarg4_, Matrix4 jarg5, Matrix4 jarg6, Vector3 jarg7, Vector3 jarg8, Vector3 jarg9, long jarg10, btIDebugDraw jarg10_);
  public final static native long new_btMinkowskiPenetrationDepthSolver();
  public final static native void delete_btMinkowskiPenetrationDepthSolver(long jarg1);
  public final static native long new_btGjkConvexCast(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, long jarg3, btVoronoiSimplexSolver jarg3_);
  public final static native void delete_btGjkConvexCast(long jarg1);
  public final static native void btConstraintRow_normal_set(long jarg1, btConstraintRow jarg1_, float[] jarg2);
  public final static native float[] btConstraintRow_normal_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_rhs_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_rhs_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_jacDiagInv_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_jacDiagInv_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_lowerLimit_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_lowerLimit_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_upperLimit_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_upperLimit_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_accumImpulse_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_accumImpulse_get(long jarg1, btConstraintRow jarg1_);
  public final static native long new_btConstraintRow();
  public final static native void delete_btConstraintRow(long jarg1);
  public final static native long new_btManifoldPoint__SWIG_0();
  public final static native long new_btManifoldPoint__SWIG_1(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native void btManifoldPoint_distance1_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_distance1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_combinedFriction_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_combinedFriction_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_combinedRollingFriction_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_combinedRollingFriction_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_combinedRestitution_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_combinedRestitution_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_partId0_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_partId0_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_partId1_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_partId1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_index0_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_index0_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_index1_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_index1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_userPersistentData_set(long jarg1, btManifoldPoint jarg1_, long jarg2);
  public final static native long btManifoldPoint_userPersistentData_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_lateralFrictionInitialized_set(long jarg1, btManifoldPoint jarg1_, boolean jarg2);
  public final static native boolean btManifoldPoint_lateralFrictionInitialized_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_appliedImpulse_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_appliedImpulse_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_appliedImpulseLateral1_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_appliedImpulseLateral1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_appliedImpulseLateral2_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_appliedImpulseLateral2_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_contactMotion1_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_contactMotion1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_contactMotion2_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_contactMotion2_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_contactCFM1_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_contactCFM1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_contactCFM2_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_contactCFM2_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_lifeTime_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_lifeTime_get(long jarg1, btManifoldPoint jarg1_);
  public final static native float btManifoldPoint_getDistance(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_setDistance(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native int btManifoldPoint_getUserValue(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_setUserValue(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native void btManifoldPoint_getLocalPointA(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_setLocalPointA(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_getLocalPointB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_setLocalPointB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_getPositionWorldOnA(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_setPositionWorldOnA(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_getPositionWorldOnB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_setPositionWorldOnB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_getNormalWorldOnB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_setNormalWorldOnB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_getLateralFrictionDir1(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_setLateralFrictionDir1(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_getLateralFrictionDir2(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void btManifoldPoint_setLateralFrictionDir2(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
  public final static native void delete_btManifoldPoint(long jarg1);
  public final static native long new_btContinuousConvexCollision__SWIG_0(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, long jarg3, btVoronoiSimplexSolver jarg3_, long jarg4, btConvexPenetrationDepthSolver jarg4_);
  public final static native long new_btContinuousConvexCollision__SWIG_1(long jarg1, btConvexShape jarg1_, long jarg2, btStaticPlaneShape jarg2_);
  public final static native void delete_btContinuousConvexCollision(long jarg1);
  public final static native void btTriangleRaycastCallback_from_set(long jarg1, btTriangleRaycastCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangleRaycastCallback_from_get(long jarg1, btTriangleRaycastCallback jarg1_);
  public final static native void btTriangleRaycastCallback_to_set(long jarg1, btTriangleRaycastCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangleRaycastCallback_to_get(long jarg1, btTriangleRaycastCallback jarg1_);
  public final static native void btTriangleRaycastCallback_flags_set(long jarg1, btTriangleRaycastCallback jarg1_, long jarg2);
  public final static native long btTriangleRaycastCallback_flags_get(long jarg1, btTriangleRaycastCallback jarg1_);
  public final static native void btTriangleRaycastCallback_hitFraction_set(long jarg1, btTriangleRaycastCallback jarg1_, float jarg2);
  public final static native float btTriangleRaycastCallback_hitFraction_get(long jarg1, btTriangleRaycastCallback jarg1_);
  public final static native long new_btTriangleRaycastCallback__SWIG_0(Vector3 jarg1, Vector3 jarg2, long jarg3);
  public final static native long new_btTriangleRaycastCallback__SWIG_1(Vector3 jarg1, Vector3 jarg2);
  public final static native void btTriangleRaycastCallback_processTriangle(long jarg1, btTriangleRaycastCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native void btTriangleRaycastCallback_processTriangleSwigExplicitbtTriangleRaycastCallback(long jarg1, btTriangleRaycastCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native float btTriangleRaycastCallback_reportHit(long jarg1, btTriangleRaycastCallback jarg1_, Vector3 jarg2, float jarg3, int jarg4, int jarg5);
  public final static native void delete_btTriangleRaycastCallback(long jarg1);
  public final static native void btTriangleRaycastCallback_director_connect(btTriangleRaycastCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btTriangleRaycastCallback_change_ownership(btTriangleRaycastCallback obj, long cptr, boolean take_or_release);
  public final static native void btTriangleConvexcastCallback_convexShape_set(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btConvexShape jarg2_);
  public final static native long btTriangleConvexcastCallback_convexShape_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_convexShapeFrom_set(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btTriangleConvexcastCallback_convexShapeFrom_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_convexShapeTo_set(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btTriangleConvexcastCallback_convexShapeTo_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_triangleToWorld_set(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btTriangleConvexcastCallback_triangleToWorld_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_hitFraction_set(long jarg1, btTriangleConvexcastCallback jarg1_, float jarg2);
  public final static native float btTriangleConvexcastCallback_hitFraction_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_triangleCollisionMargin_set(long jarg1, btTriangleConvexcastCallback jarg1_, float jarg2);
  public final static native float btTriangleConvexcastCallback_triangleCollisionMargin_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_allowedPenetration_set(long jarg1, btTriangleConvexcastCallback jarg1_, float jarg2);
  public final static native float btTriangleConvexcastCallback_allowedPenetration_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native long new_btTriangleConvexcastCallback(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, Matrix4 jarg4, float jarg5);
  public final static native void btTriangleConvexcastCallback_processTriangle(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native void btTriangleConvexcastCallback_processTriangleSwigExplicitbtTriangleConvexcastCallback(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native float btTriangleConvexcastCallback_reportHit(long jarg1, btTriangleConvexcastCallback jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4, int jarg5, int jarg6);
  public final static native void delete_btTriangleConvexcastCallback(long jarg1);
  public final static native void btTriangleConvexcastCallback_director_connect(btTriangleConvexcastCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btTriangleConvexcastCallback_change_ownership(btTriangleConvexcastCallback obj, long cptr, boolean take_or_release);
  public final static native void btGjkEpaSolver2_sResults_status_set(long jarg1, btGjkEpaSolver2.sResults jarg1_, int jarg2);
  public final static native int btGjkEpaSolver2_sResults_status_get(long jarg1, btGjkEpaSolver2.sResults jarg1_);
  public final static native void btGjkEpaSolver2_sResults_witnesses_set(long jarg1, btGjkEpaSolver2.sResults jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btGjkEpaSolver2_sResults_witnesses_get(long jarg1, btGjkEpaSolver2.sResults jarg1_);
  public final static native void btGjkEpaSolver2_sResults_normal_set(long jarg1, btGjkEpaSolver2.sResults jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btGjkEpaSolver2_sResults_normal_get(long jarg1, btGjkEpaSolver2.sResults jarg1_);
  public final static native void btGjkEpaSolver2_sResults_distance_set(long jarg1, btGjkEpaSolver2.sResults jarg1_, float jarg2);
  public final static native float btGjkEpaSolver2_sResults_distance_get(long jarg1, btGjkEpaSolver2.sResults jarg1_);
  public final static native long new_btGjkEpaSolver2_sResults();
  public final static native void delete_btGjkEpaSolver2_sResults(long jarg1);
  public final static native int btGjkEpaSolver2_StackSizeRequirement();
  public final static native boolean btGjkEpaSolver2_Distance(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, Vector3 jarg5, long jarg6, btGjkEpaSolver2.sResults jarg6_);
  public final static native boolean btGjkEpaSolver2_Penetration__SWIG_0(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, Vector3 jarg5, long jarg6, btGjkEpaSolver2.sResults jarg6_, boolean jarg7);
  public final static native boolean btGjkEpaSolver2_Penetration__SWIG_1(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, Vector3 jarg5, long jarg6, btGjkEpaSolver2.sResults jarg6_);
  public final static native float btGjkEpaSolver2_SignedDistance__SWIG_0(Vector3 jarg1, float jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, long jarg5, btGjkEpaSolver2.sResults jarg5_);
  public final static native boolean btGjkEpaSolver2_SignedDistance__SWIG_1(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, Vector3 jarg5, long jarg6, btGjkEpaSolver2.sResults jarg6_);
  public final static native long new_btGjkEpaSolver2();
  public final static native void delete_btGjkEpaSolver2(long jarg1);
  public final static native long new_btGjkEpaPenetrationDepthSolver();
  public final static native void delete_btGjkEpaPenetrationDepthSolver(long jarg1);
  public final static native void btPointCollector_normalOnBInWorld_set(long jarg1, btPointCollector jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btPointCollector_normalOnBInWorld_get(long jarg1, btPointCollector jarg1_);
  public final static native void btPointCollector_pointInWorld_set(long jarg1, btPointCollector jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btPointCollector_pointInWorld_get(long jarg1, btPointCollector jarg1_);
  public final static native void btPointCollector_distance_set(long jarg1, btPointCollector jarg1_, float jarg2);
  public final static native float btPointCollector_distance_get(long jarg1, btPointCollector jarg1_);
  public final static native void btPointCollector_hasResult_set(long jarg1, btPointCollector jarg1_, boolean jarg2);
  public final static native boolean btPointCollector_hasResult_get(long jarg1, btPointCollector jarg1_);
  public final static native long new_btPointCollector();
  public final static native void delete_btPointCollector(long jarg1);
  public final static native long new_btUsageBitfield();
  public final static native void btUsageBitfield_reset(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_usedVertexA_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_usedVertexA_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_usedVertexB_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_usedVertexB_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_usedVertexC_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_usedVertexC_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_usedVertexD_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_usedVertexD_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_unused1_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_unused1_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_unused2_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_unused2_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_unused3_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_unused3_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_unused4_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_unused4_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void delete_btUsageBitfield(long jarg1);
  public final static native void btSubSimplexClosestResult_closestPointOnSimplex_set(long jarg1, btSubSimplexClosestResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSubSimplexClosestResult_closestPointOnSimplex_get(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_usedVertices_set(long jarg1, btSubSimplexClosestResult jarg1_, long jarg2, btUsageBitfield jarg2_);
  public final static native long btSubSimplexClosestResult_usedVertices_get(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_barycentricCoords_set(long jarg1, btSubSimplexClosestResult jarg1_, float[] jarg2);
  public final static native float[] btSubSimplexClosestResult_barycentricCoords_get(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_degenerate_set(long jarg1, btSubSimplexClosestResult jarg1_, boolean jarg2);
  public final static native boolean btSubSimplexClosestResult_degenerate_get(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_reset(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native boolean btSubSimplexClosestResult_isValid(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_0(long jarg1, btSubSimplexClosestResult jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_1(long jarg1, btSubSimplexClosestResult jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_2(long jarg1, btSubSimplexClosestResult jarg1_, float jarg2, float jarg3);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_3(long jarg1, btSubSimplexClosestResult jarg1_, float jarg2);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_4(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native long new_btSubSimplexClosestResult();
  public final static native void delete_btSubSimplexClosestResult(long jarg1);
  public final static native void btVoronoiSimplexSolver_numVertices_set(long jarg1, btVoronoiSimplexSolver jarg1_, int jarg2);
  public final static native int btVoronoiSimplexSolver_numVertices_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_simplexVectorW_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_simplexVectorW_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_simplexPointsP_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_simplexPointsP_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_simplexPointsQ_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_simplexPointsQ_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_cachedP1_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_cachedP1_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_cachedP2_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_cachedP2_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_cachedV_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_cachedV_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_lastW_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_lastW_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_equalVertexThreshold_set(long jarg1, btVoronoiSimplexSolver jarg1_, float jarg2);
  public final static native float btVoronoiSimplexSolver_equalVertexThreshold_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_cachedValidClosest_set(long jarg1, btVoronoiSimplexSolver jarg1_, boolean jarg2);
  public final static native boolean btVoronoiSimplexSolver_cachedValidClosest_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_cachedBC_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btSubSimplexClosestResult jarg2_);
  public final static native long btVoronoiSimplexSolver_cachedBC_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_needsUpdate_set(long jarg1, btVoronoiSimplexSolver jarg1_, boolean jarg2);
  public final static native boolean btVoronoiSimplexSolver_needsUpdate_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_removeVertex(long jarg1, btVoronoiSimplexSolver jarg1_, int jarg2);
  public final static native void btVoronoiSimplexSolver_reduceVertices(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btUsageBitfield jarg2_);
  public final static native boolean btVoronoiSimplexSolver_updateClosestVectorAndPoints(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native boolean btVoronoiSimplexSolver_closestPtPointTetrahedron(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6, long jarg7, btSubSimplexClosestResult jarg7_);
  public final static native int btVoronoiSimplexSolver_pointOutsideOfPlane(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native boolean btVoronoiSimplexSolver_closestPtPointTriangle(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, long jarg6, btSubSimplexClosestResult jarg6_);
  public final static native long new_btVoronoiSimplexSolver();
  public final static native void btVoronoiSimplexSolver_reset(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_addVertex(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native boolean btVoronoiSimplexSolver_closest(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2);
  public final static native float btVoronoiSimplexSolver_maxVertex(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native boolean btVoronoiSimplexSolver_fullSimplex(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native int btVoronoiSimplexSolver_getSimplex(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_);
  public final static native boolean btVoronoiSimplexSolver_inSimplex(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2);
  public final static native void btVoronoiSimplexSolver_backup_closest(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2);
  public final static native boolean btVoronoiSimplexSolver_emptySimplex(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_compute_points(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void delete_btVoronoiSimplexSolver(long jarg1);
  public final static native long new_btMultiSphereShape(Vector3[] jarg1, float[] jarg2, int jarg3);
  public final static native int btMultiSphereShape_getSphereCount(long jarg1, btMultiSphereShape jarg1_);
  public final static native Vector3 btMultiSphereShape_getSpherePosition(long jarg1, btMultiSphereShape jarg1_, int jarg2);
  public final static native float btMultiSphereShape_getSphereRadius(long jarg1, btMultiSphereShape jarg1_, int jarg2);
  public final static native void delete_btMultiSphereShape(long jarg1);
  public final static native void btPositionAndRadius_pos_set(long jarg1, btPositionAndRadius jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btPositionAndRadius_pos_get(long jarg1, btPositionAndRadius jarg1_);
  public final static native void btPositionAndRadius_radius_set(long jarg1, btPositionAndRadius jarg1_, float jarg2);
  public final static native float btPositionAndRadius_radius_get(long jarg1, btPositionAndRadius jarg1_);
  public final static native long new_btPositionAndRadius();
  public final static native void delete_btPositionAndRadius(long jarg1);
  public final static native void btMultiSphereShapeData_convexInternalShapeData_set(long jarg1, btMultiSphereShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
  public final static native long btMultiSphereShapeData_convexInternalShapeData_get(long jarg1, btMultiSphereShapeData jarg1_);
  public final static native void btMultiSphereShapeData_localPositionArrayPtr_set(long jarg1, btMultiSphereShapeData jarg1_, long jarg2, btPositionAndRadius jarg2_);
  public final static native long btMultiSphereShapeData_localPositionArrayPtr_get(long jarg1, btMultiSphereShapeData jarg1_);
  public final static native void btMultiSphereShapeData_localPositionArraySize_set(long jarg1, btMultiSphereShapeData jarg1_, int jarg2);
  public final static native int btMultiSphereShapeData_localPositionArraySize_get(long jarg1, btMultiSphereShapeData jarg1_);
  public final static native void btMultiSphereShapeData_padding_set(long jarg1, btMultiSphereShapeData jarg1_, String jarg2);
  public final static native String btMultiSphereShapeData_padding_get(long jarg1, btMultiSphereShapeData jarg1_);
  public final static native long new_btMultiSphereShapeData();
  public final static native void delete_btMultiSphereShapeData(long jarg1);
  public final static native long new_CustomCollisionDispatcher(long jarg1, btCollisionConfiguration jarg1_);
  public final static native boolean CustomCollisionDispatcher_needsCollision(long jarg1, CustomCollisionDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native boolean CustomCollisionDispatcher_needsCollisionSwigExplicitCustomCollisionDispatcher(long jarg1, CustomCollisionDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native boolean CustomCollisionDispatcher_needsResponse(long jarg1, CustomCollisionDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native boolean CustomCollisionDispatcher_needsResponseSwigExplicitCustomCollisionDispatcher(long jarg1, CustomCollisionDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void delete_CustomCollisionDispatcher(long jarg1);
  public final static native void CustomCollisionDispatcher_director_connect(CustomCollisionDispatcher obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void CustomCollisionDispatcher_change_ownership(CustomCollisionDispatcher obj, long cptr, boolean take_or_release);
  public final static native long new_ContactListener(boolean jarg1);
  public final static native void delete_ContactListener(long jarg1);
  public final static native void ContactListener_enable(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_disable(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_enableOnAdded(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_disableOnAdded(long jarg1, ContactListener jarg1_);
  public final static native boolean ContactListener_isOnAddedEnabled(long jarg1, ContactListener jarg1_);
  public final static native boolean ContactListener_onContactAdded__SWIG_0(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, long jarg6, btCollisionObjectWrapper jarg6_, int jarg7, int jarg8);
  public final static native boolean ContactListener_onContactAdded__SWIG_1(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObject jarg3_, int jarg4, int jarg5, long jarg6, btCollisionObject jarg6_, int jarg7, int jarg8);
  public final static native boolean ContactListener_onContactAdded__SWIG_2(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8);
  public final static native boolean ContactListener_onContactAdded__SWIG_3(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, boolean jarg6, long jarg7, btCollisionObjectWrapper jarg7_, int jarg8, int jarg9, boolean jarg10);
  public final static native boolean ContactListener_onContactAdded__SWIG_4(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObject jarg3_, int jarg4, int jarg5, boolean jarg6, long jarg7, btCollisionObject jarg7_, int jarg8, int jarg9, boolean jarg10);
  public final static native boolean ContactListener_onContactAdded__SWIG_5(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3, int jarg4, int jarg5, boolean jarg6, int jarg7, int jarg8, int jarg9, boolean jarg10);
  public final static native boolean ContactListener_onContactAdded__SWIG_6(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, int jarg3, int jarg4, long jarg5, btCollisionObjectWrapper jarg5_, int jarg6, int jarg7);
  public final static native boolean ContactListener_onContactAdded__SWIG_7(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, int jarg3, int jarg4, long jarg5, btCollisionObject jarg5_, int jarg6, int jarg7);
  public final static native boolean ContactListener_onContactAdded__SWIG_8(long jarg1, ContactListener jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native boolean ContactListener_onContactAdded__SWIG_9(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, int jarg3, int jarg4, boolean jarg5, long jarg6, btCollisionObjectWrapper jarg6_, int jarg7, int jarg8, boolean jarg9);
  public final static native boolean ContactListener_onContactAdded__SWIG_10(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, int jarg3, int jarg4, boolean jarg5, long jarg6, btCollisionObject jarg6_, int jarg7, int jarg8, boolean jarg9);
  public final static native boolean ContactListener_onContactAdded__SWIG_11(long jarg1, ContactListener jarg1_, int jarg2, int jarg3, int jarg4, boolean jarg5, int jarg6, int jarg7, int jarg8, boolean jarg9);
  public final static native void ContactListener_enableOnProcessed(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_disableOnProcessed(long jarg1, ContactListener jarg1_);
  public final static native boolean ContactListener_isOnProcessedEnabled(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_onContactProcessed__SWIG_0(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionObject jarg4_);
  public final static native void ContactListener_onContactProcessed__SWIG_1(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3, int jarg4);
  public final static native void ContactListener_onContactProcessed__SWIG_2(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObject jarg3_, boolean jarg4, long jarg5, btCollisionObject jarg5_, boolean jarg6);
  public final static native void ContactListener_onContactProcessed__SWIG_3(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3, boolean jarg4, int jarg5, boolean jarg6);
  public final static native void ContactListener_onContactProcessed__SWIG_4(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void ContactListener_onContactProcessed__SWIG_5(long jarg1, ContactListener jarg1_, int jarg2, int jarg3);
  public final static native void ContactListener_onContactProcessed__SWIG_6(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, boolean jarg3, long jarg4, btCollisionObject jarg4_, boolean jarg5);
  public final static native void ContactListener_onContactProcessed__SWIG_7(long jarg1, ContactListener jarg1_, int jarg2, boolean jarg3, int jarg4, boolean jarg5);
  public final static native void ContactListener_enableOnDestroyed(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_disableOnDestroyed(long jarg1, ContactListener jarg1_);
  public final static native boolean ContactListener_isOnDestroyedEnabled(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_onContactDestroyed(long jarg1, ContactListener jarg1_, int jarg2);
  public final static native void ContactListener_enableOnStarted(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_disableOnStarted(long jarg1, ContactListener jarg1_);
  public final static native boolean ContactListener_isOnStartedEnabled(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_onContactStarted__SWIG_0(long jarg1, ContactListener jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native void ContactListener_onContactStarted__SWIG_1(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void ContactListener_onContactStarted__SWIG_2(long jarg1, ContactListener jarg1_, int jarg2, int jarg3);
  public final static native void ContactListener_onContactStarted__SWIG_3(long jarg1, ContactListener jarg1_, long jarg2, btPersistentManifold jarg2_, boolean jarg3, boolean jarg4);
  public final static native void ContactListener_onContactStarted__SWIG_4(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, boolean jarg3, long jarg4, btCollisionObject jarg4_, boolean jarg5);
  public final static native void ContactListener_onContactStarted__SWIG_5(long jarg1, ContactListener jarg1_, int jarg2, boolean jarg3, int jarg4, boolean jarg5);
  public final static native void ContactListener_enableOnEnded(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_disableOnEnded(long jarg1, ContactListener jarg1_);
  public final static native boolean ContactListener_isOnEndedEnabled(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_onContactEnded__SWIG_0(long jarg1, ContactListener jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native void ContactListener_onContactEnded__SWIG_1(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void ContactListener_onContactEnded__SWIG_2(long jarg1, ContactListener jarg1_, int jarg2, int jarg3);
  public final static native void ContactListener_onContactEnded__SWIG_3(long jarg1, ContactListener jarg1_, long jarg2, btPersistentManifold jarg2_, boolean jarg3, boolean jarg4);
  public final static native void ContactListener_onContactEnded__SWIG_4(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, boolean jarg3, long jarg4, btCollisionObject jarg4_, boolean jarg5);
  public final static native void ContactListener_onContactEnded__SWIG_5(long jarg1, ContactListener jarg1_, int jarg2, boolean jarg3, int jarg4, boolean jarg5);
  public final static native boolean ContactListener_setEvents(long jarg1, ContactListener jarg1_);
  public final static native void ContactListener_director_connect(ContactListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactListener_change_ownership(ContactListener obj, long cptr, boolean take_or_release);
  public final static native void ContactCache_cacheTime_set(long jarg1, ContactCache jarg1_, float jarg2);
  public final static native float ContactCache_cacheTime_get(long jarg1, ContactCache jarg1_);
  public final static native long new_ContactCache(boolean jarg1);
  public final static native void delete_ContactCache(long jarg1);
  public final static native void ContactCache_enable(long jarg1, ContactCache jarg1_);
  public final static native void ContactCache_disable(long jarg1, ContactCache jarg1_);
  public final static native boolean ContactCache_isEnabled(long jarg1, ContactCache jarg1_);
  public final static native void ContactCache_onContactStarted(long jarg1, ContactCache jarg1_, long jarg2, btPersistentManifold jarg2_, boolean jarg3, boolean jarg4);
  public final static native void ContactCache_onContactEnded(long jarg1, ContactCache jarg1_, long jarg2, btCollisionObject jarg2_, boolean jarg3, long jarg4, btCollisionObject jarg4_, boolean jarg5);
  public final static native void ContactCache_clear(long jarg1, ContactCache jarg1_);
  public final static native void ContactCache_update(long jarg1, ContactCache jarg1_, float jarg2);
  public final static native void ContactCache_director_connect(ContactCache obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactCache_change_ownership(ContactCache obj, long cptr, boolean take_or_release);
  public final static native int btBroadphasePairArray_size(long jarg1, btBroadphasePairArray jarg1_);
  public final static native long btBroadphasePairArray_at(long jarg1, btBroadphasePairArray jarg1_, int jarg2);
  public final static native int btBroadphasePairArray_getCollisionObjects(long jarg1, btBroadphasePairArray jarg1_, int[] jarg2, int jarg3, int jarg4);
  public final static native int btBroadphasePairArray_getCollisionObjectsValue(long jarg1, btBroadphasePairArray jarg1_, int[] jarg2, int jarg3, int jarg4);
  public final static native long new_btBroadphasePairArray();
  public final static native void delete_btBroadphasePairArray(long jarg1);
  public final static native void bt_calc_quantization_parameters(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, float jarg6);
  public final static native void bt_quantize_clamp(java.nio.IntBuffer jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native Vector3 bt_unquantize(java.nio.IntBuffer jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native float bt_mat3_dot_col(Matrix3 jarg1, Vector3 jarg2, int jarg3);
  public final static native void BT_BOX_BOX_TRANSFORM_CACHE_T1to0_set(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long BT_BOX_BOX_TRANSFORM_CACHE_T1to0_get(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_);
  public final static native void BT_BOX_BOX_TRANSFORM_CACHE_R1to0_set(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_, Matrix3 jarg2);
  public final static native Matrix3 BT_BOX_BOX_TRANSFORM_CACHE_R1to0_get(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_);
  public final static native void BT_BOX_BOX_TRANSFORM_CACHE_AR_set(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_, Matrix3 jarg2);
  public final static native Matrix3 BT_BOX_BOX_TRANSFORM_CACHE_AR_get(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_);
  public final static native void BT_BOX_BOX_TRANSFORM_CACHE_calc_absolute_matrix(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_);
  public final static native long new_BT_BOX_BOX_TRANSFORM_CACHE();
  public final static native void BT_BOX_BOX_TRANSFORM_CACHE_calc_from_homogenic(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native void BT_BOX_BOX_TRANSFORM_CACHE_calc_from_full_invert(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native Vector3 BT_BOX_BOX_TRANSFORM_CACHE_transform(long jarg1, BT_BOX_BOX_TRANSFORM_CACHE jarg1_, Vector3 jarg2);
  public final static native void delete_BT_BOX_BOX_TRANSFORM_CACHE(long jarg1);
  public final static native void btAABB_min_set(long jarg1, btAABB jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btAABB_min_get(long jarg1, btAABB jarg1_);
  public final static native void btAABB_max_set(long jarg1, btAABB jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btAABB_max_get(long jarg1, btAABB jarg1_);
  public final static native long new_btAABB__SWIG_0();
  public final static native long new_btAABB__SWIG_1(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native long new_btAABB__SWIG_2(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native long new_btAABB__SWIG_3(long jarg1, btAABB jarg1_);
  public final static native long new_btAABB__SWIG_4(long jarg1, btAABB jarg1_, float jarg2);
  public final static native void btAABB_invalidate(long jarg1, btAABB jarg1_);
  public final static native void btAABB_increment_margin(long jarg1, btAABB jarg1_, float jarg2);
  public final static native void btAABB_copy_with_margin(long jarg1, btAABB jarg1_, long jarg2, btAABB jarg2_, float jarg3);
  public final static native void btAABB_appy_transform(long jarg1, btAABB jarg1_, Matrix4 jarg2);
  public final static native void btAABB_appy_transform_trans_cache(long jarg1, btAABB jarg1_, long jarg2, BT_BOX_BOX_TRANSFORM_CACHE jarg2_);
  public final static native void btAABB_merge(long jarg1, btAABB jarg1_, long jarg2, btAABB jarg2_);
  public final static native void btAABB_get_center_extend(long jarg1, btAABB jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btAABB_find_intersection(long jarg1, btAABB jarg1_, long jarg2, btAABB jarg2_, long jarg3, btAABB jarg3_);
  public final static native boolean btAABB_has_collision(long jarg1, btAABB jarg1_, long jarg2, btAABB jarg2_);
  public final static native boolean btAABB_collide_ray(long jarg1, btAABB jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btAABB_projection_interval(long jarg1, btAABB jarg1_, Vector3 jarg2, long jarg3, long jarg4);
  public final static native int btAABB_plane_classify(long jarg1, btAABB jarg1_, long jarg2, btVector4 jarg2_);
  public final static native boolean btAABB_overlapping_trans_conservative(long jarg1, btAABB jarg1_, long jarg2, btAABB jarg2_, Matrix4 jarg3);
  public final static native boolean btAABB_overlapping_trans_conservative2(long jarg1, btAABB jarg1_, long jarg2, btAABB jarg2_, long jarg3, BT_BOX_BOX_TRANSFORM_CACHE jarg3_);
  public final static native boolean btAABB_overlapping_trans_cache(long jarg1, btAABB jarg1_, long jarg2, btAABB jarg2_, long jarg3, BT_BOX_BOX_TRANSFORM_CACHE jarg3_, boolean jarg4);
  public final static native boolean btAABB_collide_plane(long jarg1, btAABB jarg1_, long jarg2, btVector4 jarg2_);
  public final static native boolean btAABB_collide_triangle_exact(long jarg1, btAABB jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, btVector4 jarg5_);
  public final static native void delete_btAABB(long jarg1);
  public final static native boolean btCompareTransformsEqual(Matrix4 jarg1, Matrix4 jarg2);
  public final static native float bt_distance_point_plane(long jarg1, btVector4 jarg1_, Vector3 jarg2);
  public final static native void bt_vec_blend(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native void bt_plane_clip_polygon_collect(Vector3 jarg1, Vector3 jarg2, float jarg3, float jarg4, long jarg5, btVector3 jarg5_, long jarg6);
  public final static native int bt_plane_clip_polygon(long jarg1, btVector4 jarg1_, long jarg2, btVector3 jarg2_, int jarg3, long jarg4, btVector3 jarg4_);
  public final static native int bt_plane_clip_triangle(long jarg1, btVector4 jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, btVector3 jarg5_);
  public final static native void bt_edge_plane(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, long jarg4, btVector4 jarg4_);
  public final static native void bt_closest_point_on_segment(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native int bt_line_plane_collision(long jarg1, btVector4 jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, float jarg6, float jarg7);
  public final static native void bt_segment_collision(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native void GIM_TRIANGLE_CONTACT_penetration_depth_set(long jarg1, GIM_TRIANGLE_CONTACT jarg1_, float jarg2);
  public final static native float GIM_TRIANGLE_CONTACT_penetration_depth_get(long jarg1, GIM_TRIANGLE_CONTACT jarg1_);
  public final static native void GIM_TRIANGLE_CONTACT_point_count_set(long jarg1, GIM_TRIANGLE_CONTACT jarg1_, int jarg2);
  public final static native int GIM_TRIANGLE_CONTACT_point_count_get(long jarg1, GIM_TRIANGLE_CONTACT jarg1_);
  public final static native void GIM_TRIANGLE_CONTACT_separating_normal_set(long jarg1, GIM_TRIANGLE_CONTACT jarg1_, long jarg2, btVector4 jarg2_);
  public final static native long GIM_TRIANGLE_CONTACT_separating_normal_get(long jarg1, GIM_TRIANGLE_CONTACT jarg1_);
  public final static native void GIM_TRIANGLE_CONTACT_points_set(long jarg1, GIM_TRIANGLE_CONTACT jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long GIM_TRIANGLE_CONTACT_points_get(long jarg1, GIM_TRIANGLE_CONTACT jarg1_);
  public final static native void GIM_TRIANGLE_CONTACT_copy_from(long jarg1, GIM_TRIANGLE_CONTACT jarg1_, long jarg2, GIM_TRIANGLE_CONTACT jarg2_);
  public final static native long new_GIM_TRIANGLE_CONTACT__SWIG_0();
  public final static native long new_GIM_TRIANGLE_CONTACT__SWIG_1(long jarg1, GIM_TRIANGLE_CONTACT jarg1_);
  public final static native void GIM_TRIANGLE_CONTACT_merge_points(long jarg1, GIM_TRIANGLE_CONTACT jarg1_, long jarg2, btVector4 jarg2_, float jarg3, long jarg4, btVector3 jarg4_, int jarg5);
  public final static native void delete_GIM_TRIANGLE_CONTACT(long jarg1);
  public final static native void btPrimitiveTriangle_vertices_set(long jarg1, btPrimitiveTriangle jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btPrimitiveTriangle_vertices_get(long jarg1, btPrimitiveTriangle jarg1_);
  public final static native void btPrimitiveTriangle_plane_set(long jarg1, btPrimitiveTriangle jarg1_, long jarg2, btVector4 jarg2_);
  public final static native long btPrimitiveTriangle_plane_get(long jarg1, btPrimitiveTriangle jarg1_);
  public final static native void btPrimitiveTriangle_margin_set(long jarg1, btPrimitiveTriangle jarg1_, float jarg2);
  public final static native float btPrimitiveTriangle_margin_get(long jarg1, btPrimitiveTriangle jarg1_);
  public final static native void btPrimitiveTriangle_dummy_set(long jarg1, btPrimitiveTriangle jarg1_, float jarg2);
  public final static native float btPrimitiveTriangle_dummy_get(long jarg1, btPrimitiveTriangle jarg1_);
  public final static native long new_btPrimitiveTriangle();
  public final static native void btPrimitiveTriangle_buildTriPlane(long jarg1, btPrimitiveTriangle jarg1_);
  public final static native boolean btPrimitiveTriangle_overlap_test_conservative(long jarg1, btPrimitiveTriangle jarg1_, long jarg2, btPrimitiveTriangle jarg2_);
  public final static native void btPrimitiveTriangle_get_edge_plane(long jarg1, btPrimitiveTriangle jarg1_, int jarg2, long jarg3, btVector4 jarg3_);
  public final static native void btPrimitiveTriangle_applyTransform(long jarg1, btPrimitiveTriangle jarg1_, Matrix4 jarg2);
  public final static native int btPrimitiveTriangle_clip_triangle(long jarg1, btPrimitiveTriangle jarg1_, long jarg2, btPrimitiveTriangle jarg2_, long jarg3, btVector3 jarg3_);
  public final static native boolean btPrimitiveTriangle_find_triangle_collision_clip_method(long jarg1, btPrimitiveTriangle jarg1_, long jarg2, btPrimitiveTriangle jarg2_, long jarg3, GIM_TRIANGLE_CONTACT jarg3_);
  public final static native void delete_btPrimitiveTriangle(long jarg1);
  public final static native long new_btTriangleShapeEx__SWIG_0();
  public final static native long new_btTriangleShapeEx__SWIG_1(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native long new_btTriangleShapeEx__SWIG_2(long jarg1, btTriangleShapeEx jarg1_);
  public final static native void btTriangleShapeEx_applyTransform(long jarg1, btTriangleShapeEx jarg1_, Matrix4 jarg2);
  public final static native void btTriangleShapeEx_buildTriPlane(long jarg1, btTriangleShapeEx jarg1_, long jarg2, btVector4 jarg2_);
  public final static native boolean btTriangleShapeEx_overlap_test_conservative(long jarg1, btTriangleShapeEx jarg1_, long jarg2, btTriangleShapeEx jarg2_);
  public final static native void delete_btTriangleShapeEx(long jarg1);
  public final static native void GIM_PAIR_index1_set(long jarg1, GIM_PAIR jarg1_, int jarg2);
  public final static native int GIM_PAIR_index1_get(long jarg1, GIM_PAIR jarg1_);
  public final static native void GIM_PAIR_index2_set(long jarg1, GIM_PAIR jarg1_, int jarg2);
  public final static native int GIM_PAIR_index2_get(long jarg1, GIM_PAIR jarg1_);
  public final static native long new_GIM_PAIR__SWIG_0();
  public final static native long new_GIM_PAIR__SWIG_1(long jarg1, GIM_PAIR jarg1_);
  public final static native long new_GIM_PAIR__SWIG_2(int jarg1, int jarg2);
  public final static native void delete_GIM_PAIR(long jarg1);
  public final static native long new_btPairSet();
  public final static native void btPairSet_push_pair(long jarg1, btPairSet jarg1_, int jarg2, int jarg3);
  public final static native void btPairSet_push_pair_inv(long jarg1, btPairSet jarg1_, int jarg2, int jarg3);
  public final static native void delete_btPairSet(long jarg1);
  public final static native void GIM_BVH_DATA_bound_set(long jarg1, GIM_BVH_DATA jarg1_, long jarg2, btAABB jarg2_);
  public final static native long GIM_BVH_DATA_bound_get(long jarg1, GIM_BVH_DATA jarg1_);
  public final static native void GIM_BVH_DATA_data_set(long jarg1, GIM_BVH_DATA jarg1_, int jarg2);
  public final static native int GIM_BVH_DATA_data_get(long jarg1, GIM_BVH_DATA jarg1_);
  public final static native long new_GIM_BVH_DATA();
  public final static native void delete_GIM_BVH_DATA(long jarg1);
  public final static native void GIM_BVH_TREE_NODE_bound_set(long jarg1, GIM_BVH_TREE_NODE jarg1_, long jarg2, btAABB jarg2_);
  public final static native long GIM_BVH_TREE_NODE_bound_get(long jarg1, GIM_BVH_TREE_NODE jarg1_);
  public final static native long new_GIM_BVH_TREE_NODE();
  public final static native boolean GIM_BVH_TREE_NODE_isLeafNode(long jarg1, GIM_BVH_TREE_NODE jarg1_);
  public final static native int GIM_BVH_TREE_NODE_getEscapeIndex(long jarg1, GIM_BVH_TREE_NODE jarg1_);
  public final static native void GIM_BVH_TREE_NODE_setEscapeIndex(long jarg1, GIM_BVH_TREE_NODE jarg1_, int jarg2);
  public final static native int GIM_BVH_TREE_NODE_getDataIndex(long jarg1, GIM_BVH_TREE_NODE jarg1_);
  public final static native void GIM_BVH_TREE_NODE_setDataIndex(long jarg1, GIM_BVH_TREE_NODE jarg1_, int jarg2);
  public final static native void delete_GIM_BVH_TREE_NODE(long jarg1);
  public final static native long new_GIM_BVH_DATA_ARRAY();
  public final static native void delete_GIM_BVH_DATA_ARRAY(long jarg1);
  public final static native long new_GIM_BVH_TREE_NODE_ARRAY();
  public final static native void delete_GIM_BVH_TREE_NODE_ARRAY(long jarg1);
  public final static native long new_btBvhTree();
  public final static native void btBvhTree_build_tree(long jarg1, btBvhTree jarg1_, long jarg2, GIM_BVH_DATA_ARRAY jarg2_);
  public final static native void btBvhTree_clearNodes(long jarg1, btBvhTree jarg1_);
  public final static native int btBvhTree_getNodeCount(long jarg1, btBvhTree jarg1_);
  public final static native boolean btBvhTree_isLeafNode(long jarg1, btBvhTree jarg1_, int jarg2);
  public final static native int btBvhTree_getNodeData(long jarg1, btBvhTree jarg1_, int jarg2);
  public final static native void btBvhTree_getNodeBound(long jarg1, btBvhTree jarg1_, int jarg2, long jarg3, btAABB jarg3_);
  public final static native void btBvhTree_setNodeBound(long jarg1, btBvhTree jarg1_, int jarg2, long jarg3, btAABB jarg3_);
  public final static native int btBvhTree_getLeftNode(long jarg1, btBvhTree jarg1_, int jarg2);
  public final static native int btBvhTree_getRightNode(long jarg1, btBvhTree jarg1_, int jarg2);
  public final static native int btBvhTree_getEscapeNodeIndex(long jarg1, btBvhTree jarg1_, int jarg2);
  public final static native long btBvhTree_get_node_pointer__SWIG_0(long jarg1, btBvhTree jarg1_, int jarg2);
  public final static native long btBvhTree_get_node_pointer__SWIG_1(long jarg1, btBvhTree jarg1_);
  public final static native void delete_btBvhTree(long jarg1);
  public final static native void delete_btPrimitiveManagerBase(long jarg1);
  public final static native boolean btPrimitiveManagerBase_is_trimesh(long jarg1, btPrimitiveManagerBase jarg1_);
  public final static native int btPrimitiveManagerBase_get_primitive_count(long jarg1, btPrimitiveManagerBase jarg1_);
  public final static native void btPrimitiveManagerBase_get_primitive_box(long jarg1, btPrimitiveManagerBase jarg1_, int jarg2, long jarg3, btAABB jarg3_);
  public final static native void btPrimitiveManagerBase_get_primitive_triangle(long jarg1, btPrimitiveManagerBase jarg1_, int jarg2, long jarg3, btPrimitiveTriangle jarg3_);
  public final static native long new_btGImpactBvh__SWIG_0();
  public final static native long new_btGImpactBvh__SWIG_1(long jarg1, btPrimitiveManagerBase jarg1_);
  public final static native long btGImpactBvh_getGlobalBox(long jarg1, btGImpactBvh jarg1_);
  public final static native void btGImpactBvh_setPrimitiveManager(long jarg1, btGImpactBvh jarg1_, long jarg2, btPrimitiveManagerBase jarg2_);
  public final static native long btGImpactBvh_getPrimitiveManager(long jarg1, btGImpactBvh jarg1_);
  public final static native void btGImpactBvh_update(long jarg1, btGImpactBvh jarg1_);
  public final static native void btGImpactBvh_buildSet(long jarg1, btGImpactBvh jarg1_);
  public final static native boolean btGImpactBvh_boxQuery(long jarg1, btGImpactBvh jarg1_, long jarg2, btAABB jarg2_, long jarg3);
  public final static native boolean btGImpactBvh_boxQueryTrans(long jarg1, btGImpactBvh jarg1_, long jarg2, btAABB jarg2_, Matrix4 jarg3, long jarg4);
  public final static native boolean btGImpactBvh_rayQuery(long jarg1, btGImpactBvh jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4);
  public final static native boolean btGImpactBvh_hasHierarchy(long jarg1, btGImpactBvh jarg1_);
  public final static native boolean btGImpactBvh_isTrimesh(long jarg1, btGImpactBvh jarg1_);
  public final static native int btGImpactBvh_getNodeCount(long jarg1, btGImpactBvh jarg1_);
  public final static native boolean btGImpactBvh_isLeafNode(long jarg1, btGImpactBvh jarg1_, int jarg2);
  public final static native int btGImpactBvh_getNodeData(long jarg1, btGImpactBvh jarg1_, int jarg2);
  public final static native void btGImpactBvh_getNodeBound(long jarg1, btGImpactBvh jarg1_, int jarg2, long jarg3, btAABB jarg3_);
  public final static native void btGImpactBvh_setNodeBound(long jarg1, btGImpactBvh jarg1_, int jarg2, long jarg3, btAABB jarg3_);
  public final static native int btGImpactBvh_getLeftNode(long jarg1, btGImpactBvh jarg1_, int jarg2);
  public final static native int btGImpactBvh_getRightNode(long jarg1, btGImpactBvh jarg1_, int jarg2);
  public final static native int btGImpactBvh_getEscapeNodeIndex(long jarg1, btGImpactBvh jarg1_, int jarg2);
  public final static native void btGImpactBvh_getNodeTriangle(long jarg1, btGImpactBvh jarg1_, int jarg2, long jarg3, btPrimitiveTriangle jarg3_);
  public final static native long btGImpactBvh_get_node_pointer__SWIG_0(long jarg1, btGImpactBvh jarg1_, int jarg2);
  public final static native long btGImpactBvh_get_node_pointer__SWIG_1(long jarg1, btGImpactBvh jarg1_);
  public final static native void btGImpactBvh_find_collision(long jarg1, btGImpactBvh jarg1_, Matrix4 jarg2, long jarg3, btGImpactBvh jarg3_, Matrix4 jarg4, long jarg5, btPairSet jarg5_);
  public final static native void delete_btGImpactBvh(long jarg1);
  public final static native void BT_QUANTIZED_BVH_NODE_quantizedAabbMin_set(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_, int[] jarg2);
  public final static native int[] BT_QUANTIZED_BVH_NODE_quantizedAabbMin_get(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_);
  public final static native void BT_QUANTIZED_BVH_NODE_quantizedAabbMax_set(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_, int[] jarg2);
  public final static native int[] BT_QUANTIZED_BVH_NODE_quantizedAabbMax_get(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_);
  public final static native void BT_QUANTIZED_BVH_NODE_escapeIndexOrDataIndex_set(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_, int jarg2);
  public final static native int BT_QUANTIZED_BVH_NODE_escapeIndexOrDataIndex_get(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_);
  public final static native long new_BT_QUANTIZED_BVH_NODE();
  public final static native boolean BT_QUANTIZED_BVH_NODE_isLeafNode(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_);
  public final static native int BT_QUANTIZED_BVH_NODE_getEscapeIndex(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_);
  public final static native void BT_QUANTIZED_BVH_NODE_setEscapeIndex(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_, int jarg2);
  public final static native int BT_QUANTIZED_BVH_NODE_getDataIndex(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_);
  public final static native void BT_QUANTIZED_BVH_NODE_setDataIndex(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_, int jarg2);
  public final static native boolean BT_QUANTIZED_BVH_NODE_testQuantizedBoxOverlapp(long jarg1, BT_QUANTIZED_BVH_NODE jarg1_, java.nio.IntBuffer jarg2, java.nio.IntBuffer jarg3);
  public final static native void delete_BT_QUANTIZED_BVH_NODE(long jarg1);
  public final static native long new_GIM_QUANTIZED_BVH_NODE_ARRAY();
  public final static native void delete_GIM_QUANTIZED_BVH_NODE_ARRAY(long jarg1);
  public final static native long new_btQuantizedBvhTree();
  public final static native void btQuantizedBvhTree_build_tree(long jarg1, btQuantizedBvhTree jarg1_, long jarg2, GIM_BVH_DATA_ARRAY jarg2_);
  public final static native void btQuantizedBvhTree_quantizePoint(long jarg1, btQuantizedBvhTree jarg1_, java.nio.IntBuffer jarg2, Vector3 jarg3);
  public final static native boolean btQuantizedBvhTree_testQuantizedBoxOverlapp(long jarg1, btQuantizedBvhTree jarg1_, int jarg2, java.nio.IntBuffer jarg3, java.nio.IntBuffer jarg4);
  public final static native void btQuantizedBvhTree_clearNodes(long jarg1, btQuantizedBvhTree jarg1_);
  public final static native int btQuantizedBvhTree_getNodeCount(long jarg1, btQuantizedBvhTree jarg1_);
  public final static native boolean btQuantizedBvhTree_isLeafNode(long jarg1, btQuantizedBvhTree jarg1_, int jarg2);
  public final static native int btQuantizedBvhTree_getNodeData(long jarg1, btQuantizedBvhTree jarg1_, int jarg2);
  public final static native void btQuantizedBvhTree_getNodeBound(long jarg1, btQuantizedBvhTree jarg1_, int jarg2, long jarg3, btAABB jarg3_);
  public final static native void btQuantizedBvhTree_setNodeBound(long jarg1, btQuantizedBvhTree jarg1_, int jarg2, long jarg3, btAABB jarg3_);
  public final static native int btQuantizedBvhTree_getLeftNode(long jarg1, btQuantizedBvhTree jarg1_, int jarg2);
  public final static native int btQuantizedBvhTree_getRightNode(long jarg1, btQuantizedBvhTree jarg1_, int jarg2);
  public final static native int btQuantizedBvhTree_getEscapeNodeIndex(long jarg1, btQuantizedBvhTree jarg1_, int jarg2);
  public final static native long btQuantizedBvhTree_get_node_pointer__SWIG_0(long jarg1, btQuantizedBvhTree jarg1_, int jarg2);
  public final static native long btQuantizedBvhTree_get_node_pointer__SWIG_1(long jarg1, btQuantizedBvhTree jarg1_);
  public final static native void delete_btQuantizedBvhTree(long jarg1);
  public final static native long new_btGImpactQuantizedBvh__SWIG_0();
  public final static native long new_btGImpactQuantizedBvh__SWIG_1(long jarg1, btPrimitiveManagerBase jarg1_);
  public final static native long btGImpactQuantizedBvh_getGlobalBox(long jarg1, btGImpactQuantizedBvh jarg1_);
  public final static native void btGImpactQuantizedBvh_setPrimitiveManager(long jarg1, btGImpactQuantizedBvh jarg1_, long jarg2, btPrimitiveManagerBase jarg2_);
  public final static native long btGImpactQuantizedBvh_getPrimitiveManager(long jarg1, btGImpactQuantizedBvh jarg1_);
  public final static native void btGImpactQuantizedBvh_update(long jarg1, btGImpactQuantizedBvh jarg1_);
  public final static native void btGImpactQuantizedBvh_buildSet(long jarg1, btGImpactQuantizedBvh jarg1_);
  public final static native boolean btGImpactQuantizedBvh_boxQuery(long jarg1, btGImpactQuantizedBvh jarg1_, long jarg2, btAABB jarg2_, long jarg3);
  public final static native boolean btGImpactQuantizedBvh_boxQueryTrans(long jarg1, btGImpactQuantizedBvh jarg1_, long jarg2, btAABB jarg2_, Matrix4 jarg3, long jarg4);
  public final static native boolean btGImpactQuantizedBvh_rayQuery(long jarg1, btGImpactQuantizedBvh jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4);
  public final static native boolean btGImpactQuantizedBvh_hasHierarchy(long jarg1, btGImpactQuantizedBvh jarg1_);
  public final static native boolean btGImpactQuantizedBvh_isTrimesh(long jarg1, btGImpactQuantizedBvh jarg1_);
  public final static native int btGImpactQuantizedBvh_getNodeCount(long jarg1, btGImpactQuantizedBvh jarg1_);
  public final static native boolean btGImpactQuantizedBvh_isLeafNode(long jarg1, btGImpactQuantizedBvh jarg1_, int jarg2);
  public final static native int btGImpactQuantizedBvh_getNodeData(long jarg1, btGImpactQuantizedBvh jarg1_, int jarg2);
  public final static native void btGImpactQuantizedBvh_getNodeBound(long jarg1, btGImpactQuantizedBvh jarg1_, int jarg2, long jarg3, btAABB jarg3_);
  public final static native void btGImpactQuantizedBvh_setNodeBound(long jarg1, btGImpactQuantizedBvh jarg1_, int jarg2, long jarg3, btAABB jarg3_);
  public final static native int btGImpactQuantizedBvh_getLeftNode(long jarg1, btGImpactQuantizedBvh jarg1_, int jarg2);
  public final static native int btGImpactQuantizedBvh_getRightNode(long jarg1, btGImpactQuantizedBvh jarg1_, int jarg2);
  public final static native int btGImpactQuantizedBvh_getEscapeNodeIndex(long jarg1, btGImpactQuantizedBvh jarg1_, int jarg2);
  public final static native void btGImpactQuantizedBvh_getNodeTriangle(long jarg1, btGImpactQuantizedBvh jarg1_, int jarg2, long jarg3, btPrimitiveTriangle jarg3_);
  public final static native long btGImpactQuantizedBvh_get_node_pointer__SWIG_0(long jarg1, btGImpactQuantizedBvh jarg1_, int jarg2);
  public final static native long btGImpactQuantizedBvh_get_node_pointer__SWIG_1(long jarg1, btGImpactQuantizedBvh jarg1_);
  public final static native void btGImpactQuantizedBvh_find_collision(long jarg1, btGImpactQuantizedBvh jarg1_, Matrix4 jarg2, long jarg3, btGImpactQuantizedBvh jarg3_, Matrix4 jarg4, long jarg5, btPairSet jarg5_);
  public final static native void delete_btGImpactQuantizedBvh(long jarg1);
  public final static native long new_btTetrahedronShapeEx();
  public final static native void btTetrahedronShapeEx_setVertices(long jarg1, btTetrahedronShapeEx jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native void delete_btTetrahedronShapeEx(long jarg1);
  public final static native void btGImpactShapeInterface_updateBound(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native void btGImpactShapeInterface_postUpdate(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native long btGImpactShapeInterface_getLocalBox(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native int btGImpactShapeInterface_getShapeType(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native int btGImpactShapeInterface_getGImpactShapeType(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native long btGImpactShapeInterface_getBoxSet(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native boolean btGImpactShapeInterface_hasBoxSet(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native long btGImpactShapeInterface_getPrimitiveManager(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native int btGImpactShapeInterface_getNumChildShapes(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native boolean btGImpactShapeInterface_childrenHasTransform(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native boolean btGImpactShapeInterface_needsRetrieveTriangles(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native boolean btGImpactShapeInterface_needsRetrieveTetrahedrons(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native void btGImpactShapeInterface_getBulletTriangle(long jarg1, btGImpactShapeInterface jarg1_, int jarg2, long jarg3, btTriangleShapeEx jarg3_);
  public final static native void btGImpactShapeInterface_getBulletTetrahedron(long jarg1, btGImpactShapeInterface jarg1_, int jarg2, long jarg3, btTetrahedronShapeEx jarg3_);
  public final static native void btGImpactShapeInterface_lockChildShapes(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native void btGImpactShapeInterface_unlockChildShapes(long jarg1, btGImpactShapeInterface jarg1_);
  public final static native void btGImpactShapeInterface_getPrimitiveTriangle(long jarg1, btGImpactShapeInterface jarg1_, int jarg2, long jarg3, btPrimitiveTriangle jarg3_);
  public final static native void btGImpactShapeInterface_getChildAabb(long jarg1, btGImpactShapeInterface jarg1_, int jarg2, Matrix4 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native long btGImpactShapeInterface_getChildShape__SWIG_0(long jarg1, btGImpactShapeInterface jarg1_, int jarg2);
  public final static native Matrix4 btGImpactShapeInterface_getChildTransform(long jarg1, btGImpactShapeInterface jarg1_, int jarg2);
  public final static native void btGImpactShapeInterface_setChildTransform(long jarg1, btGImpactShapeInterface jarg1_, int jarg2, Matrix4 jarg3);
  public final static native void btGImpactShapeInterface_rayTest(long jarg1, btGImpactShapeInterface jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, RayResultCallback jarg4_);
  public final static native void btGImpactShapeInterface_processAllTrianglesRay(long jarg1, btGImpactShapeInterface jarg1_, long jarg2, btTriangleCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void delete_btGImpactShapeInterface(long jarg1);
  public final static native void delete_btGImpactCompoundShape_CompoundPrimitiveManager(long jarg1);
  public final static native void btGImpactCompoundShape_CompoundPrimitiveManager_compoundShape_set(long jarg1, btGImpactCompoundShape.CompoundPrimitiveManager jarg1_, long jarg2, btGImpactCompoundShape jarg2_);
  public final static native long btGImpactCompoundShape_CompoundPrimitiveManager_compoundShape_get(long jarg1, btGImpactCompoundShape.CompoundPrimitiveManager jarg1_);
  public final static native long new_btGImpactCompoundShape_CompoundPrimitiveManager__SWIG_0(long jarg1, btGImpactCompoundShape.CompoundPrimitiveManager jarg1_);
  public final static native long new_btGImpactCompoundShape_CompoundPrimitiveManager__SWIG_1(long jarg1, btGImpactCompoundShape jarg1_);
  public final static native long new_btGImpactCompoundShape_CompoundPrimitiveManager__SWIG_2();
  public final static native long new_btGImpactCompoundShape__SWIG_0(boolean jarg1);
  public final static native long new_btGImpactCompoundShape__SWIG_1();
  public final static native void delete_btGImpactCompoundShape(long jarg1);
  public final static native long btGImpactCompoundShape_getCompoundPrimitiveManager(long jarg1, btGImpactCompoundShape jarg1_);
  public final static native void btGImpactCompoundShape_addChildShape__SWIG_0(long jarg1, btGImpactCompoundShape jarg1_, Matrix4 jarg2, long jarg3, btCollisionShape jarg3_);
  public final static native void btGImpactCompoundShape_addChildShape__SWIG_1(long jarg1, btGImpactCompoundShape jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native long btGImpactCompoundShape_getChildShape__SWIG_0(long jarg1, btGImpactCompoundShape jarg1_, int jarg2);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_margin_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, float jarg2);
  public final static native float btGImpactMeshShapePart_TrimeshPrimitiveManager_margin_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_meshInterface_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, long jarg2, btStridingMeshInterface jarg2_);
  public final static native long btGImpactMeshShapePart_TrimeshPrimitiveManager_meshInterface_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_scale_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btGImpactMeshShapePart_TrimeshPrimitiveManager_scale_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_part_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2);
  public final static native int btGImpactMeshShapePart_TrimeshPrimitiveManager_part_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_lock_count_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2);
  public final static native int btGImpactMeshShapePart_TrimeshPrimitiveManager_lock_count_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_vertexbase_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btGImpactMeshShapePart_TrimeshPrimitiveManager_vertexbase_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_numverts_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2);
  public final static native int btGImpactMeshShapePart_TrimeshPrimitiveManager_numverts_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_type_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2);
  public final static native int btGImpactMeshShapePart_TrimeshPrimitiveManager_type_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_stride_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2);
  public final static native int btGImpactMeshShapePart_TrimeshPrimitiveManager_stride_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_indexbase_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btGImpactMeshShapePart_TrimeshPrimitiveManager_indexbase_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_indexstride_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2);
  public final static native int btGImpactMeshShapePart_TrimeshPrimitiveManager_indexstride_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_numfaces_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2);
  public final static native int btGImpactMeshShapePart_TrimeshPrimitiveManager_numfaces_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_indicestype_set(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2);
  public final static native int btGImpactMeshShapePart_TrimeshPrimitiveManager_indicestype_get(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native long new_btGImpactMeshShapePart_TrimeshPrimitiveManager__SWIG_0();
  public final static native long new_btGImpactMeshShapePart_TrimeshPrimitiveManager__SWIG_1(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native long new_btGImpactMeshShapePart_TrimeshPrimitiveManager__SWIG_2(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native void delete_btGImpactMeshShapePart_TrimeshPrimitiveManager(long jarg1);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_lock(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_unlock(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native int btGImpactMeshShapePart_TrimeshPrimitiveManager_get_vertex_count(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_get_indices(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_get_vertex(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, long jarg2, Vector3 jarg3);
  public final static native void btGImpactMeshShapePart_TrimeshPrimitiveManager_get_bullet_triangle(long jarg1, btGImpactMeshShapePart.TrimeshPrimitiveManager jarg1_, int jarg2, long jarg3, btTriangleShapeEx jarg3_);
  public final static native long new_btGImpactMeshShapePart__SWIG_0();
  public final static native long new_btGImpactMeshShapePart__SWIG_1(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native void delete_btGImpactMeshShapePart(long jarg1);
  public final static native long btGImpactMeshShapePart_getChildShape__SWIG_0(long jarg1, btGImpactMeshShapePart jarg1_, int jarg2);
  public final static native long btGImpactMeshShapePart_getTrimeshPrimitiveManager(long jarg1, btGImpactMeshShapePart jarg1_);
  public final static native int btGImpactMeshShapePart_getVertexCount(long jarg1, btGImpactMeshShapePart jarg1_);
  public final static native void btGImpactMeshShapePart_getVertex(long jarg1, btGImpactMeshShapePart jarg1_, int jarg2, Vector3 jarg3);
  public final static native int btGImpactMeshShapePart_getPart(long jarg1, btGImpactMeshShapePart jarg1_);
  public final static native long new_btGImpactMeshShape(long jarg1, btStridingMeshInterface jarg1_);
  public final static native void delete_btGImpactMeshShape(long jarg1);
  public final static native long btGImpactMeshShape_getMeshInterface__SWIG_0(long jarg1, btGImpactMeshShape jarg1_);
  public final static native int btGImpactMeshShape_getMeshPartCount(long jarg1, btGImpactMeshShape jarg1_);
  public final static native long btGImpactMeshShape_getMeshPart__SWIG_0(long jarg1, btGImpactMeshShape jarg1_, int jarg2);
  public final static native long btGImpactMeshShape_getChildShape__SWIG_0(long jarg1, btGImpactMeshShape jarg1_, int jarg2);
  public final static native void btGImpactMeshShapeData_collisionShapeData_set(long jarg1, btGImpactMeshShapeData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btGImpactMeshShapeData_collisionShapeData_get(long jarg1, btGImpactMeshShapeData jarg1_);
  public final static native void btGImpactMeshShapeData_meshInterface_set(long jarg1, btGImpactMeshShapeData jarg1_, long jarg2, btStridingMeshInterfaceData jarg2_);
  public final static native long btGImpactMeshShapeData_meshInterface_get(long jarg1, btGImpactMeshShapeData jarg1_);
  public final static native void btGImpactMeshShapeData_localScaling_set(long jarg1, btGImpactMeshShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btGImpactMeshShapeData_localScaling_get(long jarg1, btGImpactMeshShapeData jarg1_);
  public final static native void btGImpactMeshShapeData_collisionMargin_set(long jarg1, btGImpactMeshShapeData jarg1_, float jarg2);
  public final static native float btGImpactMeshShapeData_collisionMargin_get(long jarg1, btGImpactMeshShapeData jarg1_);
  public final static native void btGImpactMeshShapeData_gimpactSubType_set(long jarg1, btGImpactMeshShapeData jarg1_, int jarg2);
  public final static native int btGImpactMeshShapeData_gimpactSubType_get(long jarg1, btGImpactMeshShapeData jarg1_);
  public final static native long new_btGImpactMeshShapeData();
  public final static native void delete_btGImpactMeshShapeData(long jarg1);
  public final static native void GIM_CONTACT_point_set(long jarg1, GIM_CONTACT jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long GIM_CONTACT_point_get(long jarg1, GIM_CONTACT jarg1_);
  public final static native void GIM_CONTACT_normal_set(long jarg1, GIM_CONTACT jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long GIM_CONTACT_normal_get(long jarg1, GIM_CONTACT jarg1_);
  public final static native void GIM_CONTACT_depth_set(long jarg1, GIM_CONTACT jarg1_, float jarg2);
  public final static native float GIM_CONTACT_depth_get(long jarg1, GIM_CONTACT jarg1_);
  public final static native void GIM_CONTACT_distance_set(long jarg1, GIM_CONTACT jarg1_, float jarg2);
  public final static native float GIM_CONTACT_distance_get(long jarg1, GIM_CONTACT jarg1_);
  public final static native void GIM_CONTACT_feature1_set(long jarg1, GIM_CONTACT jarg1_, int jarg2);
  public final static native int GIM_CONTACT_feature1_get(long jarg1, GIM_CONTACT jarg1_);
  public final static native void GIM_CONTACT_feature2_set(long jarg1, GIM_CONTACT jarg1_, int jarg2);
  public final static native int GIM_CONTACT_feature2_get(long jarg1, GIM_CONTACT jarg1_);
  public final static native long new_GIM_CONTACT__SWIG_0();
  public final static native long new_GIM_CONTACT__SWIG_1(long jarg1, GIM_CONTACT jarg1_);
  public final static native long new_GIM_CONTACT__SWIG_2(Vector3 jarg1, Vector3 jarg2, float jarg3, int jarg4, int jarg5);
  public final static native long GIM_CONTACT_calc_key_contact(long jarg1, GIM_CONTACT jarg1_);
  public final static native void GIM_CONTACT_interpolate_normals(long jarg1, GIM_CONTACT jarg1_, long jarg2, btVector3 jarg2_, int jarg3);
  public final static native void delete_GIM_CONTACT(long jarg1);
  public final static native long new_btContactArray();
  public final static native void btContactArray_push_contact(long jarg1, btContactArray jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4, int jarg5, int jarg6);
  public final static native void btContactArray_push_triangle_contacts(long jarg1, btContactArray jarg1_, long jarg2, GIM_TRIANGLE_CONTACT jarg2_, int jarg3, int jarg4);
  public final static native void btContactArray_merge_contacts__SWIG_0(long jarg1, btContactArray jarg1_, long jarg2, btContactArray jarg2_, boolean jarg3);
  public final static native void btContactArray_merge_contacts__SWIG_1(long jarg1, btContactArray jarg1_, long jarg2, btContactArray jarg2_);
  public final static native void btContactArray_merge_contacts_unique(long jarg1, btContactArray jarg1_, long jarg2, btContactArray jarg2_);
  public final static native void delete_btContactArray(long jarg1);
  public final static native void btGenericMemoryPool_pool_set(long jarg1, btGenericMemoryPool jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btGenericMemoryPool_pool_get(long jarg1, btGenericMemoryPool jarg1_);
  public final static native void btGenericMemoryPool_free_nodes_set(long jarg1, btGenericMemoryPool jarg1_, long jarg2);
  public final static native long btGenericMemoryPool_free_nodes_get(long jarg1, btGenericMemoryPool jarg1_);
  public final static native void btGenericMemoryPool_allocated_sizes_set(long jarg1, btGenericMemoryPool jarg1_, long jarg2);
  public final static native long btGenericMemoryPool_allocated_sizes_get(long jarg1, btGenericMemoryPool jarg1_);
  public final static native void btGenericMemoryPool_allocated_count_set(long jarg1, btGenericMemoryPool jarg1_, long jarg2);
  public final static native long btGenericMemoryPool_allocated_count_get(long jarg1, btGenericMemoryPool jarg1_);
  public final static native void btGenericMemoryPool_free_nodes_count_set(long jarg1, btGenericMemoryPool jarg1_, long jarg2);
  public final static native long btGenericMemoryPool_free_nodes_count_get(long jarg1, btGenericMemoryPool jarg1_);
  public final static native void btGenericMemoryPool_init_pool(long jarg1, btGenericMemoryPool jarg1_, long jarg2, long jarg3);
  public final static native void btGenericMemoryPool_end_pool(long jarg1, btGenericMemoryPool jarg1_);
  public final static native long new_btGenericMemoryPool(long jarg1, long jarg2);
  public final static native void delete_btGenericMemoryPool(long jarg1);
  public final static native long btGenericMemoryPool_get_pool_capacity(long jarg1, btGenericMemoryPool jarg1_);
  public final static native long btGenericMemoryPool_gem_element_size(long jarg1, btGenericMemoryPool jarg1_);
  public final static native long btGenericMemoryPool_get_max_element_count(long jarg1, btGenericMemoryPool jarg1_);
  public final static native long btGenericMemoryPool_get_allocated_count(long jarg1, btGenericMemoryPool jarg1_);
  public final static native long btGenericMemoryPool_get_free_positions_count(long jarg1, btGenericMemoryPool jarg1_);
  public final static native long btGenericMemoryPool_get_element_data(long jarg1, btGenericMemoryPool jarg1_, long jarg2);
  public final static native long btGenericMemoryPool_allocate(long jarg1, btGenericMemoryPool jarg1_, long jarg2);
  public final static native boolean btGenericMemoryPool_freeMemory(long jarg1, btGenericMemoryPool jarg1_, long jarg2);
  public final static native void btGenericPoolAllocator_pools_set(long jarg1, btGenericPoolAllocator jarg1_, long jarg2);
  public final static native long btGenericPoolAllocator_pools_get(long jarg1, btGenericPoolAllocator jarg1_);
  public final static native void btGenericPoolAllocator_pool_count_set(long jarg1, btGenericPoolAllocator jarg1_, long jarg2);
  public final static native long btGenericPoolAllocator_pool_count_get(long jarg1, btGenericPoolAllocator jarg1_);
  public final static native long btGenericPoolAllocator_get_pool_capacity(long jarg1, btGenericPoolAllocator jarg1_);
  public final static native long new_btGenericPoolAllocator(long jarg1, long jarg2);
  public final static native void delete_btGenericPoolAllocator(long jarg1);
  public final static native long btGenericPoolAllocator_allocate(long jarg1, btGenericPoolAllocator jarg1_, long jarg2);
  public final static native boolean btGenericPoolAllocator_freeMemory(long jarg1, btGenericPoolAllocator jarg1_, long jarg2);
  public final static native long btPoolAlloc(long jarg1);
  public final static native long btPoolRealloc(long jarg1, long jarg2, long jarg3);
  public final static native void btPoolFree(long jarg1);
  public final static native long new_btGImpactCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
  public final static native void delete_btGImpactCollisionAlgorithm(long jarg1);
  public final static native long btGImpactCollisionAlgorithm_internalGetResultOut(long jarg1, btGImpactCollisionAlgorithm jarg1_);
  public final static native long new_btGImpactCollisionAlgorithm_CreateFunc();
  public final static native void delete_btGImpactCollisionAlgorithm_CreateFunc(long jarg1);
  public final static native void btGImpactCollisionAlgorithm_registerAlgorithm(long jarg1, btCollisionDispatcher jarg1_);
  public final static native void btGImpactCollisionAlgorithm_gimpact_vs_gimpact(long jarg1, btGImpactCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btGImpactShapeInterface jarg4_, long jarg5, btGImpactShapeInterface jarg5_);
  public final static native void btGImpactCollisionAlgorithm_gimpact_vs_shape(long jarg1, btGImpactCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btGImpactShapeInterface jarg4_, long jarg5, btCollisionShape jarg5_, boolean jarg6);
  public final static native void btGImpactCollisionAlgorithm_gimpact_vs_compoundshape(long jarg1, btGImpactCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btGImpactShapeInterface jarg4_, long jarg5, btCompoundShape jarg5_, boolean jarg6);
  public final static native void btGImpactCollisionAlgorithm_gimpact_vs_concave(long jarg1, btGImpactCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btGImpactShapeInterface jarg4_, long jarg5, btConcaveShape jarg5_, boolean jarg6);
  public final static native void btGImpactCollisionAlgorithm_setFace0(long jarg1, btGImpactCollisionAlgorithm jarg1_, int jarg2);
  public final static native int btGImpactCollisionAlgorithm_getFace0(long jarg1, btGImpactCollisionAlgorithm jarg1_);
  public final static native void btGImpactCollisionAlgorithm_setFace1(long jarg1, btGImpactCollisionAlgorithm jarg1_, int jarg2);
  public final static native int btGImpactCollisionAlgorithm_getFace1(long jarg1, btGImpactCollisionAlgorithm jarg1_);
  public final static native void btGImpactCollisionAlgorithm_setPart0(long jarg1, btGImpactCollisionAlgorithm jarg1_, int jarg2);
  public final static native int btGImpactCollisionAlgorithm_getPart0(long jarg1, btGImpactCollisionAlgorithm jarg1_);
  public final static native void btGImpactCollisionAlgorithm_setPart1(long jarg1, btGImpactCollisionAlgorithm jarg1_, int jarg2);
  public final static native int btGImpactCollisionAlgorithm_getPart1(long jarg1, btGImpactCollisionAlgorithm jarg1_);
  public final static native Vector3 gim_inertia_add_transformed(Vector3 jarg1, Vector3 jarg2, Matrix4 jarg3);
  public final static native Vector3 gim_get_point_inertia(Vector3 jarg1, float jarg2);
  public final static native long btStorageResult_SWIGUpcast(long jarg1);
  public final static native long btBroadphaseRayCallback_SWIGUpcast(long jarg1);
  public final static native long btSimpleBroadphaseProxy_SWIGUpcast(long jarg1);
  public final static native long btSimpleBroadphase_SWIGUpcast(long jarg1);
  public final static native long btMultiSapBroadphase_btMultiSapProxy_SWIGUpcast(long jarg1);
  public final static native long btMultiSapBroadphase_SWIGUpcast(long jarg1);
  public final static native long btAxisSweep3InternalShort_Handle_SWIGUpcast(long jarg1);
  public final static native long btAxisSweep3InternalShort_SWIGUpcast(long jarg1);
  public final static native long btAxisSweep3InternalInt_Handle_SWIGUpcast(long jarg1);
  public final static native long btAxisSweep3InternalInt_SWIGUpcast(long jarg1);
  public final static native long btAxisSweep3_SWIGUpcast(long jarg1);
  public final static native long bt32BitAxisSweep3_SWIGUpcast(long jarg1);
  public final static native long btOverlappingPairCache_SWIGUpcast(long jarg1);
  public final static native long btHashedOverlappingPairCache_SWIGUpcast(long jarg1);
  public final static native long btSortedOverlappingPairCache_SWIGUpcast(long jarg1);
  public final static native long btNullPairCache_SWIGUpcast(long jarg1);
  public final static native long btConvexShape_SWIGUpcast(long jarg1);
  public final static native long btConvexInternalShape_SWIGUpcast(long jarg1);
  public final static native long btConvexInternalAabbCachingShape_SWIGUpcast(long jarg1);
  public final static native long btPolyhedralConvexShape_SWIGUpcast(long jarg1);
  public final static native long btPolyhedralConvexAabbCachingShape_SWIGUpcast(long jarg1);
  public final static native long btConcaveShape_SWIGUpcast(long jarg1);
  public final static native long btStaticPlaneShape_SWIGUpcast(long jarg1);
  public final static native long btHeightfieldTerrainShape_SWIGUpcast(long jarg1);
  public final static native long btTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btBvhTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btBoxShape_SWIGUpcast(long jarg1);
  public final static native long btCapsuleShape_SWIGUpcast(long jarg1);
  public final static native long btCapsuleShapeX_SWIGUpcast(long jarg1);
  public final static native long btCapsuleShapeZ_SWIGUpcast(long jarg1);
  public final static native long btBox2dShape_SWIGUpcast(long jarg1);
  public final static native long btTriangleShape_SWIGUpcast(long jarg1);
  public final static native long btSphereShape_SWIGUpcast(long jarg1);
  public final static native long btMinkowskiSumShape_SWIGUpcast(long jarg1);
  public final static native long btOptimizedBvh_SWIGUpcast(long jarg1);
  public final static native long btTriangleBuffer_SWIGUpcast(long jarg1);
  public final static native long btTriangleIndexVertexArray_SWIGUpcast(long jarg1);
  public final static native long btScaledBvhTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btConvexHullShape_SWIGUpcast(long jarg1);
  public final static native long btTriangleIndexVertexMaterialArray_SWIGUpcast(long jarg1);
  public final static native long btCylinderShape_SWIGUpcast(long jarg1);
  public final static native long btCylinderShapeX_SWIGUpcast(long jarg1);
  public final static native long btCylinderShapeZ_SWIGUpcast(long jarg1);
  public final static native long btTriangleMesh_SWIGUpcast(long jarg1);
  public final static native long btConeShape_SWIGUpcast(long jarg1);
  public final static native long btConeShapeX_SWIGUpcast(long jarg1);
  public final static native long btConeShapeZ_SWIGUpcast(long jarg1);
  public final static native long btConvexTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btEmptyShape_SWIGUpcast(long jarg1);
  public final static native long btMultimaterialTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btBU_Simplex1to4_SWIGUpcast(long jarg1);
  public final static native long btUniformScalingShape_SWIGUpcast(long jarg1);
  public final static native long btConvexPointCloudShape_SWIGUpcast(long jarg1);
  public final static native long btConvex2dShape_SWIGUpcast(long jarg1);
  public final static native long btDbvtProxy_SWIGUpcast(long jarg1);
  public final static native long btDbvtBroadphase_SWIGUpcast(long jarg1);
  public final static native long btCompoundShape_SWIGUpcast(long jarg1);
  public final static native long btEmptyAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btActivatingCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btConvexTriangleCallback_SWIGUpcast(long jarg1);
  public final static native long btConvexConcaveCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btConvexPlaneCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btDefaultCollisionConfiguration_SWIGUpcast(long jarg1);
  public final static native long btManifoldResult_SWIGUpcast(long jarg1);
  public final static native long btSphereSphereCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btBoxBoxCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btBox2dBox2dCollisionAlgorithm_CreateFunc_SWIGUpcast(long jarg1);
  public final static native long btBox2dBox2dCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btSphereTriangleCollisionAlgorithm_CreateFunc_SWIGUpcast(long jarg1);
  public final static native long btSphereTriangleCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btGhostObject_SWIGUpcast(long jarg1);
  public final static native long btPairCachingGhostObject_SWIGUpcast(long jarg1);
  public final static native long btGhostPairCallback_SWIGUpcast(long jarg1);
  public final static native long ClosestRayResultCallback_SWIGUpcast(long jarg1);
  public final static native long AllHitsRayResultCallback_SWIGUpcast(long jarg1);
  public final static native long ClosestConvexResultCallback_SWIGUpcast(long jarg1);
  public final static native long ClosestNotMeConvexResultCallback_SWIGUpcast(long jarg1);
  public final static native long ClosestNotMeRayResultCallback_SWIGUpcast(long jarg1);
  public final static native long btConvex2dConvex2dAlgorithm_CreateFunc_SWIGUpcast(long jarg1);
  public final static native long btConvex2dConvex2dAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btBoxBoxDetector_SWIGUpcast(long jarg1);
  public final static native long btSphereBoxCollisionAlgorithm_CreateFunc_SWIGUpcast(long jarg1);
  public final static native long btSphereBoxCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btCollisionDispatcher_SWIGUpcast(long jarg1);
  public final static native long btConvexConvexAlgorithm_CreateFunc_SWIGUpcast(long jarg1);
  public final static native long btConvexConvexAlgorithm_SWIGUpcast(long jarg1);
  public final static native long SphereTriangleDetector_SWIGUpcast(long jarg1);
  public final static native long btCompoundCollisionAlgorithm_CreateFunc_SWIGUpcast(long jarg1);
  public final static native long btCompoundCollisionAlgorithm_SwappedCreateFunc_SWIGUpcast(long jarg1);
  public final static native long btCompoundCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btSubsimplexConvexCast_SWIGUpcast(long jarg1);
  public final static native long btPersistentManifold_SWIGUpcast(long jarg1);
  public final static native long btGjkPairDetector_SWIGUpcast(long jarg1);
  public final static native long btMinkowskiPenetrationDepthSolver_SWIGUpcast(long jarg1);
  public final static native long btGjkConvexCast_SWIGUpcast(long jarg1);
  public final static native long btContinuousConvexCollision_SWIGUpcast(long jarg1);
  public final static native long btTriangleRaycastCallback_SWIGUpcast(long jarg1);
  public final static native long btTriangleConvexcastCallback_SWIGUpcast(long jarg1);
  public final static native long btGjkEpaPenetrationDepthSolver_SWIGUpcast(long jarg1);
  public final static native long btPointCollector_SWIGUpcast(long jarg1);
  public final static native long btMultiSphereShape_SWIGUpcast(long jarg1);
  public final static native long CustomCollisionDispatcher_SWIGUpcast(long jarg1);
  public final static native long btTriangleShapeEx_SWIGUpcast(long jarg1);
  public final static native long btTetrahedronShapeEx_SWIGUpcast(long jarg1);
  public final static native long btGImpactShapeInterface_SWIGUpcast(long jarg1);
  public final static native long btGImpactCompoundShape_CompoundPrimitiveManager_SWIGUpcast(long jarg1);
  public final static native long btGImpactCompoundShape_SWIGUpcast(long jarg1);
  public final static native long btGImpactMeshShapePart_TrimeshPrimitiveManager_SWIGUpcast(long jarg1);
  public final static native long btGImpactMeshShapePart_SWIGUpcast(long jarg1);
  public final static native long btGImpactMeshShape_SWIGUpcast(long jarg1);
  public final static native long btGImpactCollisionAlgorithm_CreateFunc_SWIGUpcast(long jarg1);
  public final static native long btGImpactCollisionAlgorithm_SWIGUpcast(long jarg1);

  public static boolean SwigDirector_btBroadphaseAabbCallback_process(btBroadphaseAabbCallback jself, long proxy) {
    return jself.process((proxy == 0) ? null : new btBroadphaseProxy(proxy, false));
  }
  public static boolean SwigDirector_btBroadphaseRayCallback_process(btBroadphaseRayCallback jself, long proxy) {
    return jself.process((proxy == 0) ? null : new btBroadphaseProxy(proxy, false));
  }
  public static void SwigDirector_btNodeOverlapCallback_processNode(btNodeOverlapCallback jself, int subPart, int triangleIndex) {
    jself.processNode(subPart, triangleIndex);
  }
  public static long SwigDirector_btOverlappingPairCallback_addOverlappingPair(btOverlappingPairCallback jself, long proxy0, long proxy1) {
    return btBroadphasePair.getCPtr(jself.addOverlappingPair((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false), (proxy1 == 0) ? null : new btBroadphaseProxy(proxy1, false)));
  }
  public static long SwigDirector_btOverlappingPairCallback_removeOverlappingPair(btOverlappingPairCallback jself, long proxy0, long proxy1, long dispatcher) {
    return jself.removeOverlappingPair((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false), (proxy1 == 0) ? null : new btBroadphaseProxy(proxy1, false), (dispatcher == 0) ? null : new btDispatcher(dispatcher, false));
  }
  public static void SwigDirector_btOverlappingPairCallback_removeOverlappingPairsContainingProxy(btOverlappingPairCallback jself, long proxy0, long dispatcher) {
    jself.removeOverlappingPairsContainingProxy((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false), (dispatcher == 0) ? null : new btDispatcher(dispatcher, false));
  }
  public static boolean SwigDirector_btOverlapCallback_processOverlap(btOverlapCallback jself, btBroadphasePair pair) {
    return jself.processOverlap(pair);
  }
  public static boolean SwigDirector_btOverlapFilterCallback_needBroadphaseCollision(btOverlapFilterCallback jself, long proxy0, long proxy1) {
    return jself.needBroadphaseCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false), (proxy1 == 0) ? null : new btBroadphaseProxy(proxy1, false));
  }
  public static void SwigDirector_btTriangleCallback_processTriangle(btTriangleCallback jself, long triangle, int partId, int triangleIndex) {
    jself.processTriangle((triangle == 0) ? null : new btVector3(triangle, false), partId, triangleIndex);
  }
  public static void SwigDirector_btInternalTriangleIndexCallback_internalProcessTriangleIndex(btInternalTriangleIndexCallback jself, long triangle, int partId, int triangleIndex) {
    jself.internalProcessTriangleIndex((triangle == 0) ? null : new btVector3(triangle, false), partId, triangleIndex);
  }
  public static void SwigDirector_ICollide_Process__SWIG_0(ICollide jself, long arg0, long arg1) {
    jself.Process(btDbvtNode.obtainForArgument(arg0, false), btDbvtNode.obtainForArgument(arg1, false));
  }
  public static void SwigDirector_ICollide_Process__SWIG_1(ICollide jself, long arg0) {
    jself.Process(btDbvtNode.obtainForArgument(arg0, false));
  }
  public static void SwigDirector_ICollide_Process__SWIG_2(ICollide jself, long n, float arg1) {
    jself.Process(btDbvtNode.obtainForArgument(n, false), arg1);
  }
  public static boolean SwigDirector_ICollide_Descent(ICollide jself, long arg0) {
    return jself.Descent(btDbvtNode.obtainForArgument(arg0, false));
  }
  public static boolean SwigDirector_ICollide_AllLeaves(ICollide jself, long arg0) {
    return jself.AllLeaves(btDbvtNode.obtainForArgument(arg0, false));
  }
  public static void SwigDirector_btConvexTriangleCallback_processTriangle(btConvexTriangleCallback jself, long triangle, int partId, int triangleIndex) {
    jself.processTriangle((triangle == 0) ? null : new btVector3(triangle, false), partId, triangleIndex);
  }
  public static long SwigDirector_btGhostPairCallback_addOverlappingPair(btGhostPairCallback jself, long proxy0, long proxy1) {
    return btBroadphasePair.getCPtr(jself.addOverlappingPair((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false), (proxy1 == 0) ? null : new btBroadphaseProxy(proxy1, false)));
  }
  public static long SwigDirector_btGhostPairCallback_removeOverlappingPair(btGhostPairCallback jself, long proxy0, long proxy1, long dispatcher) {
    return jself.removeOverlappingPair((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false), (proxy1 == 0) ? null : new btBroadphaseProxy(proxy1, false), (dispatcher == 0) ? null : new btDispatcher(dispatcher, false));
  }
  public static void SwigDirector_btGhostPairCallback_removeOverlappingPairsContainingProxy(btGhostPairCallback jself, long arg0, long arg1) {
    jself.removeOverlappingPairsContainingProxy((arg0 == 0) ? null : new btBroadphaseProxy(arg0, false), (arg1 == 0) ? null : new btDispatcher(arg1, false));
  }
  public static boolean SwigDirector_RayResultCallback_needsCollision(RayResultCallback jself, long proxy0) {
    return jself.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_RayResultCallback_addSingleResult(RayResultCallback jself, long rayResult, boolean normalInWorldSpace) {
    return jself.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_ClosestRayResultCallback_needsCollision(ClosestRayResultCallback jself, long proxy0) {
    return jself.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_ClosestRayResultCallback_addSingleResult(ClosestRayResultCallback jself, long rayResult, boolean normalInWorldSpace) {
    return jself.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_AllHitsRayResultCallback_needsCollision(AllHitsRayResultCallback jself, long proxy0) {
    return jself.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_AllHitsRayResultCallback_addSingleResult(AllHitsRayResultCallback jself, long rayResult, boolean normalInWorldSpace) {
    return jself.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_ConvexResultCallback_needsCollision(ConvexResultCallback jself, long proxy0) {
    return jself.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_ConvexResultCallback_addSingleResult(ConvexResultCallback jself, long convexResult, boolean normalInWorldSpace) {
    return jself.addSingleResult(new LocalConvexResult(convexResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_ClosestConvexResultCallback_needsCollision(ClosestConvexResultCallback jself, long proxy0) {
    return jself.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_ClosestConvexResultCallback_addSingleResult(ClosestConvexResultCallback jself, long convexResult, boolean normalInWorldSpace) {
    return jself.addSingleResult(new LocalConvexResult(convexResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_ContactResultCallback_needsCollision(ContactResultCallback jself, long proxy0) {
    return jself.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_ContactResultCallback_addSingleResult(ContactResultCallback jself, long cp, long colObj0Wrap, int partId0, int index0, long colObj1Wrap, int partId1, int index1) {
    return jself.addSingleResult(new btManifoldPoint(cp, false), btCollisionObjectWrapper.obtainForArgument(colObj0Wrap, false), partId0, index0, btCollisionObjectWrapper.obtainForArgument(colObj1Wrap, false), partId1, index1);
  }
  public static void SwigDirector_btTriangleRaycastCallback_processTriangle(btTriangleRaycastCallback jself, long triangle, int partId, int triangleIndex) {
    jself.processTriangle((triangle == 0) ? null : new btVector3(triangle, false), partId, triangleIndex);
  }
  public static float SwigDirector_btTriangleRaycastCallback_reportHit(btTriangleRaycastCallback jself, Vector3 hitNormalLocal, float hitFraction, int partId, int triangleIndex) {
    return jself.reportHit(hitNormalLocal, hitFraction, partId, triangleIndex);
  }
  public static void SwigDirector_btTriangleConvexcastCallback_processTriangle(btTriangleConvexcastCallback jself, long triangle, int partId, int triangleIndex) {
    jself.processTriangle((triangle == 0) ? null : new btVector3(triangle, false), partId, triangleIndex);
  }
  public static float SwigDirector_btTriangleConvexcastCallback_reportHit(btTriangleConvexcastCallback jself, Vector3 hitNormalLocal, Vector3 hitPointLocal, float hitFraction, int partId, int triangleIndex) {
    return jself.reportHit(hitNormalLocal, hitPointLocal, hitFraction, partId, triangleIndex);
  }
  public static boolean SwigDirector_CustomCollisionDispatcher_needsCollision(CustomCollisionDispatcher jself, long body0, long body1) {
    return jself.needsCollision(btCollisionObject.getInstance(body0, false), btCollisionObject.getInstance(body1, false));
  }
  public static boolean SwigDirector_CustomCollisionDispatcher_needsResponse(CustomCollisionDispatcher jself, long body0, long body1) {
    return jself.needsResponse(btCollisionObject.getInstance(body0, false), btCollisionObject.getInstance(body1, false));
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_0(ContactListener jself, long cp, long colObj0Wrap, int partId0, int index0, long colObj1Wrap, int partId1, int index1) {
    return jself.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), btCollisionObjectWrapper.obtainForArgument(colObj0Wrap, false), partId0, index0, btCollisionObjectWrapper.obtainForArgument(colObj1Wrap, false), partId1, index1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_1(ContactListener jself, long cp, long colObj0, int partId0, int index0, long colObj1, int partId1, int index1) {
    return jself.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), btCollisionObject.getInstance(colObj0, false), partId0, index0, btCollisionObject.getInstance(colObj1, false), partId1, index1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_2(ContactListener jself, long cp, int userValue0, int partId0, int index0, int userValue1, int partId1, int index1) {
    return jself.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), userValue0, partId0, index0, userValue1, partId1, index1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_3(ContactListener jself, long cp, long colObj0Wrap, int partId0, int index0, boolean match0, long colObj1Wrap, int partId1, int index1, boolean match1) {
    return jself.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), btCollisionObjectWrapper.obtainForArgument(colObj0Wrap, false), partId0, index0, match0, btCollisionObjectWrapper.obtainForArgument(colObj1Wrap, false), partId1, index1, match1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_4(ContactListener jself, long cp, long colObj0, int partId0, int index0, boolean match0, long colObj1, int partId1, int index1, boolean match1) {
    return jself.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), btCollisionObject.getInstance(colObj0, false), partId0, index0, match0, btCollisionObject.getInstance(colObj1, false), partId1, index1, match1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_5(ContactListener jself, long cp, int userValue0, int partId0, int index0, boolean match0, int userValue1, int partId1, int index1, boolean match1) {
    return jself.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), userValue0, partId0, index0, match0, userValue1, partId1, index1, match1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_6(ContactListener jself, long colObj0Wrap, int partId0, int index0, long colObj1Wrap, int partId1, int index1) {
    return jself.onContactAdded(btCollisionObjectWrapper.obtainForArgument(colObj0Wrap, false), partId0, index0, btCollisionObjectWrapper.obtainForArgument(colObj1Wrap, false), partId1, index1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_7(ContactListener jself, long colObj0, int partId0, int index0, long colObj1, int partId1, int index1) {
    return jself.onContactAdded(btCollisionObject.getInstance(colObj0, false), partId0, index0, btCollisionObject.getInstance(colObj1, false), partId1, index1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_8(ContactListener jself, int userValue0, int partId0, int index0, int userValue1, int partId1, int index1) {
    return jself.onContactAdded(userValue0, partId0, index0, userValue1, partId1, index1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_9(ContactListener jself, long colObj0Wrap, int partId0, int index0, boolean match0, long colObj1Wrap, int partId1, int index1, boolean match1) {
    return jself.onContactAdded(btCollisionObjectWrapper.obtainForArgument(colObj0Wrap, false), partId0, index0, match0, btCollisionObjectWrapper.obtainForArgument(colObj1Wrap, false), partId1, index1, match1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_10(ContactListener jself, long colObj0, int partId0, int index0, boolean match0, long colObj1, int partId1, int index1, boolean match1) {
    return jself.onContactAdded(btCollisionObject.getInstance(colObj0, false), partId0, index0, match0, btCollisionObject.getInstance(colObj1, false), partId1, index1, match1);
  }
  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_11(ContactListener jself, int userValue0, int partId0, int index0, boolean match0, int userValue1, int partId1, int index1, boolean match1) {
    return jself.onContactAdded(userValue0, partId0, index0, match0, userValue1, partId1, index1, match1);
  }
  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_0(ContactListener jself, long cp, long colObj0, long colObj1) {
    jself.onContactProcessed(btManifoldPoint.obtainForArgument(cp, false), btCollisionObject.getInstance(colObj0, false), btCollisionObject.getInstance(colObj1, false));
  }
  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_1(ContactListener jself, long cp, int userValue0, int userValue1) {
    jself.onContactProcessed(btManifoldPoint.obtainForArgument(cp, false), userValue0, userValue1);
  }
  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_2(ContactListener jself, long cp, long colObj0, boolean match0, long colObj1, boolean match1) {
    jself.onContactProcessed(btManifoldPoint.obtainForArgument(cp, false), btCollisionObject.getInstance(colObj0, false), match0, btCollisionObject.getInstance(colObj1, false), match1);
  }
  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_3(ContactListener jself, long cp, int userValue0, boolean match0, int userValue1, boolean match1) {
    jself.onContactProcessed(btManifoldPoint.obtainForArgument(cp, false), userValue0, match0, userValue1, match1);
  }
  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_4(ContactListener jself, long colObj0, long colObj1) {
    jself.onContactProcessed(btCollisionObject.getInstance(colObj0, false), btCollisionObject.getInstance(colObj1, false));
  }
  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_5(ContactListener jself, int userValue0, int userValue1) {
    jself.onContactProcessed(userValue0, userValue1);
  }
  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_6(ContactListener jself, long colObj0, boolean match0, long colObj1, boolean match1) {
    jself.onContactProcessed(btCollisionObject.getInstance(colObj0, false), match0, btCollisionObject.getInstance(colObj1, false), match1);
  }
  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_7(ContactListener jself, int userValue0, boolean match0, int userValue1, boolean match1) {
    jself.onContactProcessed(userValue0, match0, userValue1, match1);
  }
  public static void SwigDirector_ContactListener_onContactDestroyed(ContactListener jself, int manifoldPointUserValue) {
    jself.onContactDestroyed(manifoldPointUserValue);
  }
  public static void SwigDirector_ContactListener_onContactStarted__SWIG_0(ContactListener jself, long manifold) {
    jself.onContactStarted((manifold == 0) ? null : new btPersistentManifold(manifold, false));
  }
  public static void SwigDirector_ContactListener_onContactStarted__SWIG_1(ContactListener jself, long colObj0, long colObj1) {
    jself.onContactStarted(btCollisionObject.getInstance(colObj0, false), btCollisionObject.getInstance(colObj1, false));
  }
  public static void SwigDirector_ContactListener_onContactStarted__SWIG_2(ContactListener jself, int userValue0, int userValue1) {
    jself.onContactStarted(userValue0, userValue1);
  }
  public static void SwigDirector_ContactListener_onContactStarted__SWIG_3(ContactListener jself, long manifold, boolean match0, boolean match1) {
    jself.onContactStarted((manifold == 0) ? null : new btPersistentManifold(manifold, false), match0, match1);
  }
  public static void SwigDirector_ContactListener_onContactStarted__SWIG_4(ContactListener jself, long colObj0, boolean match0, long colObj1, boolean match1) {
    jself.onContactStarted(btCollisionObject.getInstance(colObj0, false), match0, btCollisionObject.getInstance(colObj1, false), match1);
  }
  public static void SwigDirector_ContactListener_onContactStarted__SWIG_5(ContactListener jself, int userValue0, boolean match0, int userValue1, boolean match1) {
    jself.onContactStarted(userValue0, match0, userValue1, match1);
  }
  public static void SwigDirector_ContactListener_onContactEnded__SWIG_0(ContactListener jself, long manifold) {
    jself.onContactEnded((manifold == 0) ? null : new btPersistentManifold(manifold, false));
  }
  public static void SwigDirector_ContactListener_onContactEnded__SWIG_1(ContactListener jself, long colObj0, long colObj1) {
    jself.onContactEnded(btCollisionObject.getInstance(colObj0, false), btCollisionObject.getInstance(colObj1, false));
  }
  public static void SwigDirector_ContactListener_onContactEnded__SWIG_2(ContactListener jself, int userValue0, int userValue1) {
    jself.onContactEnded(userValue0, userValue1);
  }
  public static void SwigDirector_ContactListener_onContactEnded__SWIG_3(ContactListener jself, long manifold, boolean match0, boolean match1) {
    jself.onContactEnded((manifold == 0) ? null : new btPersistentManifold(manifold, false), match0, match1);
  }
  public static void SwigDirector_ContactListener_onContactEnded__SWIG_4(ContactListener jself, long colObj0, boolean match0, long colObj1, boolean match1) {
    jself.onContactEnded(btCollisionObject.getInstance(colObj0, false), match0, btCollisionObject.getInstance(colObj1, false), match1);
  }
  public static void SwigDirector_ContactListener_onContactEnded__SWIG_5(ContactListener jself, int userValue0, boolean match0, int userValue1, boolean match1) {
    jself.onContactEnded(userValue0, match0, userValue1, match1);
  }
  public static void SwigDirector_ContactCache_onContactStarted(ContactCache jself, long manifold, boolean match0, boolean match1) {
    jself.onContactStarted((manifold == 0) ? null : new btPersistentManifold(manifold, false), match0, match1);
  }
  public static void SwigDirector_ContactCache_onContactEnded(ContactCache jself, long colObj0, boolean match0, long colObj1, boolean match1) {
    jself.onContactEnded(btCollisionObject.getInstance(colObj0, false), match0, btCollisionObject.getInstance(colObj1, false), match1);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
