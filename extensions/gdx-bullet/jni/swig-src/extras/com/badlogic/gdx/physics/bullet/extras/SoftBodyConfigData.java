/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet.extras;

import com.badlogic.gdx.physics.bullet.BulletBase;
import com.badlogic.gdx.physics.bullet.linearmath.*;
import com.badlogic.gdx.physics.bullet.collision.*;
import com.badlogic.gdx.physics.bullet.dynamics.*;
import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;
import com.badlogic.gdx.physics.bullet.inversedynamics.MultiBodyTree;
import com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld;
import com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo;
import com.badlogic.gdx.physics.bullet.collision.btCollisionShape;

public class SoftBodyConfigData extends BulletBase {
	private long swigCPtr;
	
	protected SoftBodyConfigData(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, cPtr, cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	/** Construct a new SoftBodyConfigData, normally you should not need this constructor it's intended for low-level usage. */ 
	public SoftBodyConfigData(long cPtr, boolean cMemoryOwn) {
		this("SoftBodyConfigData", cPtr, cMemoryOwn);
		construct();
	}
	
	@Override
	protected void reset(long cPtr, boolean cMemoryOwn) {
		if (!destroyed)
			destroy();
		super.reset(swigCPtr = cPtr, cMemoryOwn);
	}
	
	public static long getCPtr(SoftBodyConfigData obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				ExtrasJNI.delete_SoftBodyConfigData(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

  public void setAeroModel(int value) {
    ExtrasJNI.SoftBodyConfigData_aeroModel_set(swigCPtr, this, value);
  }

  public int getAeroModel() {
    return ExtrasJNI.SoftBodyConfigData_aeroModel_get(swigCPtr, this);
  }

  public void setBaumgarte(float value) {
    ExtrasJNI.SoftBodyConfigData_baumgarte_set(swigCPtr, this, value);
  }

  public float getBaumgarte() {
    return ExtrasJNI.SoftBodyConfigData_baumgarte_get(swigCPtr, this);
  }

  public void setDamping(float value) {
    ExtrasJNI.SoftBodyConfigData_damping_set(swigCPtr, this, value);
  }

  public float getDamping() {
    return ExtrasJNI.SoftBodyConfigData_damping_get(swigCPtr, this);
  }

  public void setDrag(float value) {
    ExtrasJNI.SoftBodyConfigData_drag_set(swigCPtr, this, value);
  }

  public float getDrag() {
    return ExtrasJNI.SoftBodyConfigData_drag_get(swigCPtr, this);
  }

  public void setLift(float value) {
    ExtrasJNI.SoftBodyConfigData_lift_set(swigCPtr, this, value);
  }

  public float getLift() {
    return ExtrasJNI.SoftBodyConfigData_lift_get(swigCPtr, this);
  }

  public void setPressure(float value) {
    ExtrasJNI.SoftBodyConfigData_pressure_set(swigCPtr, this, value);
  }

  public float getPressure() {
    return ExtrasJNI.SoftBodyConfigData_pressure_get(swigCPtr, this);
  }

  public void setVolume(float value) {
    ExtrasJNI.SoftBodyConfigData_volume_set(swigCPtr, this, value);
  }

  public float getVolume() {
    return ExtrasJNI.SoftBodyConfigData_volume_get(swigCPtr, this);
  }

  public void setDynamicFriction(float value) {
    ExtrasJNI.SoftBodyConfigData_dynamicFriction_set(swigCPtr, this, value);
  }

  public float getDynamicFriction() {
    return ExtrasJNI.SoftBodyConfigData_dynamicFriction_get(swigCPtr, this);
  }

  public void setPoseMatch(float value) {
    ExtrasJNI.SoftBodyConfigData_poseMatch_set(swigCPtr, this, value);
  }

  public float getPoseMatch() {
    return ExtrasJNI.SoftBodyConfigData_poseMatch_get(swigCPtr, this);
  }

  public void setRigidContactHardness(float value) {
    ExtrasJNI.SoftBodyConfigData_rigidContactHardness_set(swigCPtr, this, value);
  }

  public float getRigidContactHardness() {
    return ExtrasJNI.SoftBodyConfigData_rigidContactHardness_get(swigCPtr, this);
  }

  public void setKineticContactHardness(float value) {
    ExtrasJNI.SoftBodyConfigData_kineticContactHardness_set(swigCPtr, this, value);
  }

  public float getKineticContactHardness() {
    return ExtrasJNI.SoftBodyConfigData_kineticContactHardness_get(swigCPtr, this);
  }

  public void setSoftContactHardness(float value) {
    ExtrasJNI.SoftBodyConfigData_softContactHardness_set(swigCPtr, this, value);
  }

  public float getSoftContactHardness() {
    return ExtrasJNI.SoftBodyConfigData_softContactHardness_get(swigCPtr, this);
  }

  public void setAnchorHardness(float value) {
    ExtrasJNI.SoftBodyConfigData_anchorHardness_set(swigCPtr, this, value);
  }

  public float getAnchorHardness() {
    return ExtrasJNI.SoftBodyConfigData_anchorHardness_get(swigCPtr, this);
  }

  public void setSoftRigidClusterHardness(float value) {
    ExtrasJNI.SoftBodyConfigData_softRigidClusterHardness_set(swigCPtr, this, value);
  }

  public float getSoftRigidClusterHardness() {
    return ExtrasJNI.SoftBodyConfigData_softRigidClusterHardness_get(swigCPtr, this);
  }

  public void setSoftKineticClusterHardness(float value) {
    ExtrasJNI.SoftBodyConfigData_softKineticClusterHardness_set(swigCPtr, this, value);
  }

  public float getSoftKineticClusterHardness() {
    return ExtrasJNI.SoftBodyConfigData_softKineticClusterHardness_get(swigCPtr, this);
  }

  public void setSoftSoftClusterHardness(float value) {
    ExtrasJNI.SoftBodyConfigData_softSoftClusterHardness_set(swigCPtr, this, value);
  }

  public float getSoftSoftClusterHardness() {
    return ExtrasJNI.SoftBodyConfigData_softSoftClusterHardness_get(swigCPtr, this);
  }

  public void setSoftRigidClusterImpulseSplit(float value) {
    ExtrasJNI.SoftBodyConfigData_softRigidClusterImpulseSplit_set(swigCPtr, this, value);
  }

  public float getSoftRigidClusterImpulseSplit() {
    return ExtrasJNI.SoftBodyConfigData_softRigidClusterImpulseSplit_get(swigCPtr, this);
  }

  public void setSoftKineticClusterImpulseSplit(float value) {
    ExtrasJNI.SoftBodyConfigData_softKineticClusterImpulseSplit_set(swigCPtr, this, value);
  }

  public float getSoftKineticClusterImpulseSplit() {
    return ExtrasJNI.SoftBodyConfigData_softKineticClusterImpulseSplit_get(swigCPtr, this);
  }

  public void setSoftSoftClusterImpulseSplit(float value) {
    ExtrasJNI.SoftBodyConfigData_softSoftClusterImpulseSplit_set(swigCPtr, this, value);
  }

  public float getSoftSoftClusterImpulseSplit() {
    return ExtrasJNI.SoftBodyConfigData_softSoftClusterImpulseSplit_get(swigCPtr, this);
  }

  public void setMaxVolume(float value) {
    ExtrasJNI.SoftBodyConfigData_maxVolume_set(swigCPtr, this, value);
  }

  public float getMaxVolume() {
    return ExtrasJNI.SoftBodyConfigData_maxVolume_get(swigCPtr, this);
  }

  public void setTimeScale(float value) {
    ExtrasJNI.SoftBodyConfigData_timeScale_set(swigCPtr, this, value);
  }

  public float getTimeScale() {
    return ExtrasJNI.SoftBodyConfigData_timeScale_get(swigCPtr, this);
  }

  public void setVelocityIterations(int value) {
    ExtrasJNI.SoftBodyConfigData_velocityIterations_set(swigCPtr, this, value);
  }

  public int getVelocityIterations() {
    return ExtrasJNI.SoftBodyConfigData_velocityIterations_get(swigCPtr, this);
  }

  public void setPositionIterations(int value) {
    ExtrasJNI.SoftBodyConfigData_positionIterations_set(swigCPtr, this, value);
  }

  public int getPositionIterations() {
    return ExtrasJNI.SoftBodyConfigData_positionIterations_get(swigCPtr, this);
  }

  public void setDriftIterations(int value) {
    ExtrasJNI.SoftBodyConfigData_driftIterations_set(swigCPtr, this, value);
  }

  public int getDriftIterations() {
    return ExtrasJNI.SoftBodyConfigData_driftIterations_get(swigCPtr, this);
  }

  public void setClusterIterations(int value) {
    ExtrasJNI.SoftBodyConfigData_clusterIterations_set(swigCPtr, this, value);
  }

  public int getClusterIterations() {
    return ExtrasJNI.SoftBodyConfigData_clusterIterations_get(swigCPtr, this);
  }

  public void setCollisionFlags(int value) {
    ExtrasJNI.SoftBodyConfigData_collisionFlags_set(swigCPtr, this, value);
  }

  public int getCollisionFlags() {
    return ExtrasJNI.SoftBodyConfigData_collisionFlags_get(swigCPtr, this);
  }

  public SoftBodyConfigData() {
    this(ExtrasJNI.new_SoftBodyConfigData(), true);
  }

}
