/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btVertexBufferDescriptor {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected btVertexBufferDescriptor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(btVertexBufferDescriptor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_btVertexBufferDescriptor(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean hasVertexPositions() {
    return gdxBulletJNI.btVertexBufferDescriptor_hasVertexPositions(swigCPtr, this);
  }

  public boolean hasNormals() {
    return gdxBulletJNI.btVertexBufferDescriptor_hasNormals(swigCPtr, this);
  }

  public int getBufferType() {
    return gdxBulletJNI.btVertexBufferDescriptor_getBufferType(swigCPtr, this);
  }

  public int getVertexOffset() {
    return gdxBulletJNI.btVertexBufferDescriptor_getVertexOffset(swigCPtr, this);
  }

  public int getVertexStride() {
    return gdxBulletJNI.btVertexBufferDescriptor_getVertexStride(swigCPtr, this);
  }

  public int getNormalOffset() {
    return gdxBulletJNI.btVertexBufferDescriptor_getNormalOffset(swigCPtr, this);
  }

  public int getNormalStride() {
    return gdxBulletJNI.btVertexBufferDescriptor_getNormalStride(swigCPtr, this);
  }

  public final static class BufferTypes {
    public final static int CPU_BUFFER = 0;
    public final static int DX11_BUFFER = CPU_BUFFER + 1;
    public final static int OPENGL_BUFFER = DX11_BUFFER + 1;
  }

}
