/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btRigidBodyConstructionInfo extends BulletBase {
	private long swigCPtr;
	
	protected btRigidBodyConstructionInfo(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, cPtr, cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	protected btRigidBodyConstructionInfo(long cPtr, boolean cMemoryOwn) {
		this("btRigidBodyConstructionInfo", cPtr, cMemoryOwn);
		construct();
	}
	
	public static long getCPtr(btRigidBodyConstructionInfo obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				gdxBulletJNI.delete_btRigidBodyConstructionInfo(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

	protected btMotionState motionState;
	
	public void setMotionState(btMotionState motionState) {
		refMotionState(motionState);
		setI_motionState(motionState);
	}
	
	protected void refMotionState(btMotionState motionState) {
		if (this.motionState == motionState)
			return;
		if (this.motionState != null)
			this.motionState.release();
		this.motionState = motionState;
		if (this.motionState != null)
			this.motionState.obtain();
	}
	
	public btMotionState getMotionState() {
		return motionState;
	}
	
	protected btCollisionShape collisionShape;
	
	public void setCollisionShape(btCollisionShape collisionShape) {
		refCollisionShape(collisionShape);
		setI_collisionShape(collisionShape);
	}
	
	protected void refCollisionShape(btCollisionShape shape) {
		if (collisionShape == shape)
			return;
		if (collisionShape != null)
			collisionShape.release();
		collisionShape = shape;
		if (collisionShape != null)
			collisionShape.obtain();
	}
	
	public btCollisionShape getCollisionShape() {
		return collisionShape;
	}
	
	public btRigidBodyConstructionInfo(float mass, btMotionState motionState, btCollisionShape collisionShape, Vector3 localInertia) {
		this(false, mass, motionState, collisionShape, localInertia);
		refMotionState(motionState);
		refCollisionShape(collisionShape);
	}
	
	public btRigidBodyConstructionInfo(float mass, btMotionState motionState, btCollisionShape collisionShape) {
		this(false, mass, motionState, collisionShape);
		refMotionState(motionState);
		refCollisionShape(collisionShape);
	}
	
	@Override
	public void dispose() {
		if (motionState != null)
			motionState.release();
		motionState = null;
		if (collisionShape != null)
			collisionShape.release();
		collisionShape = null;
		super.dispose();
	}

  public void setMass(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_mass_set(swigCPtr, this, value);
  }

  public float getMass() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_mass_get(swigCPtr, this);
  }

  private void setI_motionState(btMotionState value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_i_motionState_set(swigCPtr, this, btMotionState.getCPtr(value), value);
  }

  private btMotionState getI_motionState() {
    long cPtr = gdxBulletJNI.btRigidBodyConstructionInfo_i_motionState_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btMotionState(cPtr, false);
  }

  public void setStartWorldTransform(btTransform value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_startWorldTransform_set(swigCPtr, this, btTransform.getCPtr(value), value);
  }

  public btTransform getStartWorldTransform() {
    long cPtr = gdxBulletJNI.btRigidBodyConstructionInfo_startWorldTransform_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btTransform(cPtr, false);
  }

  private void setI_collisionShape(btCollisionShape value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_i_collisionShape_set(swigCPtr, this, btCollisionShape.getCPtr(value), value);
  }

  private btCollisionShape getI_collisionShape() {
    long cPtr = gdxBulletJNI.btRigidBodyConstructionInfo_i_collisionShape_get(swigCPtr, this);
    return (cPtr == 0) ? null : btCollisionShape.newDerivedObject(cPtr, false);
  }

  public void setLocalInertia(btVector3 value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_localInertia_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getLocalInertia() {
    long cPtr = gdxBulletJNI.btRigidBodyConstructionInfo_localInertia_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setLinearDamping(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_linearDamping_set(swigCPtr, this, value);
  }

  public float getLinearDamping() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_linearDamping_get(swigCPtr, this);
  }

  public void setAngularDamping(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_angularDamping_set(swigCPtr, this, value);
  }

  public float getAngularDamping() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_angularDamping_get(swigCPtr, this);
  }

  public void setFriction(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_friction_set(swigCPtr, this, value);
  }

  public float getFriction() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_friction_get(swigCPtr, this);
  }

  public void setRestitution(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_restitution_set(swigCPtr, this, value);
  }

  public float getRestitution() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_restitution_get(swigCPtr, this);
  }

  public void setLinearSleepingThreshold(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_linearSleepingThreshold_set(swigCPtr, this, value);
  }

  public float getLinearSleepingThreshold() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_linearSleepingThreshold_get(swigCPtr, this);
  }

  public void setAngularSleepingThreshold(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_angularSleepingThreshold_set(swigCPtr, this, value);
  }

  public float getAngularSleepingThreshold() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_angularSleepingThreshold_get(swigCPtr, this);
  }

  public void setAdditionalDamping(boolean value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_additionalDamping_set(swigCPtr, this, value);
  }

  public boolean getAdditionalDamping() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_additionalDamping_get(swigCPtr, this);
  }

  public void setAdditionalDampingFactor(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_additionalDampingFactor_set(swigCPtr, this, value);
  }

  public float getAdditionalDampingFactor() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_additionalDampingFactor_get(swigCPtr, this);
  }

  public void setAdditionalLinearDampingThresholdSqr(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_additionalLinearDampingThresholdSqr_set(swigCPtr, this, value);
  }

  public float getAdditionalLinearDampingThresholdSqr() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_additionalLinearDampingThresholdSqr_get(swigCPtr, this);
  }

  public void setAdditionalAngularDampingThresholdSqr(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_additionalAngularDampingThresholdSqr_set(swigCPtr, this, value);
  }

  public float getAdditionalAngularDampingThresholdSqr() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_additionalAngularDampingThresholdSqr_get(swigCPtr, this);
  }

  public void setAdditionalAngularDampingFactor(float value) {
    gdxBulletJNI.btRigidBodyConstructionInfo_additionalAngularDampingFactor_set(swigCPtr, this, value);
  }

  public float getAdditionalAngularDampingFactor() {
    return gdxBulletJNI.btRigidBodyConstructionInfo_additionalAngularDampingFactor_get(swigCPtr, this);
  }

  private btRigidBodyConstructionInfo(boolean dummy, float mass, btMotionState motionState, btCollisionShape collisionShape, Vector3 localInertia) {
    this(gdxBulletJNI.new_btRigidBodyConstructionInfo__SWIG_0(dummy, mass, btMotionState.getCPtr(motionState), motionState, btCollisionShape.getCPtr(collisionShape), collisionShape, localInertia), true);
  }

  private btRigidBodyConstructionInfo(boolean dummy, float mass, btMotionState motionState, btCollisionShape collisionShape) {
    this(gdxBulletJNI.new_btRigidBodyConstructionInfo__SWIG_1(dummy, mass, btMotionState.getCPtr(motionState), motionState, btCollisionShape.getCPtr(collisionShape), collisionShape), true);
  }

}
