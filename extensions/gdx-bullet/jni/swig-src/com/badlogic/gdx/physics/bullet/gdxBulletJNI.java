/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;
import com.badlogic.gdx.utils.Pool;

public class gdxBulletJNI {

  private final static Vector3 staticVector3 = new Vector3();
  public static final Pool<Vector3> poolVector3 = new Pool<Vector3>() {
    @Override
	protected Vector3 newObject() {
      return new Vector3();
	}
  };


  private final static Quaternion staticQuaternion = new Quaternion();
  public static final Pool<Quaternion> poolQuaternion = new Pool<Quaternion>() {
    @Override
	protected Quaternion newObject() {
      return new Quaternion();
	}
  };


  private final static Matrix3 staticMatrix3 = new Matrix3();
  public static final Pool<Matrix3> poolMatrix3 = new Pool<Matrix3>() {
    @Override
	protected Matrix3 newObject() {
      return new Matrix3();
	}
  };


  private final static Matrix4 staticMatrix4 = new Matrix4();
  public static final Pool<Matrix4> poolMatrix4 = new Pool<Matrix4>() {
    @Override
	protected Matrix4 newObject() {
      return new Matrix4();
	}
  };

  public final static native int btGetVersion();
  public final static native float btSqrt(float jarg1);
  public final static native float btFabs(float jarg1);
  public final static native float btCos(float jarg1);
  public final static native float btSin(float jarg1);
  public final static native float btTan(float jarg1);
  public final static native float btAcos(float jarg1);
  public final static native float btAsin(float jarg1);
  public final static native float btAtan(float jarg1);
  public final static native float btAtan2(float jarg1, float jarg2);
  public final static native float btExp(float jarg1);
  public final static native float btLog(float jarg1);
  public final static native float btPow(float jarg1, float jarg2);
  public final static native float btFmod(float jarg1, float jarg2);
  public final static native float btAtan2Fast(float jarg1, float jarg2);
  public final static native boolean btFuzzyZero(float jarg1);
  public final static native boolean btEqual(float jarg1, float jarg2);
  public final static native boolean btGreaterEqual(float jarg1, float jarg2);
  public final static native int btIsNegative(float jarg1);
  public final static native float btRadians(float jarg1);
  public final static native float btDegrees(float jarg1);
  public final static native float btFsel(float jarg1, float jarg2, float jarg3);
  public final static native boolean btMachineIsLittleEndian();
  public final static native long btSelect__SWIG_0(long jarg1, long jarg2, long jarg3);
  public final static native int btSelect__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native float btSelect__SWIG_2(long jarg1, float jarg2, float jarg3);
  public final static native long btSwapEndian__SWIG_0(long jarg1);
  public final static native int btSwapEndian__SWIG_1(int jarg1);
  public final static native int btSwapEndian__SWIG_3(short jarg1);
  public final static native long btSwapEndianFloat(float jarg1);
  public final static native float btUnswapEndianFloat(long jarg1);
  public final static native void btSwapEndianDouble(double jarg1, java.nio.ByteBuffer jarg2);
  public final static native double btUnswapEndianDouble(java.nio.ByteBuffer jarg1);
  public final static native float btNormalizeAngle(float jarg1);
  public final static native long new_btTypedObject(int jarg1);
  public final static native void btTypedObject_m_objectType_set(long jarg1, btTypedObject jarg1_, int jarg2);
  public final static native int btTypedObject_m_objectType_get(long jarg1, btTypedObject jarg1_);
  public final static native int btTypedObject_getObjectType(long jarg1, btTypedObject jarg1_);
  public final static native void delete_btTypedObject(long jarg1);
  public final static native long new_btTransform__SWIG_0();
  public final static native long new_btTransform__SWIG_1(Quaternion jarg1, Vector3 jarg2);
  public final static native long new_btTransform__SWIG_2(Quaternion jarg1);
  public final static native long new_btTransform__SWIG_3(Matrix3 jarg1, Vector3 jarg2);
  public final static native long new_btTransform__SWIG_4(Matrix3 jarg1);
  public final static native long new_btTransform__SWIG_5(Matrix4 jarg1);
  public final static native void btTransform_mult(long jarg1, btTransform jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native Matrix3 btTransform_getBasis__SWIG_0(long jarg1, btTransform jarg1_);
  public final static native Vector3 btTransform_getOrigin__SWIG_0(long jarg1, btTransform jarg1_);
  public final static native Quaternion btTransform_getRotation(long jarg1, btTransform jarg1_);
  public final static native void btTransform_setFromOpenGLMatrix(long jarg1, btTransform jarg1_, float[] jarg2);
  public final static native void btTransform_getOpenGLMatrix(long jarg1, btTransform jarg1_, float[] jarg2);
  public final static native void btTransform_setOrigin(long jarg1, btTransform jarg1_, Vector3 jarg2);
  public final static native Vector3 btTransform_invXform(long jarg1, btTransform jarg1_, Vector3 jarg2);
  public final static native void btTransform_setBasis(long jarg1, btTransform jarg1_, Matrix3 jarg2);
  public final static native void btTransform_setRotation(long jarg1, btTransform jarg1_, Quaternion jarg2);
  public final static native void btTransform_setIdentity(long jarg1, btTransform jarg1_);
  public final static native Matrix4 btTransform_inverse(long jarg1, btTransform jarg1_);
  public final static native Matrix4 btTransform_inverseTimes(long jarg1, btTransform jarg1_, Matrix4 jarg2);
  public final static native Matrix4 btTransform_getIdentity();
  public final static native void btTransform_serialize(long jarg1, btTransform jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native void btTransform_serializeFloat(long jarg1, btTransform jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native void btTransform_deSerialize(long jarg1, btTransform jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native void btTransform_deSerializeDouble(long jarg1, btTransform jarg1_, long jarg2, btTransformDoubleData jarg2_);
  public final static native void btTransform_deSerializeFloat(long jarg1, btTransform jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native void delete_btTransform(long jarg1);
  public final static native void btTransformFloatData_m_basis_set(long jarg1, btTransformFloatData jarg1_, long jarg2);
  public final static native long btTransformFloatData_m_basis_get(long jarg1, btTransformFloatData jarg1_);
  public final static native void btTransformFloatData_m_origin_set(long jarg1, btTransformFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btTransformFloatData_m_origin_get(long jarg1, btTransformFloatData jarg1_);
  public final static native long new_btTransformFloatData();
  public final static native void delete_btTransformFloatData(long jarg1);
  public final static native void btTransformDoubleData_m_basis_set(long jarg1, btTransformDoubleData jarg1_, long jarg2);
  public final static native long btTransformDoubleData_m_basis_get(long jarg1, btTransformDoubleData jarg1_);
  public final static native void btTransformDoubleData_m_origin_set(long jarg1, btTransformDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btTransformDoubleData_m_origin_get(long jarg1, btTransformDoubleData jarg1_);
  public final static native long new_btTransformDoubleData();
  public final static native void delete_btTransformDoubleData(long jarg1);
  public final static native void btVector3_m_floats_set(long jarg1, btVector3 jarg1_, float[] jarg2);
  public final static native float[] btVector3_m_floats_get(long jarg1, btVector3 jarg1_);
  public final static native long new_btVector3__SWIG_0();
  public final static native long new_btVector3__SWIG_1(float jarg1, float jarg2, float jarg3);
  public final static native float btVector3_dot(long jarg1, btVector3 jarg1_, Vector3 jarg2);
  public final static native float btVector3_length2(long jarg1, btVector3 jarg1_);
  public final static native float btVector3_length(long jarg1, btVector3 jarg1_);
  public final static native float btVector3_distance2(long jarg1, btVector3 jarg1_, Vector3 jarg2);
  public final static native float btVector3_distance(long jarg1, btVector3 jarg1_, Vector3 jarg2);
  public final static native Vector3 btVector3_safeNormalize(long jarg1, btVector3 jarg1_);
  public final static native Vector3 btVector3_normalize(long jarg1, btVector3 jarg1_);
  public final static native Vector3 btVector3_normalized(long jarg1, btVector3 jarg1_);
  public final static native Vector3 btVector3_rotate(long jarg1, btVector3 jarg1_, Vector3 jarg2, float jarg3);
  public final static native float btVector3_angle(long jarg1, btVector3 jarg1_, Vector3 jarg2);
  public final static native Vector3 btVector3_absolute(long jarg1, btVector3 jarg1_);
  public final static native Vector3 btVector3_cross(long jarg1, btVector3 jarg1_, Vector3 jarg2);
  public final static native float btVector3_triple(long jarg1, btVector3 jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native int btVector3_minAxis(long jarg1, btVector3 jarg1_);
  public final static native int btVector3_maxAxis(long jarg1, btVector3 jarg1_);
  public final static native int btVector3_furthestAxis(long jarg1, btVector3 jarg1_);
  public final static native int btVector3_closestAxis(long jarg1, btVector3 jarg1_);
  public final static native void btVector3_setInterpolate3(long jarg1, btVector3 jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native Vector3 btVector3_lerp(long jarg1, btVector3 jarg1_, Vector3 jarg2, float jarg3);
  public final static native float btVector3_getX(long jarg1, btVector3 jarg1_);
  public final static native float btVector3_getY(long jarg1, btVector3 jarg1_);
  public final static native float btVector3_getZ(long jarg1, btVector3 jarg1_);
  public final static native void btVector3_setX(long jarg1, btVector3 jarg1_, float jarg2);
  public final static native void btVector3_setY(long jarg1, btVector3 jarg1_, float jarg2);
  public final static native void btVector3_setZ(long jarg1, btVector3 jarg1_, float jarg2);
  public final static native void btVector3_setW(long jarg1, btVector3 jarg1_, float jarg2);
  public final static native float btVector3_x(long jarg1, btVector3 jarg1_);
  public final static native float btVector3_y(long jarg1, btVector3 jarg1_);
  public final static native float btVector3_z(long jarg1, btVector3 jarg1_);
  public final static native float btVector3_w(long jarg1, btVector3 jarg1_);
  public final static native void btVector3_setMax(long jarg1, btVector3 jarg1_, Vector3 jarg2);
  public final static native void btVector3_setMin(long jarg1, btVector3 jarg1_, Vector3 jarg2);
  public final static native void btVector3_setValue(long jarg1, btVector3 jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void btVector3_getSkewSymmetricMatrix(long jarg1, btVector3 jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_);
  public final static native void btVector3_setZero(long jarg1, btVector3 jarg1_);
  public final static native boolean btVector3_isZero(long jarg1, btVector3 jarg1_);
  public final static native boolean btVector3_fuzzyZero(long jarg1, btVector3 jarg1_);
  public final static native void btVector3_serialize(long jarg1, btVector3 jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native void btVector3_deSerialize(long jarg1, btVector3 jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native void btVector3_serializeFloat(long jarg1, btVector3 jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native void btVector3_deSerializeFloat(long jarg1, btVector3 jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native void btVector3_serializeDouble(long jarg1, btVector3 jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native void btVector3_deSerializeDouble(long jarg1, btVector3 jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native int btVector3_maxDot(long jarg1, btVector3 jarg1_, long jarg2, btVector3 jarg2_, int jarg3, long jarg4);
  public final static native int btVector3_minDot(long jarg1, btVector3 jarg1_, long jarg2, btVector3 jarg2_, int jarg3, long jarg4);
  public final static native Vector3 btVector3_dot3(long jarg1, btVector3 jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void delete_btVector3(long jarg1);
  public final static native float btDot(Vector3 jarg1, Vector3 jarg2);
  public final static native float btDistance2(Vector3 jarg1, Vector3 jarg2);
  public final static native float btDistance(Vector3 jarg1, Vector3 jarg2);
  public final static native float btAngle__SWIG_0(Vector3 jarg1, Vector3 jarg2);
  public final static native Vector3 btCross(Vector3 jarg1, Vector3 jarg2);
  public final static native float btTriple(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native Vector3 lerp(Vector3 jarg1, Vector3 jarg2, float jarg3);
  public final static native long new_btVector4__SWIG_0();
  public final static native long new_btVector4__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4);
  public final static native long btVector4_absolute4(long jarg1, btVector4 jarg1_);
  public final static native float btVector4_getW(long jarg1, btVector4 jarg1_);
  public final static native int btVector4_maxAxis4(long jarg1, btVector4 jarg1_);
  public final static native int btVector4_minAxis4(long jarg1, btVector4 jarg1_);
  public final static native int btVector4_closestAxis4(long jarg1, btVector4 jarg1_);
  public final static native void btVector4_setValue(long jarg1, btVector4 jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void delete_btVector4(long jarg1);
  public final static native void btSwapScalarEndian(float jarg1, long jarg2);
  public final static native void btSwapVector3Endian(Vector3 jarg1, Vector3 jarg2);
  public final static native void btUnSwapVector3Endian(Vector3 jarg1);
  public final static native void btVector3FloatData_m_floats_set(long jarg1, btVector3FloatData jarg1_, float[] jarg2);
  public final static native float[] btVector3FloatData_m_floats_get(long jarg1, btVector3FloatData jarg1_);
  public final static native long new_btVector3FloatData();
  public final static native void delete_btVector3FloatData(long jarg1);
  public final static native void btVector3DoubleData_m_floats_set(long jarg1, btVector3DoubleData jarg1_, double[] jarg2);
  public final static native double[] btVector3DoubleData_m_floats_get(long jarg1, btVector3DoubleData jarg1_);
  public final static native long new_btVector3DoubleData();
  public final static native void delete_btVector3DoubleData(long jarg1);
  public final static native long new_btQuaternion__SWIG_0();
  public final static native long new_btQuaternion__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4);
  public final static native long new_btQuaternion__SWIG_2(Vector3 jarg1, float jarg2);
  public final static native long new_btQuaternion__SWIG_3(float jarg1, float jarg2, float jarg3);
  public final static native void btQuaternion_setRotation(long jarg1, btQuaternion jarg1_, Vector3 jarg2, float jarg3);
  public final static native void btQuaternion_setEuler(long jarg1, btQuaternion jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void btQuaternion_setEulerZYX(long jarg1, btQuaternion jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native float btQuaternion_dot(long jarg1, btQuaternion jarg1_, Quaternion jarg2);
  public final static native float btQuaternion_length2(long jarg1, btQuaternion jarg1_);
  public final static native float btQuaternion_length(long jarg1, btQuaternion jarg1_);
  public final static native Quaternion btQuaternion_normalize(long jarg1, btQuaternion jarg1_);
  public final static native Quaternion btQuaternion_normalized(long jarg1, btQuaternion jarg1_);
  public final static native float btQuaternion_angle(long jarg1, btQuaternion jarg1_, Quaternion jarg2);
  public final static native float btQuaternion_getAngle(long jarg1, btQuaternion jarg1_);
  public final static native Vector3 btQuaternion_getAxis(long jarg1, btQuaternion jarg1_);
  public final static native Quaternion btQuaternion_inverse(long jarg1, btQuaternion jarg1_);
  public final static native Quaternion btQuaternion_farthest(long jarg1, btQuaternion jarg1_, Quaternion jarg2);
  public final static native Quaternion btQuaternion_nearest(long jarg1, btQuaternion jarg1_, Quaternion jarg2);
  public final static native Quaternion btQuaternion_slerp(long jarg1, btQuaternion jarg1_, Quaternion jarg2, float jarg3);
  public final static native Quaternion btQuaternion_getIdentity();
  public final static native float btQuaternion_getW(long jarg1, btQuaternion jarg1_);
  public final static native void delete_btQuaternion(long jarg1);
  public final static native float dot(Quaternion jarg1, Quaternion jarg2);
  public final static native float length(Quaternion jarg1);
  public final static native float btAngle__SWIG_1(Quaternion jarg1, Quaternion jarg2);
  public final static native Quaternion inverse(Quaternion jarg1);
  public final static native Quaternion slerp(Quaternion jarg1, Quaternion jarg2, float jarg3);
  public final static native Vector3 quatRotate(Quaternion jarg1, Vector3 jarg2);
  public final static native Quaternion shortestArcQuat(Vector3 jarg1, Vector3 jarg2);
  public final static native Quaternion shortestArcQuatNormalize2(Vector3 jarg1, Vector3 jarg2);
  public final static native void AabbExpand(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native boolean TestPointAgainstAabb2(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native boolean TestAabbAgainstAabb2(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native boolean TestTriangleAgainstAabb2(long jarg1, btVector3 jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native int btOutcode(Vector3 jarg1, Vector3 jarg2);
  public final static native boolean btRayAabb2(Vector3 jarg1, Vector3 jarg2, long[] jarg3, long jarg4, btVector3 jarg4_, long jarg5, float jarg6, float jarg7);
  public final static native boolean btRayAabb(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, Vector3 jarg6);
  public final static native void btTransformAabb__SWIG_0(Vector3 jarg1, float jarg2, Matrix4 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native void btTransformAabb__SWIG_1(Vector3 jarg1, Vector3 jarg2, float jarg3, Matrix4 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native long testQuantizedAabbAgainstQuantizedAabb(java.nio.IntBuffer jarg1, java.nio.IntBuffer jarg2, java.nio.IntBuffer jarg3, java.nio.IntBuffer jarg4);
  public final static native void delete_btIDebugDraw(long jarg1);
  public final static native void btIDebugDraw_drawLine__SWIG_0(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_);
  public final static native void btIDebugDraw_drawLine__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, long jarg5, btVector3 jarg5_);
  public final static native void btIDebugDraw_drawLineSwigExplicitbtIDebugDraw__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, long jarg5, btVector3 jarg5_);
  public final static native void btIDebugDraw_drawSphere__SWIG_0(long jarg1, btIDebugDraw jarg1_, float jarg2, long jarg3, btTransform jarg3_, long jarg4, btVector3 jarg4_);
  public final static native void btIDebugDraw_drawSphereSwigExplicitbtIDebugDraw__SWIG_0(long jarg1, btIDebugDraw jarg1_, float jarg2, long jarg3, btTransform jarg3_, long jarg4, btVector3 jarg4_);
  public final static native void btIDebugDraw_drawSphere__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, float jarg3, long jarg4, btVector3 jarg4_);
  public final static native void btIDebugDraw_drawSphereSwigExplicitbtIDebugDraw__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, float jarg3, long jarg4, btVector3 jarg4_);
  public final static native void btIDebugDraw_drawTriangle__SWIG_0(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, long jarg5, btVector3 jarg5_, long jarg6, btVector3 jarg6_, long jarg7, btVector3 jarg7_, long jarg8, btVector3 jarg8_, float jarg9);
  public final static native void btIDebugDraw_drawTriangleSwigExplicitbtIDebugDraw__SWIG_0(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, long jarg5, btVector3 jarg5_, long jarg6, btVector3 jarg6_, long jarg7, btVector3 jarg7_, long jarg8, btVector3 jarg8_, float jarg9);
  public final static native void btIDebugDraw_drawTriangle__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, long jarg5, btVector3 jarg5_, float jarg6);
  public final static native void btIDebugDraw_drawTriangleSwigExplicitbtIDebugDraw__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, long jarg5, btVector3 jarg5_, float jarg6);
  public final static native void btIDebugDraw_drawContactPoint(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, float jarg4, int jarg5, long jarg6, btVector3 jarg6_);
  public final static native void btIDebugDraw_reportErrorWarning(long jarg1, btIDebugDraw jarg1_, String jarg2);
  public final static native void btIDebugDraw_draw3dText(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, String jarg3);
  public final static native void btIDebugDraw_setDebugMode(long jarg1, btIDebugDraw jarg1_, int jarg2);
  public final static native int btIDebugDraw_getDebugMode(long jarg1, btIDebugDraw jarg1_);
  public final static native void btIDebugDraw_drawAabb(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_);
  public final static native void btIDebugDraw_drawAabbSwigExplicitbtIDebugDraw(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_);
  public final static native void btIDebugDraw_drawTransform(long jarg1, btIDebugDraw jarg1_, long jarg2, btTransform jarg2_, float jarg3);
  public final static native void btIDebugDraw_drawTransformSwigExplicitbtIDebugDraw(long jarg1, btIDebugDraw jarg1_, long jarg2, btTransform jarg2_, float jarg3);
  public final static native void btIDebugDraw_drawArc__SWIG_0(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, float jarg5, float jarg6, float jarg7, float jarg8, long jarg9, btVector3 jarg9_, boolean jarg10, float jarg11);
  public final static native void btIDebugDraw_drawArcSwigExplicitbtIDebugDraw__SWIG_0(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, float jarg5, float jarg6, float jarg7, float jarg8, long jarg9, btVector3 jarg9_, boolean jarg10, float jarg11);
  public final static native void btIDebugDraw_drawArc__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, float jarg5, float jarg6, float jarg7, float jarg8, long jarg9, btVector3 jarg9_, boolean jarg10);
  public final static native void btIDebugDraw_drawArcSwigExplicitbtIDebugDraw__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, float jarg5, float jarg6, float jarg7, float jarg8, long jarg9, btVector3 jarg9_, boolean jarg10);
  public final static native void btIDebugDraw_drawSpherePatch__SWIG_0(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, long jarg10, btVector3 jarg10_, float jarg11);
  public final static native void btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_0(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, long jarg10, btVector3 jarg10_, float jarg11);
  public final static native void btIDebugDraw_drawSpherePatch__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, long jarg10, btVector3 jarg10_);
  public final static native void btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, long jarg10, btVector3 jarg10_);
  public final static native void btIDebugDraw_drawBox__SWIG_0(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_);
  public final static native void btIDebugDraw_drawBoxSwigExplicitbtIDebugDraw__SWIG_0(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_);
  public final static native void btIDebugDraw_drawBox__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btTransform jarg4_, long jarg5, btVector3 jarg5_);
  public final static native void btIDebugDraw_drawBoxSwigExplicitbtIDebugDraw__SWIG_1(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btTransform jarg4_, long jarg5, btVector3 jarg5_);
  public final static native void btIDebugDraw_drawCapsule(long jarg1, btIDebugDraw jarg1_, float jarg2, float jarg3, int jarg4, long jarg5, btTransform jarg5_, long jarg6, btVector3 jarg6_);
  public final static native void btIDebugDraw_drawCapsuleSwigExplicitbtIDebugDraw(long jarg1, btIDebugDraw jarg1_, float jarg2, float jarg3, int jarg4, long jarg5, btTransform jarg5_, long jarg6, btVector3 jarg6_);
  public final static native void btIDebugDraw_drawCylinder(long jarg1, btIDebugDraw jarg1_, float jarg2, float jarg3, int jarg4, long jarg5, btTransform jarg5_, long jarg6, btVector3 jarg6_);
  public final static native void btIDebugDraw_drawCylinderSwigExplicitbtIDebugDraw(long jarg1, btIDebugDraw jarg1_, float jarg2, float jarg3, int jarg4, long jarg5, btTransform jarg5_, long jarg6, btVector3 jarg6_);
  public final static native void btIDebugDraw_drawCone(long jarg1, btIDebugDraw jarg1_, float jarg2, float jarg3, int jarg4, long jarg5, btTransform jarg5_, long jarg6, btVector3 jarg6_);
  public final static native void btIDebugDraw_drawConeSwigExplicitbtIDebugDraw(long jarg1, btIDebugDraw jarg1_, float jarg2, float jarg3, int jarg4, long jarg5, btTransform jarg5_, long jarg6, btVector3 jarg6_);
  public final static native void btIDebugDraw_drawPlane(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, float jarg3, long jarg4, btTransform jarg4_, long jarg5, btVector3 jarg5_);
  public final static native void btIDebugDraw_drawPlaneSwigExplicitbtIDebugDraw(long jarg1, btIDebugDraw jarg1_, long jarg2, btVector3 jarg2_, float jarg3, long jarg4, btTransform jarg4_, long jarg5, btVector3 jarg5_);
  public final static native long new_btIDebugDraw();
  public final static native void btIDebugDraw_director_connect(btIDebugDraw obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btIDebugDraw_change_ownership(btIDebugDraw obj, long cptr, boolean take_or_release);
  public final static native void btGeometryUtil_getPlaneEquationsFromVertices(long jarg1, long jarg2);
  public final static native void btGeometryUtil_getVerticesFromPlaneEquations(long jarg1, long jarg2);
  public final static native boolean btGeometryUtil_isInside(long jarg1, Vector3 jarg2, float jarg3);
  public final static native boolean btGeometryUtil_isPointInsidePlanes(long jarg1, Vector3 jarg2, float jarg3);
  public final static native boolean btGeometryUtil_areVerticesBehindPlane(Vector3 jarg1, long jarg2, float jarg3);
  public final static native long new_btGeometryUtil();
  public final static native void delete_btGeometryUtil(long jarg1);
  public final static native void GEN_srand(long jarg1);
  public final static native long GEN_rand();
  public final static native Vector3 btAabbSupport(Vector3 jarg1, Vector3 jarg2);
  public final static native void btTransformUtil_integrateTransform(Matrix4 jarg1, Vector3 jarg2, Vector3 jarg3, float jarg4, Matrix4 jarg5);
  public final static native void btTransformUtil_calculateVelocityQuaternion(Vector3 jarg1, Vector3 jarg2, Quaternion jarg3, Quaternion jarg4, float jarg5, Vector3 jarg6, Vector3 jarg7);
  public final static native void btTransformUtil_calculateDiffAxisAngleQuaternion(Quaternion jarg1, Quaternion jarg2, Vector3 jarg3, long jarg4);
  public final static native void btTransformUtil_calculateVelocity(Matrix4 jarg1, Matrix4 jarg2, float jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native void btTransformUtil_calculateDiffAxisAngle(Matrix4 jarg1, Matrix4 jarg2, Vector3 jarg3, long jarg4);
  public final static native long new_btTransformUtil();
  public final static native void delete_btTransformUtil(long jarg1);
  public final static native long new_btConvexSeparatingDistanceUtil(float jarg1, float jarg2);
  public final static native float btConvexSeparatingDistanceUtil_getConservativeSeparatingDistance(long jarg1, btConvexSeparatingDistanceUtil jarg1_);
  public final static native void btConvexSeparatingDistanceUtil_updateSeparatingDistance(long jarg1, btConvexSeparatingDistanceUtil jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native void btConvexSeparatingDistanceUtil_initSeparatingDistance(long jarg1, btConvexSeparatingDistanceUtil jarg1_, Vector3 jarg2, float jarg3, Matrix4 jarg4, Matrix4 jarg5);
  public final static native void delete_btConvexSeparatingDistanceUtil(long jarg1);
  public final static native long new_HullResult();
  public final static native void HullResult_mPolygons_set(long jarg1, HullResult jarg1_, boolean jarg2);
  public final static native boolean HullResult_mPolygons_get(long jarg1, HullResult jarg1_);
  public final static native void HullResult_mNumOutputVertices_set(long jarg1, HullResult jarg1_, long jarg2);
  public final static native long HullResult_mNumOutputVertices_get(long jarg1, HullResult jarg1_);
  public final static native void HullResult_m_OutputVertices_set(long jarg1, HullResult jarg1_, long jarg2);
  public final static native long HullResult_m_OutputVertices_get(long jarg1, HullResult jarg1_);
  public final static native void HullResult_mNumFaces_set(long jarg1, HullResult jarg1_, long jarg2);
  public final static native long HullResult_mNumFaces_get(long jarg1, HullResult jarg1_);
  public final static native void HullResult_mNumIndices_set(long jarg1, HullResult jarg1_, long jarg2);
  public final static native long HullResult_mNumIndices_get(long jarg1, HullResult jarg1_);
  public final static native void HullResult_m_Indices_set(long jarg1, HullResult jarg1_, long jarg2);
  public final static native long HullResult_m_Indices_get(long jarg1, HullResult jarg1_);
  public final static native void delete_HullResult(long jarg1);
  public final static native long new_HullDesc__SWIG_0();
  public final static native long new_HullDesc__SWIG_1(int jarg1, long jarg2, long jarg3, btVector3 jarg3_, long jarg4);
  public final static native long new_HullDesc__SWIG_2(int jarg1, long jarg2, long jarg3, btVector3 jarg3_);
  public final static native boolean HullDesc_HasHullFlag(long jarg1, HullDesc jarg1_, int jarg2);
  public final static native void HullDesc_SetHullFlag(long jarg1, HullDesc jarg1_, int jarg2);
  public final static native void HullDesc_ClearHullFlag(long jarg1, HullDesc jarg1_, int jarg2);
  public final static native void HullDesc_mFlags_set(long jarg1, HullDesc jarg1_, long jarg2);
  public final static native long HullDesc_mFlags_get(long jarg1, HullDesc jarg1_);
  public final static native void HullDesc_mVcount_set(long jarg1, HullDesc jarg1_, long jarg2);
  public final static native long HullDesc_mVcount_get(long jarg1, HullDesc jarg1_);
  public final static native void HullDesc_mVertices_set(long jarg1, HullDesc jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long HullDesc_mVertices_get(long jarg1, HullDesc jarg1_);
  public final static native void HullDesc_mVertexStride_set(long jarg1, HullDesc jarg1_, long jarg2);
  public final static native long HullDesc_mVertexStride_get(long jarg1, HullDesc jarg1_);
  public final static native void HullDesc_mNormalEpsilon_set(long jarg1, HullDesc jarg1_, float jarg2);
  public final static native float HullDesc_mNormalEpsilon_get(long jarg1, HullDesc jarg1_);
  public final static native void HullDesc_mMaxVertices_set(long jarg1, HullDesc jarg1_, long jarg2);
  public final static native long HullDesc_mMaxVertices_get(long jarg1, HullDesc jarg1_);
  public final static native void HullDesc_mMaxFaces_set(long jarg1, HullDesc jarg1_, long jarg2);
  public final static native long HullDesc_mMaxFaces_get(long jarg1, HullDesc jarg1_);
  public final static native void delete_HullDesc(long jarg1);
  public final static native void btPlane_normal_set(long jarg1, btPlane jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btPlane_normal_get(long jarg1, btPlane jarg1_);
  public final static native void btPlane_dist_set(long jarg1, btPlane jarg1_, float jarg2);
  public final static native float btPlane_dist_get(long jarg1, btPlane jarg1_);
  public final static native long new_btPlane__SWIG_0(Vector3 jarg1, float jarg2);
  public final static native long new_btPlane__SWIG_1();
  public final static native void delete_btPlane(long jarg1);
  public final static native long new_ConvexH__SWIG_0();
  public final static native void delete_ConvexH(long jarg1);
  public final static native void ConvexH_vertices_set(long jarg1, ConvexH jarg1_, long jarg2);
  public final static native long ConvexH_vertices_get(long jarg1, ConvexH jarg1_);
  public final static native void ConvexH_edges_set(long jarg1, ConvexH jarg1_, long jarg2);
  public final static native long ConvexH_edges_get(long jarg1, ConvexH jarg1_);
  public final static native void ConvexH_facets_set(long jarg1, ConvexH jarg1_, long jarg2);
  public final static native long ConvexH_facets_get(long jarg1, ConvexH jarg1_);
  public final static native long new_ConvexH__SWIG_1(int jarg1, int jarg2, int jarg3);
  public final static native void int4_x_set(long jarg1, int4 jarg1_, int jarg2);
  public final static native int int4_x_get(long jarg1, int4 jarg1_);
  public final static native void int4_y_set(long jarg1, int4 jarg1_, int jarg2);
  public final static native int int4_y_get(long jarg1, int4 jarg1_);
  public final static native void int4_z_set(long jarg1, int4 jarg1_, int jarg2);
  public final static native int int4_z_get(long jarg1, int4 jarg1_);
  public final static native void int4_w_set(long jarg1, int4 jarg1_, int jarg2);
  public final static native int int4_w_get(long jarg1, int4 jarg1_);
  public final static native long new_int4__SWIG_0();
  public final static native long new_int4__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native void delete_int4(long jarg1);
  public final static native long new_PHullResult();
  public final static native void PHullResult_mVcount_set(long jarg1, PHullResult jarg1_, long jarg2);
  public final static native long PHullResult_mVcount_get(long jarg1, PHullResult jarg1_);
  public final static native void PHullResult_mIndexCount_set(long jarg1, PHullResult jarg1_, long jarg2);
  public final static native long PHullResult_mIndexCount_get(long jarg1, PHullResult jarg1_);
  public final static native void PHullResult_mFaceCount_set(long jarg1, PHullResult jarg1_, long jarg2);
  public final static native long PHullResult_mFaceCount_get(long jarg1, PHullResult jarg1_);
  public final static native void PHullResult_mVertices_set(long jarg1, PHullResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long PHullResult_mVertices_get(long jarg1, PHullResult jarg1_);
  public final static native void PHullResult_m_Indices_set(long jarg1, PHullResult jarg1_, long jarg2);
  public final static native long PHullResult_m_Indices_get(long jarg1, PHullResult jarg1_);
  public final static native void delete_PHullResult(long jarg1);
  public final static native void HullLibrary_m_vertexIndexMapping_set(long jarg1, HullLibrary jarg1_, long jarg2);
  public final static native long HullLibrary_m_vertexIndexMapping_get(long jarg1, HullLibrary jarg1_);
  public final static native int HullLibrary_CreateConvexHull(long jarg1, HullLibrary jarg1_, long jarg2, HullDesc jarg2_, long jarg3, HullResult jarg3_);
  public final static native int HullLibrary_ReleaseResult(long jarg1, HullLibrary jarg1_, long jarg2, HullResult jarg2_);
  public final static native long new_HullLibrary();
  public final static native void delete_HullLibrary(long jarg1);
  public final static native long new_GrahamVector3(Vector3 jarg1, int jarg2);
  public final static native void GrahamVector3_m_angle_set(long jarg1, GrahamVector3 jarg1_, float jarg2);
  public final static native float GrahamVector3_m_angle_get(long jarg1, GrahamVector3 jarg1_);
  public final static native void GrahamVector3_m_orgIndex_set(long jarg1, GrahamVector3 jarg1_, int jarg2);
  public final static native int GrahamVector3_m_orgIndex_get(long jarg1, GrahamVector3 jarg1_);
  public final static native void delete_GrahamVector3(long jarg1);
  public final static native void btAngleCompareFunc_m_anchor_set(long jarg1, btAngleCompareFunc jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btAngleCompareFunc_m_anchor_get(long jarg1, btAngleCompareFunc jarg1_);
  public final static native long new_btAngleCompareFunc(Vector3 jarg1);
  public final static native void delete_btAngleCompareFunc(long jarg1);
  public final static native void GrahamScanConvexHull2D(long jarg1, long jarg2, Vector3 jarg3);
  public final static native long new_btPoolAllocator(int jarg1, int jarg2);
  public final static native void delete_btPoolAllocator(long jarg1);
  public final static native int btPoolAllocator_getFreeCount(long jarg1, btPoolAllocator jarg1_);
  public final static native int btPoolAllocator_getUsedCount(long jarg1, btPoolAllocator jarg1_);
  public final static native int btPoolAllocator_getMaxCount(long jarg1, btPoolAllocator jarg1_);
  public final static native long btPoolAllocator_allocate(long jarg1, btPoolAllocator jarg1_, int jarg2);
  public final static native boolean btPoolAllocator_validPtr(long jarg1, btPoolAllocator jarg1_, long jarg2);
  public final static native void btPoolAllocator_freeMemory(long jarg1, btPoolAllocator jarg1_, long jarg2);
  public final static native int btPoolAllocator_getElementSize(long jarg1, btPoolAllocator jarg1_);
  public final static native java.nio.ByteBuffer btPoolAllocator_getPoolAddress__SWIG_0(long jarg1, btPoolAllocator jarg1_);
  public final static native void btConvexHullComputer_vertices_set(long jarg1, btConvexHullComputer jarg1_, long jarg2);
  public final static native long btConvexHullComputer_vertices_get(long jarg1, btConvexHullComputer jarg1_);
  public final static native void btConvexHullComputer_edges_set(long jarg1, btConvexHullComputer jarg1_, long jarg2);
  public final static native long btConvexHullComputer_edges_get(long jarg1, btConvexHullComputer jarg1_);
  public final static native void btConvexHullComputer_faces_set(long jarg1, btConvexHullComputer jarg1_, long jarg2);
  public final static native long btConvexHullComputer_faces_get(long jarg1, btConvexHullComputer jarg1_);
  public final static native float btConvexHullComputer_compute__SWIG_0(long jarg1, btConvexHullComputer jarg1_, java.nio.FloatBuffer jarg2, int jarg3, int jarg4, float jarg5, float jarg6);
  public final static native float btConvexHullComputer_compute__SWIG_1(long jarg1, btConvexHullComputer jarg1_, java.nio.DoubleBuffer jarg2, int jarg3, int jarg4, float jarg5, float jarg6);
  public final static native long new_btConvexHullComputer();
  public final static native void delete_btConvexHullComputer(long jarg1);
  public final static native long new_btGEN_Link__SWIG_0();
  public final static native long new_btGEN_Link__SWIG_1(long jarg1, btGEN_Link jarg1_, long jarg2, btGEN_Link jarg2_);
  public final static native long btGEN_Link_getNext(long jarg1, btGEN_Link jarg1_);
  public final static native long btGEN_Link_getPrev(long jarg1, btGEN_Link jarg1_);
  public final static native boolean btGEN_Link_isHead(long jarg1, btGEN_Link jarg1_);
  public final static native boolean btGEN_Link_isTail(long jarg1, btGEN_Link jarg1_);
  public final static native void btGEN_Link_insertBefore(long jarg1, btGEN_Link jarg1_, long jarg2, btGEN_Link jarg2_);
  public final static native void btGEN_Link_insertAfter(long jarg1, btGEN_Link jarg1_, long jarg2, btGEN_Link jarg2_);
  public final static native void btGEN_Link_remove(long jarg1, btGEN_Link jarg1_);
  public final static native void delete_btGEN_Link(long jarg1);
  public final static native long new_btGEN_List();
  public final static native long btGEN_List_getHead(long jarg1, btGEN_List jarg1_);
  public final static native long btGEN_List_getTail(long jarg1, btGEN_List jarg1_);
  public final static native void btGEN_List_addHead(long jarg1, btGEN_List jarg1_, long jarg2, btGEN_Link jarg2_);
  public final static native void btGEN_List_addTail(long jarg1, btGEN_List jarg1_, long jarg2, btGEN_Link jarg2_);
  public final static native void delete_btGEN_List(long jarg1);
  public final static native long btAlignedAllocInternal(long jarg1, int jarg2);
  public final static native void btAlignedFreeInternal(long jarg1);
  public final static native void btAlignedAllocSetCustom(long jarg1, long jarg2);
  public final static native void btAlignedAllocSetCustomAligned(long jarg1, long jarg2);
  public final static native void btHashString_m_string_set(long jarg1, btHashString jarg1_, String jarg2);
  public final static native String btHashString_m_string_get(long jarg1, btHashString jarg1_);
  public final static native void btHashString_m_hash_set(long jarg1, btHashString jarg1_, long jarg2);
  public final static native long btHashString_m_hash_get(long jarg1, btHashString jarg1_);
  public final static native long btHashString_getHash(long jarg1, btHashString jarg1_);
  public final static native long new_btHashString(String jarg1);
  public final static native int btHashString_portableStringCompare(long jarg1, btHashString jarg1_, String jarg2, String jarg3);
  public final static native boolean btHashString_equals(long jarg1, btHashString jarg1_, long jarg2, btHashString jarg2_);
  public final static native void delete_btHashString(long jarg1);
  public final static native int BT_HASH_NULL_get();
  public final static native long new_btHashInt(int jarg1);
  public final static native int btHashInt_getUid1(long jarg1, btHashInt jarg1_);
  public final static native void btHashInt_setUid1(long jarg1, btHashInt jarg1_, int jarg2);
  public final static native boolean btHashInt_equals(long jarg1, btHashInt jarg1_, long jarg2, btHashInt jarg2_);
  public final static native long btHashInt_getHash(long jarg1, btHashInt jarg1_);
  public final static native void delete_btHashInt(long jarg1);
  public final static native long new_btHashPtr(long jarg1);
  public final static native long btHashPtr_getPointer(long jarg1, btHashPtr jarg1_);
  public final static native boolean btHashPtr_equals(long jarg1, btHashPtr jarg1_, long jarg2, btHashPtr jarg2_);
  public final static native long btHashPtr_getHash(long jarg1, btHashPtr jarg1_);
  public final static native void delete_btHashPtr(long jarg1);
  public final static native void btBlock_previous_set(long jarg1, btBlock jarg1_, long jarg2, btBlock jarg2_);
  public final static native long btBlock_previous_get(long jarg1, btBlock jarg1_);
  public final static native void btBlock_address_set(long jarg1, btBlock jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btBlock_address_get(long jarg1, btBlock jarg1_);
  public final static native long new_btBlock();
  public final static native void delete_btBlock(long jarg1);
  public final static native long new_btStackAlloc(long jarg1);
  public final static native void delete_btStackAlloc(long jarg1);
  public final static native void btStackAlloc_create(long jarg1, btStackAlloc jarg1_, long jarg2);
  public final static native void btStackAlloc_destroy(long jarg1, btStackAlloc jarg1_);
  public final static native int btStackAlloc_getAvailableMemory(long jarg1, btStackAlloc jarg1_);
  public final static native java.nio.ByteBuffer btStackAlloc_allocate(long jarg1, btStackAlloc jarg1_, long jarg2);
  public final static native long btStackAlloc_beginBlock(long jarg1, btStackAlloc jarg1_);
  public final static native void btStackAlloc_endBlock(long jarg1, btStackAlloc jarg1_, long jarg2, btBlock jarg2_);
  public final static native void delete_btMotionState(long jarg1);
  public final static native void btMotionState_getWorldTransform(long jarg1, btMotionState jarg1_, Matrix4 jarg2);
  public final static native void btMotionState_setWorldTransform(long jarg1, btMotionState jarg1_, Matrix4 jarg2);
  public final static native long new_btMotionState();
  public final static native void btMotionState_director_connect(btMotionState obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void btMotionState_change_ownership(btMotionState obj, long cptr, boolean take_or_release);
  public final static native void btDefaultMotionState_m_graphicsWorldTrans_set(long jarg1, btDefaultMotionState jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btDefaultMotionState_m_graphicsWorldTrans_get(long jarg1, btDefaultMotionState jarg1_);
  public final static native void btDefaultMotionState_m_centerOfMassOffset_set(long jarg1, btDefaultMotionState jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btDefaultMotionState_m_centerOfMassOffset_get(long jarg1, btDefaultMotionState jarg1_);
  public final static native void btDefaultMotionState_m_startWorldTrans_set(long jarg1, btDefaultMotionState jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btDefaultMotionState_m_startWorldTrans_get(long jarg1, btDefaultMotionState jarg1_);
  public final static native void btDefaultMotionState_m_userPointer_set(long jarg1, btDefaultMotionState jarg1_, long jarg2);
  public final static native long btDefaultMotionState_m_userPointer_get(long jarg1, btDefaultMotionState jarg1_);
  public final static native long new_btDefaultMotionState__SWIG_0(Matrix4 jarg1, Matrix4 jarg2);
  public final static native long new_btDefaultMotionState__SWIG_1(Matrix4 jarg1);
  public final static native long new_btDefaultMotionState__SWIG_2();
  public final static native void btDefaultMotionState_getGraphicsWorldTrans(long jarg1, btDefaultMotionState jarg1_, Matrix4 jarg2);
  public final static native void btDefaultMotionState_getCenterOfMassOffset(long jarg1, btDefaultMotionState jarg1_, Matrix4 jarg2);
  public final static native void btDefaultMotionState_getStartWorldTrans(long jarg1, btDefaultMotionState jarg1_, Matrix4 jarg2);
  public final static native void delete_btDefaultMotionState(long jarg1);
  public final static native void delete_Result(long jarg1);
  public final static native void Result_setShapeIdentifiersA(long jarg1, Result jarg1_, int jarg2, int jarg3);
  public final static native void Result_setShapeIdentifiersB(long jarg1, Result jarg1_, int jarg2, int jarg3);
  public final static native void Result_addContactPoint(long jarg1, Result jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native long new_ClosestPointInput();
  public final static native void ClosestPointInput_m_transformA_set(long jarg1, ClosestPointInput jarg1_, long jarg2, btTransform jarg2_);
  public final static native long ClosestPointInput_m_transformA_get(long jarg1, ClosestPointInput jarg1_);
  public final static native void ClosestPointInput_m_transformB_set(long jarg1, ClosestPointInput jarg1_, long jarg2, btTransform jarg2_);
  public final static native long ClosestPointInput_m_transformB_get(long jarg1, ClosestPointInput jarg1_);
  public final static native void ClosestPointInput_m_maximumDistanceSquared_set(long jarg1, ClosestPointInput jarg1_, float jarg2);
  public final static native float ClosestPointInput_m_maximumDistanceSquared_get(long jarg1, ClosestPointInput jarg1_);
  public final static native void ClosestPointInput_m_stackAlloc_set(long jarg1, ClosestPointInput jarg1_, long jarg2, btStackAlloc jarg2_);
  public final static native long ClosestPointInput_m_stackAlloc_get(long jarg1, ClosestPointInput jarg1_);
  public final static native void delete_ClosestPointInput(long jarg1);
  public final static native void btBroadphaseProxy_m_clientObject_set(long jarg1, btBroadphaseProxy jarg1_, long jarg2);
  public final static native long btBroadphaseProxy_m_clientObject_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_m_collisionFilterGroup_set(long jarg1, btBroadphaseProxy jarg1_, short jarg2);
  public final static native short btBroadphaseProxy_m_collisionFilterGroup_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_m_collisionFilterMask_set(long jarg1, btBroadphaseProxy jarg1_, short jarg2);
  public final static native short btBroadphaseProxy_m_collisionFilterMask_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_m_multiSapParentProxy_set(long jarg1, btBroadphaseProxy jarg1_, long jarg2);
  public final static native long btBroadphaseProxy_m_multiSapParentProxy_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_m_uniqueId_set(long jarg1, btBroadphaseProxy jarg1_, int jarg2);
  public final static native int btBroadphaseProxy_m_uniqueId_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_m_aabbMin_set(long jarg1, btBroadphaseProxy jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btBroadphaseProxy_m_aabbMin_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native void btBroadphaseProxy_m_aabbMax_set(long jarg1, btBroadphaseProxy jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btBroadphaseProxy_m_aabbMax_get(long jarg1, btBroadphaseProxy jarg1_);
  public final static native int btBroadphaseProxy_getUid(long jarg1, btBroadphaseProxy jarg1_);
  public final static native long new_btBroadphaseProxy__SWIG_0();
  public final static native long new_btBroadphaseProxy__SWIG_1(Vector3 jarg1, Vector3 jarg2, long jarg3, short jarg4, short jarg5, long jarg6);
  public final static native long new_btBroadphaseProxy__SWIG_2(Vector3 jarg1, Vector3 jarg2, long jarg3, short jarg4, short jarg5);
  public final static native boolean btBroadphaseProxy_isPolyhedral(int jarg1);
  public final static native boolean btBroadphaseProxy_isConvex(int jarg1);
  public final static native boolean btBroadphaseProxy_isNonMoving(int jarg1);
  public final static native boolean btBroadphaseProxy_isConcave(int jarg1);
  public final static native boolean btBroadphaseProxy_isCompound(int jarg1);
  public final static native boolean btBroadphaseProxy_isSoftBody(int jarg1);
  public final static native boolean btBroadphaseProxy_isInfinite(int jarg1);
  public final static native boolean btBroadphaseProxy_isConvex2d(int jarg1);
  public final static native void delete_btBroadphaseProxy(long jarg1);
  public final static native long new_btBroadphasePair__SWIG_0();
  public final static native long new_btBroadphasePair__SWIG_1(long jarg1, btBroadphasePair jarg1_);
  public final static native long new_btBroadphasePair__SWIG_2(long jarg1, btBroadphaseProxy jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native void btBroadphasePair_m_pProxy0_set(long jarg1, btBroadphasePair jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native long btBroadphasePair_m_pProxy0_get(long jarg1, btBroadphasePair jarg1_);
  public final static native void btBroadphasePair_m_pProxy1_set(long jarg1, btBroadphasePair jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native long btBroadphasePair_m_pProxy1_get(long jarg1, btBroadphasePair jarg1_);
  public final static native void btBroadphasePair_m_algorithm_set(long jarg1, btBroadphasePair jarg1_, long jarg2, btCollisionAlgorithm jarg2_);
  public final static native long btBroadphasePair_m_algorithm_get(long jarg1, btBroadphasePair jarg1_);
  public final static native void delete_btBroadphasePair(long jarg1);
  public final static native long new_btBroadphasePairSortPredicate();
  public final static native void delete_btBroadphasePairSortPredicate(long jarg1);
  public final static native void delete_btBroadphaseAabbCallback(long jarg1);
  public final static native boolean btBroadphaseAabbCallback_process(long jarg1, btBroadphaseAabbCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native void btBroadphaseRayCallback_m_rayDirectionInverse_set(long jarg1, btBroadphaseRayCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btBroadphaseRayCallback_m_rayDirectionInverse_get(long jarg1, btBroadphaseRayCallback jarg1_);
  public final static native void btBroadphaseRayCallback_m_signs_set(long jarg1, btBroadphaseRayCallback jarg1_, long[] jarg2);
  public final static native long[] btBroadphaseRayCallback_m_signs_get(long jarg1, btBroadphaseRayCallback jarg1_);
  public final static native void btBroadphaseRayCallback_m_lambda_max_set(long jarg1, btBroadphaseRayCallback jarg1_, float jarg2);
  public final static native float btBroadphaseRayCallback_m_lambda_max_get(long jarg1, btBroadphaseRayCallback jarg1_);
  public final static native void delete_btBroadphaseRayCallback(long jarg1);
  public final static native void delete_btBroadphaseInterface(long jarg1);
  public final static native long btBroadphaseInterface_createProxy(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, int jarg4, long jarg5, short jarg6, short jarg7, long jarg8, btDispatcher jarg8_, long jarg9);
  public final static native void btBroadphaseInterface_destroyProxy(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native void btBroadphaseInterface_setAabb(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4, long jarg5, btDispatcher jarg5_);
  public final static native void btBroadphaseInterface_getAabb(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btBroadphaseInterface_rayTest__SWIG_0(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btBroadphaseInterface_rayTest__SWIG_1(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btBroadphaseInterface_rayTest__SWIG_2(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native void btBroadphaseInterface_aabbTest(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseAabbCallback jarg4_);
  public final static native void btBroadphaseInterface_calculateOverlappingPairs(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native long btBroadphaseInterface_getOverlappingPairCache__SWIG_0(long jarg1, btBroadphaseInterface jarg1_);
  public final static native void btBroadphaseInterface_getBroadphaseAabb(long jarg1, btBroadphaseInterface jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btBroadphaseInterface_resetPool(long jarg1, btBroadphaseInterface jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native void btBroadphaseInterface_printStats(long jarg1, btBroadphaseInterface jarg1_);
  public final static native Vector3 btDbvtAabbMm_Center(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_Lengths(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_Extents(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_Mins(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_Maxs(long jarg1, btDbvtAabbMm jarg1_);
  public final static native long btDbvtAabbMm_FromCE(Vector3 jarg1, Vector3 jarg2);
  public final static native long btDbvtAabbMm_FromCR(Vector3 jarg1, float jarg2);
  public final static native long btDbvtAabbMm_FromMM(Vector3 jarg1, Vector3 jarg2);
  public final static native long btDbvtAabbMm_FromPoints__SWIG_0(long jarg1, btVector3 jarg1_, int jarg2);
  public final static native long btDbvtAabbMm_FromPoints__SWIG_1(long jarg1, int jarg2);
  public final static native void btDbvtAabbMm_Expand(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2);
  public final static native void btDbvtAabbMm_SignedExpand(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2);
  public final static native boolean btDbvtAabbMm_Contain(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native int btDbvtAabbMm_Classify(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2, float jarg3, int jarg4);
  public final static native float btDbvtAabbMm_ProjectMinimum(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2, long jarg3);
  public final static native boolean Intersect__SWIG_0(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native boolean Intersect__SWIG_1(long jarg1, btDbvtAabbMm jarg1_, Vector3 jarg2);
  public final static native float Proximity(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native int Select(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_, long jarg3, btDbvtAabbMm jarg3_);
  public final static native void Merge(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_, long jarg3, btDbvtAabbMm jarg3_);
  public final static native boolean NotEqual(long jarg1, btDbvtAabbMm jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native Vector3 btDbvtAabbMm_tMins(long jarg1, btDbvtAabbMm jarg1_);
  public final static native Vector3 btDbvtAabbMm_tMaxs(long jarg1, btDbvtAabbMm jarg1_);
  public final static native long new_btDbvtAabbMm();
  public final static native void delete_btDbvtAabbMm(long jarg1);
  public final static native void btDbvtNode_volume_set(long jarg1, btDbvtNode jarg1_, long jarg2, btDbvtAabbMm jarg2_);
  public final static native long btDbvtNode_volume_get(long jarg1, btDbvtNode jarg1_);
  public final static native void btDbvtNode_parent_set(long jarg1, btDbvtNode jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvtNode_parent_get(long jarg1, btDbvtNode jarg1_);
  public final static native boolean btDbvtNode_isleaf(long jarg1, btDbvtNode jarg1_);
  public final static native boolean btDbvtNode_isinternal(long jarg1, btDbvtNode jarg1_);
  public final static native long new_btDbvtNode();
  public final static native void delete_btDbvtNode(long jarg1);
  public final static native void btDbvt_m_root_set(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_m_root_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_m_free_set(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvt_m_free_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_m_lkhd_set(long jarg1, btDbvt jarg1_, int jarg2);
  public final static native int btDbvt_m_lkhd_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_m_leaves_set(long jarg1, btDbvt jarg1_, int jarg2);
  public final static native int btDbvt_m_leaves_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_m_opath_set(long jarg1, btDbvt jarg1_, long jarg2);
  public final static native long btDbvt_m_opath_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_m_stkStack_set(long jarg1, btDbvt jarg1_, long jarg2);
  public final static native long btDbvt_m_stkStack_get(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_m_rayTestStack_set(long jarg1, btDbvt jarg1_, long jarg2);
  public final static native long btDbvt_m_rayTestStack_get(long jarg1, btDbvt jarg1_);
  public final static native long new_btDbvt();
  public final static native void delete_btDbvt(long jarg1);
  public final static native void btDbvt_clear(long jarg1, btDbvt jarg1_);
  public final static native boolean btDbvt_empty(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_optimizeBottomUp(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_optimizeTopDown__SWIG_0(long jarg1, btDbvt jarg1_, int jarg2);
  public final static native void btDbvt_optimizeTopDown__SWIG_1(long jarg1, btDbvt jarg1_);
  public final static native void btDbvt_optimizeIncremental(long jarg1, btDbvt jarg1_, int jarg2);
  public final static native long btDbvt_insert(long jarg1, btDbvt jarg1_, long jarg2, btDbvtAabbMm jarg2_, long jarg3);
  public final static native void btDbvt_update__SWIG_0(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, int jarg3);
  public final static native void btDbvt_update__SWIG_1(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native void btDbvt_update__SWIG_2(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_);
  public final static native boolean btDbvt_update__SWIG_3(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_, Vector3 jarg4, float jarg5);
  public final static native boolean btDbvt_update__SWIG_4(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_, Vector3 jarg4);
  public final static native boolean btDbvt_update__SWIG_5(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_, float jarg4);
  public final static native void btDbvt_remove(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native void btDbvt_write(long jarg1, btDbvt jarg1_, long jarg2);
  public final static native void btDbvt_clone__SWIG_0(long jarg1, btDbvt jarg1_, long jarg2, btDbvt jarg2_, long jarg3);
  public final static native void btDbvt_clone__SWIG_1(long jarg1, btDbvt jarg1_, long jarg2, btDbvt jarg2_);
  public final static native int btDbvt_maxdepth(long jarg1, btDbvtNode jarg1_);
  public final static native int btDbvt_countLeaves(long jarg1, btDbvtNode jarg1_);
  public final static native void btDbvt_extractLeaves(long jarg1, btDbvtNode jarg1_, long jarg2);
  public final static native void btDbvt_benchmark();
  public final static native void btDbvt_enumNodes(long jarg1, btDbvtNode jarg1_, long jarg2);
  public final static native void btDbvt_enumLeaves(long jarg1, btDbvtNode jarg1_, long jarg2);
  public final static native void btDbvt_collideTT(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtNode jarg3_, long jarg4);
  public final static native void btDbvt_collideTTpersistentStack(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtNode jarg3_, long jarg4);
  public final static native void btDbvt_collideTV(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, long jarg3, btDbvtAabbMm jarg3_, long jarg4);
  public final static native void btDbvt_rayTest(long jarg1, btDbvtNode jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4);
  public final static native void btDbvt_rayTestInternal(long jarg1, btDbvt jarg1_, long jarg2, btDbvtNode jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, long[] jarg6, float jarg7, Vector3 jarg8, Vector3 jarg9, long jarg10);
  public final static native void btDbvt_collideKDOP(long jarg1, btDbvtNode jarg1_, long jarg2, btVector3 jarg2_, java.nio.FloatBuffer jarg3, int jarg4, long jarg5);
  public final static native void btDbvt_collideOCL__SWIG_0(long jarg1, btDbvtNode jarg1_, long jarg2, btVector3 jarg2_, java.nio.FloatBuffer jarg3, Vector3 jarg4, int jarg5, long jarg6, boolean jarg7);
  public final static native void btDbvt_collideOCL__SWIG_1(long jarg1, btDbvtNode jarg1_, long jarg2, btVector3 jarg2_, java.nio.FloatBuffer jarg3, Vector3 jarg4, int jarg5, long jarg6);
  public final static native void btDbvt_collideTU(long jarg1, btDbvtNode jarg1_, long jarg2);
  public final static native int btDbvt_nearest(java.nio.IntBuffer jarg1, long jarg2, float jarg3, int jarg4, int jarg5);
  public final static native int btDbvt_allocate(long jarg1, long jarg2, long jarg3);
  public final static native void btQuantizedBvhNode_m_quantizedAabbMin_set(long jarg1, btQuantizedBvhNode jarg1_, int[] jarg2);
  public final static native int[] btQuantizedBvhNode_m_quantizedAabbMin_get(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native void btQuantizedBvhNode_m_quantizedAabbMax_set(long jarg1, btQuantizedBvhNode jarg1_, int[] jarg2);
  public final static native int[] btQuantizedBvhNode_m_quantizedAabbMax_get(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native void btQuantizedBvhNode_m_escapeIndexOrTriangleIndex_set(long jarg1, btQuantizedBvhNode jarg1_, int jarg2);
  public final static native int btQuantizedBvhNode_m_escapeIndexOrTriangleIndex_get(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native boolean btQuantizedBvhNode_isLeafNode(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native int btQuantizedBvhNode_getEscapeIndex(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native int btQuantizedBvhNode_getTriangleIndex(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native int btQuantizedBvhNode_getPartId(long jarg1, btQuantizedBvhNode jarg1_);
  public final static native long new_btQuantizedBvhNode();
  public final static native void delete_btQuantizedBvhNode(long jarg1);
  public final static native void btOptimizedBvhNode_m_aabbMinOrg_set(long jarg1, btOptimizedBvhNode jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btOptimizedBvhNode_m_aabbMinOrg_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_m_aabbMaxOrg_set(long jarg1, btOptimizedBvhNode jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btOptimizedBvhNode_m_aabbMaxOrg_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_m_escapeIndex_set(long jarg1, btOptimizedBvhNode jarg1_, int jarg2);
  public final static native int btOptimizedBvhNode_m_escapeIndex_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_m_subPart_set(long jarg1, btOptimizedBvhNode jarg1_, int jarg2);
  public final static native int btOptimizedBvhNode_m_subPart_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_m_triangleIndex_set(long jarg1, btOptimizedBvhNode jarg1_, int jarg2);
  public final static native int btOptimizedBvhNode_m_triangleIndex_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native void btOptimizedBvhNode_m_padding_set(long jarg1, btOptimizedBvhNode jarg1_, String jarg2);
  public final static native String btOptimizedBvhNode_m_padding_get(long jarg1, btOptimizedBvhNode jarg1_);
  public final static native long new_btOptimizedBvhNode();
  public final static native void delete_btOptimizedBvhNode(long jarg1);
  public final static native void btBvhSubtreeInfo_m_quantizedAabbMin_set(long jarg1, btBvhSubtreeInfo jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfo_m_quantizedAabbMin_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native void btBvhSubtreeInfo_m_quantizedAabbMax_set(long jarg1, btBvhSubtreeInfo jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfo_m_quantizedAabbMax_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native void btBvhSubtreeInfo_m_rootNodeIndex_set(long jarg1, btBvhSubtreeInfo jarg1_, int jarg2);
  public final static native int btBvhSubtreeInfo_m_rootNodeIndex_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native void btBvhSubtreeInfo_m_subtreeSize_set(long jarg1, btBvhSubtreeInfo jarg1_, int jarg2);
  public final static native int btBvhSubtreeInfo_m_subtreeSize_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native void btBvhSubtreeInfo_m_padding_set(long jarg1, btBvhSubtreeInfo jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfo_m_padding_get(long jarg1, btBvhSubtreeInfo jarg1_);
  public final static native long new_btBvhSubtreeInfo();
  public final static native void btBvhSubtreeInfo_setAabbFromQuantizeNode(long jarg1, btBvhSubtreeInfo jarg1_, long jarg2, btQuantizedBvhNode jarg2_);
  public final static native void delete_btBvhSubtreeInfo(long jarg1);
  public final static native void delete_btNodeOverlapCallback(long jarg1);
  public final static native void btNodeOverlapCallback_processNode(long jarg1, btNodeOverlapCallback jarg1_, int jarg2, int jarg3);
  public final static native long new_btQuantizedBvh();
  public final static native void delete_btQuantizedBvh(long jarg1);
  public final static native void btQuantizedBvh_setQuantizationValues__SWIG_0(long jarg1, btQuantizedBvh jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native void btQuantizedBvh_setQuantizationValues__SWIG_1(long jarg1, btQuantizedBvh jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native long btQuantizedBvh_getLeafNodeArray(long jarg1, btQuantizedBvh jarg1_);
  public final static native void btQuantizedBvh_buildInternal(long jarg1, btQuantizedBvh jarg1_);
  public final static native void btQuantizedBvh_reportAabbOverlappingNodex(long jarg1, btQuantizedBvh jarg1_, long jarg2, btNodeOverlapCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btQuantizedBvh_reportRayOverlappingNodex(long jarg1, btQuantizedBvh jarg1_, long jarg2, btNodeOverlapCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btQuantizedBvh_reportBoxCastOverlappingNodex(long jarg1, btQuantizedBvh jarg1_, long jarg2, btNodeOverlapCallback jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native void btQuantizedBvh_quantize(long jarg1, btQuantizedBvh jarg1_, java.nio.IntBuffer jarg2, Vector3 jarg3, int jarg4);
  public final static native void btQuantizedBvh_quantizeWithClamp(long jarg1, btQuantizedBvh jarg1_, java.nio.IntBuffer jarg2, Vector3 jarg3, int jarg4);
  public final static native Vector3 btQuantizedBvh_unQuantize(long jarg1, btQuantizedBvh jarg1_, java.nio.IntBuffer jarg2);
  public final static native void btQuantizedBvh_setTraversalMode(long jarg1, btQuantizedBvh jarg1_, int jarg2);
  public final static native long btQuantizedBvh_getQuantizedNodeArray(long jarg1, btQuantizedBvh jarg1_);
  public final static native long btQuantizedBvh_getSubtreeInfoArray(long jarg1, btQuantizedBvh jarg1_);
  public final static native long btQuantizedBvh_calculateSerializeBufferSize(long jarg1, btQuantizedBvh jarg1_);
  public final static native boolean btQuantizedBvh_serialize__SWIG_0(long jarg1, btQuantizedBvh jarg1_, long jarg2, long jarg3, boolean jarg4);
  public final static native long btQuantizedBvh_deSerializeInPlace(long jarg1, long jarg2, boolean jarg3);
  public final static native long btQuantizedBvh_getAlignmentSerializationPadding();
  public final static native int btQuantizedBvh_calculateSerializeBufferSizeNew(long jarg1, btQuantizedBvh jarg1_);
  public final static native String btQuantizedBvh_serialize__SWIG_1(long jarg1, btQuantizedBvh jarg1_, long jarg2, long jarg3);
  public final static native void btQuantizedBvh_deSerializeFloat(long jarg1, btQuantizedBvh jarg1_, long jarg2, btQuantizedBvhFloatData jarg2_);
  public final static native void btQuantizedBvh_deSerializeDouble(long jarg1, btQuantizedBvh jarg1_, long jarg2, btQuantizedBvhDoubleData jarg2_);
  public final static native boolean btQuantizedBvh_isQuantized(long jarg1, btQuantizedBvh jarg1_);
  public final static native void btBvhSubtreeInfoData_m_rootNodeIndex_set(long jarg1, btBvhSubtreeInfoData jarg1_, int jarg2);
  public final static native int btBvhSubtreeInfoData_m_rootNodeIndex_get(long jarg1, btBvhSubtreeInfoData jarg1_);
  public final static native void btBvhSubtreeInfoData_m_subtreeSize_set(long jarg1, btBvhSubtreeInfoData jarg1_, int jarg2);
  public final static native int btBvhSubtreeInfoData_m_subtreeSize_get(long jarg1, btBvhSubtreeInfoData jarg1_);
  public final static native void btBvhSubtreeInfoData_m_quantizedAabbMin_set(long jarg1, btBvhSubtreeInfoData jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfoData_m_quantizedAabbMin_get(long jarg1, btBvhSubtreeInfoData jarg1_);
  public final static native void btBvhSubtreeInfoData_m_quantizedAabbMax_set(long jarg1, btBvhSubtreeInfoData jarg1_, int[] jarg2);
  public final static native int[] btBvhSubtreeInfoData_m_quantizedAabbMax_get(long jarg1, btBvhSubtreeInfoData jarg1_);
  public final static native long new_btBvhSubtreeInfoData();
  public final static native void delete_btBvhSubtreeInfoData(long jarg1);
  public final static native void btOptimizedBvhNodeFloatData_m_aabbMinOrg_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btOptimizedBvhNodeFloatData_m_aabbMinOrg_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_m_aabbMaxOrg_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btOptimizedBvhNodeFloatData_m_aabbMaxOrg_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_m_escapeIndex_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeFloatData_m_escapeIndex_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_m_subPart_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeFloatData_m_subPart_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_m_triangleIndex_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeFloatData_m_triangleIndex_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native void btOptimizedBvhNodeFloatData_m_pad_set(long jarg1, btOptimizedBvhNodeFloatData jarg1_, String jarg2);
  public final static native String btOptimizedBvhNodeFloatData_m_pad_get(long jarg1, btOptimizedBvhNodeFloatData jarg1_);
  public final static native long new_btOptimizedBvhNodeFloatData();
  public final static native void delete_btOptimizedBvhNodeFloatData(long jarg1);
  public final static native void btOptimizedBvhNodeDoubleData_m_aabbMinOrg_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btOptimizedBvhNodeDoubleData_m_aabbMinOrg_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_m_aabbMaxOrg_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btOptimizedBvhNodeDoubleData_m_aabbMaxOrg_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_m_escapeIndex_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeDoubleData_m_escapeIndex_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_m_subPart_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeDoubleData_m_subPart_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_m_triangleIndex_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, int jarg2);
  public final static native int btOptimizedBvhNodeDoubleData_m_triangleIndex_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native void btOptimizedBvhNodeDoubleData_m_pad_set(long jarg1, btOptimizedBvhNodeDoubleData jarg1_, String jarg2);
  public final static native String btOptimizedBvhNodeDoubleData_m_pad_get(long jarg1, btOptimizedBvhNodeDoubleData jarg1_);
  public final static native long new_btOptimizedBvhNodeDoubleData();
  public final static native void delete_btOptimizedBvhNodeDoubleData(long jarg1);
  public final static native void btQuantizedBvhNodeData_m_quantizedAabbMin_set(long jarg1, btQuantizedBvhNodeData jarg1_, int[] jarg2);
  public final static native int[] btQuantizedBvhNodeData_m_quantizedAabbMin_get(long jarg1, btQuantizedBvhNodeData jarg1_);
  public final static native void btQuantizedBvhNodeData_m_quantizedAabbMax_set(long jarg1, btQuantizedBvhNodeData jarg1_, int[] jarg2);
  public final static native int[] btQuantizedBvhNodeData_m_quantizedAabbMax_get(long jarg1, btQuantizedBvhNodeData jarg1_);
  public final static native void btQuantizedBvhNodeData_m_escapeIndexOrTriangleIndex_set(long jarg1, btQuantizedBvhNodeData jarg1_, int jarg2);
  public final static native int btQuantizedBvhNodeData_m_escapeIndexOrTriangleIndex_get(long jarg1, btQuantizedBvhNodeData jarg1_);
  public final static native long new_btQuantizedBvhNodeData();
  public final static native void delete_btQuantizedBvhNodeData(long jarg1);
  public final static native void btQuantizedBvhFloatData_m_bvhAabbMin_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btQuantizedBvhFloatData_m_bvhAabbMin_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_bvhAabbMax_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btQuantizedBvhFloatData_m_bvhAabbMax_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_bvhQuantization_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btQuantizedBvhFloatData_m_bvhQuantization_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_curNodeIndex_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_m_curNodeIndex_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_useQuantization_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_m_useQuantization_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_numContiguousLeafNodes_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_m_numContiguousLeafNodes_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_contiguousNodesPtr_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btOptimizedBvhNodeFloatData jarg2_);
  public final static native long btQuantizedBvhFloatData_m_contiguousNodesPtr_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btQuantizedBvhNodeData jarg2_);
  public final static native long btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_subTreeInfoPtr_set(long jarg1, btQuantizedBvhFloatData jarg1_, long jarg2, btBvhSubtreeInfoData jarg2_);
  public final static native long btQuantizedBvhFloatData_m_subTreeInfoPtr_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_traversalMode_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_m_traversalMode_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native void btQuantizedBvhFloatData_m_numSubtreeHeaders_set(long jarg1, btQuantizedBvhFloatData jarg1_, int jarg2);
  public final static native int btQuantizedBvhFloatData_m_numSubtreeHeaders_get(long jarg1, btQuantizedBvhFloatData jarg1_);
  public final static native long new_btQuantizedBvhFloatData();
  public final static native void delete_btQuantizedBvhFloatData(long jarg1);
  public final static native void btQuantizedBvhDoubleData_m_bvhAabbMin_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btQuantizedBvhDoubleData_m_bvhAabbMin_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_bvhAabbMax_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btQuantizedBvhDoubleData_m_bvhAabbMax_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_bvhQuantization_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btQuantizedBvhDoubleData_m_bvhQuantization_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_curNodeIndex_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_m_curNodeIndex_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_useQuantization_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_m_useQuantization_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_numContiguousLeafNodes_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_m_numContiguousLeafNodes_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_contiguousNodesPtr_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btOptimizedBvhNodeDoubleData jarg2_);
  public final static native long btQuantizedBvhDoubleData_m_contiguousNodesPtr_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btQuantizedBvhNodeData jarg2_);
  public final static native long btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_traversalMode_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_m_traversalMode_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_numSubtreeHeaders_set(long jarg1, btQuantizedBvhDoubleData jarg1_, int jarg2);
  public final static native int btQuantizedBvhDoubleData_m_numSubtreeHeaders_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native void btQuantizedBvhDoubleData_m_subTreeInfoPtr_set(long jarg1, btQuantizedBvhDoubleData jarg1_, long jarg2, btBvhSubtreeInfoData jarg2_);
  public final static native long btQuantizedBvhDoubleData_m_subTreeInfoPtr_get(long jarg1, btQuantizedBvhDoubleData jarg1_);
  public final static native long new_btQuantizedBvhDoubleData();
  public final static native void delete_btQuantizedBvhDoubleData(long jarg1);
  public final static native void btDbvtProxy_leaf_set(long jarg1, btDbvtProxy jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btDbvtProxy_leaf_get(long jarg1, btDbvtProxy jarg1_);
  public final static native void btDbvtProxy_links_set(long jarg1, btDbvtProxy jarg1_, long jarg2);
  public final static native long btDbvtProxy_links_get(long jarg1, btDbvtProxy jarg1_);
  public final static native void btDbvtProxy_stage_set(long jarg1, btDbvtProxy jarg1_, int jarg2);
  public final static native int btDbvtProxy_stage_get(long jarg1, btDbvtProxy jarg1_);
  public final static native long new_btDbvtProxy(Vector3 jarg1, Vector3 jarg2, long jarg3, short jarg4, short jarg5);
  public final static native void delete_btDbvtProxy(long jarg1);
  public final static native void btDbvtBroadphase_m_sets_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btDbvt jarg2_);
  public final static native long btDbvtBroadphase_m_sets_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_stageRoots_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2);
  public final static native long btDbvtBroadphase_m_stageRoots_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_paircache_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btOverlappingPairCache jarg2_);
  public final static native long btDbvtBroadphase_m_paircache_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_prediction_set(long jarg1, btDbvtBroadphase jarg1_, float jarg2);
  public final static native float btDbvtBroadphase_m_prediction_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_stageCurrent_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_m_stageCurrent_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_fupdates_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_m_fupdates_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_dupdates_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_m_dupdates_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_cupdates_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_m_cupdates_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_newpairs_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_m_newpairs_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_fixedleft_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_m_fixedleft_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_updates_call_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2);
  public final static native long btDbvtBroadphase_m_updates_call_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_updates_done_set(long jarg1, btDbvtBroadphase jarg1_, long jarg2);
  public final static native long btDbvtBroadphase_m_updates_done_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_updates_ratio_set(long jarg1, btDbvtBroadphase jarg1_, float jarg2);
  public final static native float btDbvtBroadphase_m_updates_ratio_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_pid_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_m_pid_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_cid_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_m_cid_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_gid_set(long jarg1, btDbvtBroadphase jarg1_, int jarg2);
  public final static native int btDbvtBroadphase_m_gid_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_releasepaircache_set(long jarg1, btDbvtBroadphase jarg1_, boolean jarg2);
  public final static native boolean btDbvtBroadphase_m_releasepaircache_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_deferedcollide_set(long jarg1, btDbvtBroadphase jarg1_, boolean jarg2);
  public final static native boolean btDbvtBroadphase_m_deferedcollide_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_m_needcleanup_set(long jarg1, btDbvtBroadphase jarg1_, boolean jarg2);
  public final static native boolean btDbvtBroadphase_m_needcleanup_get(long jarg1, btDbvtBroadphase jarg1_);
  public final static native long new_btDbvtBroadphase__SWIG_0(long jarg1, btOverlappingPairCache jarg1_);
  public final static native long new_btDbvtBroadphase__SWIG_1();
  public final static native void delete_btDbvtBroadphase(long jarg1);
  public final static native void btDbvtBroadphase_collide(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native void btDbvtBroadphase_optimize(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_rayTest__SWIG_0(long jarg1, btDbvtBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btDbvtBroadphase_rayTest__SWIG_1(long jarg1, btDbvtBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btDbvtBroadphase_rayTest__SWIG_2(long jarg1, btDbvtBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native long btDbvtBroadphase_getOverlappingPairCache__SWIG_0(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_performDeferredRemoval(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native void btDbvtBroadphase_setVelocityPrediction(long jarg1, btDbvtBroadphase jarg1_, float jarg2);
  public final static native float btDbvtBroadphase_getVelocityPrediction(long jarg1, btDbvtBroadphase jarg1_);
  public final static native void btDbvtBroadphase_setAabbForceUpdate(long jarg1, btDbvtBroadphase jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4, long jarg5, btDispatcher jarg5_);
  public final static native void btDbvtBroadphase_benchmark(long jarg1, btBroadphaseInterface jarg1_);
  public final static native void btSimpleBroadphaseProxy_m_nextFree_set(long jarg1, btSimpleBroadphaseProxy jarg1_, int jarg2);
  public final static native int btSimpleBroadphaseProxy_m_nextFree_get(long jarg1, btSimpleBroadphaseProxy jarg1_);
  public final static native long new_btSimpleBroadphaseProxy__SWIG_0();
  public final static native long new_btSimpleBroadphaseProxy__SWIG_1(Vector3 jarg1, Vector3 jarg2, int jarg3, long jarg4, short jarg5, short jarg6, long jarg7);
  public final static native void btSimpleBroadphaseProxy_SetNextFree(long jarg1, btSimpleBroadphaseProxy jarg1_, int jarg2);
  public final static native int btSimpleBroadphaseProxy_GetNextFree(long jarg1, btSimpleBroadphaseProxy jarg1_);
  public final static native void delete_btSimpleBroadphaseProxy(long jarg1);
  public final static native long new_btSimpleBroadphase__SWIG_0(int jarg1, long jarg2, btOverlappingPairCache jarg2_);
  public final static native long new_btSimpleBroadphase__SWIG_1(int jarg1);
  public final static native long new_btSimpleBroadphase__SWIG_2();
  public final static native void delete_btSimpleBroadphase(long jarg1);
  public final static native boolean btSimpleBroadphase_aabbOverlap(long jarg1, btSimpleBroadphaseProxy jarg1_, long jarg2, btSimpleBroadphaseProxy jarg2_);
  public final static native void btSimpleBroadphase_rayTest__SWIG_0(long jarg1, btSimpleBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btSimpleBroadphase_rayTest__SWIG_1(long jarg1, btSimpleBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btSimpleBroadphase_rayTest__SWIG_2(long jarg1, btSimpleBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native long btSimpleBroadphase_getOverlappingPairCache__SWIG_0(long jarg1, btSimpleBroadphase jarg1_);
  public final static native boolean btSimpleBroadphase_testAabbOverlap(long jarg1, btSimpleBroadphase jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btMultiSapBroadphase_getBroadphaseArray__SWIG_0(long jarg1, btMultiSapBroadphase jarg1_);
  public final static native void delete_btMultiSapBroadphase(long jarg1);
  public final static native void btMultiSapBroadphase_rayTest__SWIG_0(long jarg1, btMultiSapBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btMultiSapBroadphase_rayTest__SWIG_1(long jarg1, btMultiSapBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btMultiSapBroadphase_rayTest__SWIG_2(long jarg1, btMultiSapBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native void btMultiSapBroadphase_addToChildBroadphase(long jarg1, btMultiSapBroadphase jarg1_, long jarg2, long jarg3, btBroadphaseProxy jarg3_, long jarg4, btBroadphaseInterface jarg4_);
  public final static native boolean btMultiSapBroadphase_testAabbOverlap(long jarg1, btMultiSapBroadphase jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btMultiSapBroadphase_getOverlappingPairCache__SWIG_0(long jarg1, btMultiSapBroadphase jarg1_);
  public final static native void btMultiSapBroadphase_buildTree(long jarg1, btMultiSapBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btMultiSapBroadphase_quicksort(long jarg1, btMultiSapBroadphase jarg1_, long jarg2, btBroadphasePairArray jarg2_, int jarg3, int jarg4);
  public final static native long new_btCollisionAlgorithmConstructionInfo__SWIG_0();
  public final static native long new_btCollisionAlgorithmConstructionInfo__SWIG_1(long jarg1, btDispatcher jarg1_, int jarg2);
  public final static native void btCollisionAlgorithmConstructionInfo_m_dispatcher1_set(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native long btCollisionAlgorithmConstructionInfo_m_dispatcher1_get(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native void btCollisionAlgorithmConstructionInfo_m_manifold_set(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native long btCollisionAlgorithmConstructionInfo_m_manifold_get(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native void delete_btCollisionAlgorithmConstructionInfo(long jarg1);
  public final static native void delete_btCollisionAlgorithm(long jarg1);
  public final static native void btCollisionAlgorithm_processCollision(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
  public final static native float btCollisionAlgorithm_calculateTimeOfImpact(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
  public final static native void btCollisionAlgorithm_getAllContactManifolds(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btManifoldArray jarg2_);
  public final static native void delete_btOverlappingPairCallback(long jarg1);
  public final static native long btOverlappingPairCallback_addOverlappingPair(long jarg1, btOverlappingPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btOverlappingPairCallback_removeOverlappingPair(long jarg1, btOverlappingPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_, long jarg4, btDispatcher jarg4_);
  public final static native void btOverlappingPairCallback_removeOverlappingPairsContainingProxy(long jarg1, btOverlappingPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native void gOverlappingPairs_set(int jarg1);
  public final static native int gOverlappingPairs_get();
  public final static native long new_btAxisSweep3InternalShort__SWIG_0(Vector3 jarg1, Vector3 jarg2, int jarg3, int jarg4, int jarg5, long jarg6, btOverlappingPairCache jarg6_, boolean jarg7);
  public final static native long new_btAxisSweep3InternalShort__SWIG_1(Vector3 jarg1, Vector3 jarg2, int jarg3, int jarg4, int jarg5, long jarg6, btOverlappingPairCache jarg6_);
  public final static native long new_btAxisSweep3InternalShort__SWIG_2(Vector3 jarg1, Vector3 jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long new_btAxisSweep3InternalShort__SWIG_3(Vector3 jarg1, Vector3 jarg2, int jarg3, int jarg4);
  public final static native void delete_btAxisSweep3InternalShort(long jarg1);
  public final static native int btAxisSweep3InternalShort_getNumHandles(long jarg1, btAxisSweep3InternalShort jarg1_);
  public final static native int btAxisSweep3InternalShort_addHandle(long jarg1, btAxisSweep3InternalShort jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, short jarg5, short jarg6, long jarg7, btDispatcher jarg7_, long jarg8);
  public final static native void btAxisSweep3InternalShort_removeHandle(long jarg1, btAxisSweep3InternalShort jarg1_, int jarg2, long jarg3, btDispatcher jarg3_);
  public final static native void btAxisSweep3InternalShort_updateHandle(long jarg1, btAxisSweep3InternalShort jarg1_, int jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, btDispatcher jarg5_);
  public final static native long btAxisSweep3InternalShort_getHandle(long jarg1, btAxisSweep3InternalShort jarg1_, int jarg2);
  public final static native void btAxisSweep3InternalShort_rayTest__SWIG_0(long jarg1, btAxisSweep3InternalShort jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btAxisSweep3InternalShort_rayTest__SWIG_1(long jarg1, btAxisSweep3InternalShort jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btAxisSweep3InternalShort_rayTest__SWIG_2(long jarg1, btAxisSweep3InternalShort jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native void btAxisSweep3InternalShort_quantize(long jarg1, btAxisSweep3InternalShort jarg1_, java.nio.IntBuffer jarg2, Vector3 jarg3, int jarg4);
  public final static native void btAxisSweep3InternalShort_unQuantize(long jarg1, btAxisSweep3InternalShort jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native boolean btAxisSweep3InternalShort_testAabbOverlap(long jarg1, btAxisSweep3InternalShort jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btAxisSweep3InternalShort_getOverlappingPairCache__SWIG_0(long jarg1, btAxisSweep3InternalShort jarg1_);
  public final static native void btAxisSweep3InternalShort_setOverlappingPairUserCallback(long jarg1, btAxisSweep3InternalShort jarg1_, long jarg2, btOverlappingPairCallback jarg2_);
  public final static native long btAxisSweep3InternalShort_getOverlappingPairUserCallback(long jarg1, btAxisSweep3InternalShort jarg1_);
  public final static native long new_btAxisSweep3InternalInt__SWIG_0(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, long jarg5, long jarg6, btOverlappingPairCache jarg6_, boolean jarg7);
  public final static native long new_btAxisSweep3InternalInt__SWIG_1(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, long jarg5, long jarg6, btOverlappingPairCache jarg6_);
  public final static native long new_btAxisSweep3InternalInt__SWIG_2(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long new_btAxisSweep3InternalInt__SWIG_3(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4);
  public final static native void delete_btAxisSweep3InternalInt(long jarg1);
  public final static native long btAxisSweep3InternalInt_getNumHandles(long jarg1, btAxisSweep3InternalInt jarg1_);
  public final static native long btAxisSweep3InternalInt_addHandle(long jarg1, btAxisSweep3InternalInt jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, short jarg5, short jarg6, long jarg7, btDispatcher jarg7_, long jarg8);
  public final static native void btAxisSweep3InternalInt_removeHandle(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, long jarg3, btDispatcher jarg3_);
  public final static native void btAxisSweep3InternalInt_updateHandle(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, btDispatcher jarg5_);
  public final static native long btAxisSweep3InternalInt_getHandle(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2);
  public final static native void btAxisSweep3InternalInt_rayTest__SWIG_0(long jarg1, btAxisSweep3InternalInt jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5, Vector3 jarg6);
  public final static native void btAxisSweep3InternalInt_rayTest__SWIG_1(long jarg1, btAxisSweep3InternalInt jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_, Vector3 jarg5);
  public final static native void btAxisSweep3InternalInt_rayTest__SWIG_2(long jarg1, btAxisSweep3InternalInt jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, btBroadphaseRayCallback jarg4_);
  public final static native void btAxisSweep3InternalInt_quantize(long jarg1, btAxisSweep3InternalInt jarg1_, java.nio.LongBuffer jarg2, Vector3 jarg3, int jarg4);
  public final static native void btAxisSweep3InternalInt_unQuantize(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, btBroadphaseProxy jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native boolean btAxisSweep3InternalInt_testAabbOverlap(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btAxisSweep3InternalInt_getOverlappingPairCache__SWIG_0(long jarg1, btAxisSweep3InternalInt jarg1_);
  public final static native void btAxisSweep3InternalInt_setOverlappingPairUserCallback(long jarg1, btAxisSweep3InternalInt jarg1_, long jarg2, btOverlappingPairCallback jarg2_);
  public final static native long btAxisSweep3InternalInt_getOverlappingPairUserCallback(long jarg1, btAxisSweep3InternalInt jarg1_);
  public final static native long new_btAxisSweep3__SWIG_0(Vector3 jarg1, Vector3 jarg2, int jarg3, long jarg4, btOverlappingPairCache jarg4_, boolean jarg5);
  public final static native long new_btAxisSweep3__SWIG_1(Vector3 jarg1, Vector3 jarg2, int jarg3, long jarg4, btOverlappingPairCache jarg4_);
  public final static native long new_btAxisSweep3__SWIG_2(Vector3 jarg1, Vector3 jarg2, int jarg3);
  public final static native long new_btAxisSweep3__SWIG_3(Vector3 jarg1, Vector3 jarg2);
  public final static native void delete_btAxisSweep3(long jarg1);
  public final static native long new_bt32BitAxisSweep3__SWIG_0(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, btOverlappingPairCache jarg4_, boolean jarg5);
  public final static native long new_bt32BitAxisSweep3__SWIG_1(Vector3 jarg1, Vector3 jarg2, long jarg3, long jarg4, btOverlappingPairCache jarg4_);
  public final static native long new_bt32BitAxisSweep3__SWIG_2(Vector3 jarg1, Vector3 jarg2, long jarg3);
  public final static native long new_bt32BitAxisSweep3__SWIG_3(Vector3 jarg1, Vector3 jarg2);
  public final static native void delete_bt32BitAxisSweep3(long jarg1);
  public final static native long new_btDispatcherInfo();
  public final static native void btDispatcherInfo_m_timeStep_set(long jarg1, btDispatcherInfo jarg1_, float jarg2);
  public final static native float btDispatcherInfo_m_timeStep_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_stepCount_set(long jarg1, btDispatcherInfo jarg1_, int jarg2);
  public final static native int btDispatcherInfo_m_stepCount_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_dispatchFunc_set(long jarg1, btDispatcherInfo jarg1_, int jarg2);
  public final static native int btDispatcherInfo_m_dispatchFunc_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_timeOfImpact_set(long jarg1, btDispatcherInfo jarg1_, float jarg2);
  public final static native float btDispatcherInfo_m_timeOfImpact_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_useContinuous_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_m_useContinuous_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_debugDraw_set(long jarg1, btDispatcherInfo jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native long btDispatcherInfo_m_debugDraw_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_enableSatConvex_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_m_enableSatConvex_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_enableSPU_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_m_enableSPU_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_useEpa_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_m_useEpa_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_allowedCcdPenetration_set(long jarg1, btDispatcherInfo jarg1_, float jarg2);
  public final static native float btDispatcherInfo_m_allowedCcdPenetration_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_useConvexConservativeDistanceUtil_set(long jarg1, btDispatcherInfo jarg1_, boolean jarg2);
  public final static native boolean btDispatcherInfo_m_useConvexConservativeDistanceUtil_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_convexConservativeDistanceThreshold_set(long jarg1, btDispatcherInfo jarg1_, float jarg2);
  public final static native float btDispatcherInfo_m_convexConservativeDistanceThreshold_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void btDispatcherInfo_m_stackAllocator_set(long jarg1, btDispatcherInfo jarg1_, long jarg2, btStackAlloc jarg2_);
  public final static native long btDispatcherInfo_m_stackAllocator_get(long jarg1, btDispatcherInfo jarg1_);
  public final static native void delete_btDispatcherInfo(long jarg1);
  public final static native void delete_btDispatcher(long jarg1);
  public final static native long btDispatcher_findAlgorithm__SWIG_0(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btPersistentManifold jarg4_);
  public final static native long btDispatcher_findAlgorithm__SWIG_1(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
  public final static native long btDispatcher_getNewManifold(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void btDispatcher_releaseManifold(long jarg1, btDispatcher jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native void btDispatcher_clearManifold(long jarg1, btDispatcher jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native boolean btDispatcher_needsCollision(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native boolean btDispatcher_needsResponse(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void btDispatcher_dispatchAllCollisionPairs(long jarg1, btDispatcher jarg1_, long jarg2, btOverlappingPairCache jarg2_, long jarg3, btDispatcherInfo jarg3_, long jarg4, btDispatcher jarg4_);
  public final static native int btDispatcher_getNumManifolds(long jarg1, btDispatcher jarg1_);
  public final static native long btDispatcher_getManifoldByIndexInternal(long jarg1, btDispatcher jarg1_, int jarg2);
  public final static native long btDispatcher_getInternalManifoldPointer(long jarg1, btDispatcher jarg1_);
  public final static native long btDispatcher_getInternalManifoldPool__SWIG_0(long jarg1, btDispatcher jarg1_);
  public final static native long btDispatcher_allocateCollisionAlgorithm(long jarg1, btDispatcher jarg1_, int jarg2);
  public final static native void btDispatcher_freeCollisionAlgorithm(long jarg1, btDispatcher jarg1_, long jarg2);
  public final static native void delete_btOverlapCallback(long jarg1);
  public final static native boolean btOverlapCallback_processOverlap(long jarg1, btOverlapCallback jarg1_, long jarg2, btBroadphasePair jarg2_);
  public final static native void delete_btOverlapFilterCallback(long jarg1);
  public final static native boolean btOverlapFilterCallback_needBroadphaseCollision(long jarg1, btOverlapFilterCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native void gRemovePairs_set(int jarg1);
  public final static native int gRemovePairs_get();
  public final static native void gAddedPairs_set(int jarg1);
  public final static native int gAddedPairs_get();
  public final static native void gFindPairs_set(int jarg1);
  public final static native int gFindPairs_get();
  public final static native int BT_NULL_PAIR_get();
  public final static native void delete_btOverlappingPairCache(long jarg1);
  public final static native long btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long jarg1, btOverlappingPairCache jarg1_);
  public final static native long btOverlappingPairCache_getOverlappingPairArray(long jarg1, btOverlappingPairCache jarg1_);
  public final static native void btOverlappingPairCache_cleanOverlappingPair(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btBroadphasePair jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native int btOverlappingPairCache_getNumOverlappingPairs(long jarg1, btOverlappingPairCache jarg1_);
  public final static native void btOverlappingPairCache_cleanProxyFromPairs(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native void btOverlappingPairCache_setOverlapFilterCallback(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btOverlapFilterCallback jarg2_);
  public final static native void btOverlappingPairCache_processAllOverlappingPairs(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btOverlapCallback jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native long btOverlappingPairCache_findPair(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native boolean btOverlappingPairCache_hasDeferredRemoval(long jarg1, btOverlappingPairCache jarg1_);
  public final static native void btOverlappingPairCache_setInternalGhostPairCallback(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btOverlappingPairCallback jarg2_);
  public final static native void btOverlappingPairCache_sortOverlappingPairs(long jarg1, btOverlappingPairCache jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native long new_btHashedOverlappingPairCache();
  public final static native void delete_btHashedOverlappingPairCache(long jarg1);
  public final static native boolean btHashedOverlappingPairCache_needsBroadphaseCollision(long jarg1, btHashedOverlappingPairCache jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long jarg1, btHashedOverlappingPairCache jarg1_);
  public final static native long btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0(long jarg1, btHashedOverlappingPairCache jarg1_);
  public final static native int btHashedOverlappingPairCache_GetCount(long jarg1, btHashedOverlappingPairCache jarg1_);
  public final static native long btHashedOverlappingPairCache_getOverlapFilterCallback(long jarg1, btHashedOverlappingPairCache jarg1_);
  public final static native long new_btSortedOverlappingPairCache();
  public final static native void delete_btSortedOverlappingPairCache(long jarg1);
  public final static native boolean btSortedOverlappingPairCache_needsBroadphaseCollision(long jarg1, btSortedOverlappingPairCache jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native long btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0(long jarg1, btSortedOverlappingPairCache jarg1_);
  public final static native long btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long jarg1, btSortedOverlappingPairCache jarg1_);
  public final static native long btSortedOverlappingPairCache_getOverlapFilterCallback(long jarg1, btSortedOverlappingPairCache jarg1_);
  public final static native long btNullPairCache_getOverlappingPairArrayPtr__SWIG_0(long jarg1, btNullPairCache jarg1_);
  public final static native long new_btNullPairCache();
  public final static native void delete_btNullPairCache(long jarg1);
  public final static native void delete_btCollisionShape(long jarg1);
  public final static native void btCollisionShape_getAabb(long jarg1, btCollisionShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btCollisionShape_getBoundingSphere(long jarg1, btCollisionShape jarg1_, Vector3 jarg2, long jarg3);
  public final static native float btCollisionShape_getAngularMotionDisc(long jarg1, btCollisionShape jarg1_);
  public final static native float btCollisionShape_getContactBreakingThreshold(long jarg1, btCollisionShape jarg1_, float jarg2);
  public final static native void btCollisionShape_calculateTemporalAabb(long jarg1, btCollisionShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4, float jarg5, Vector3 jarg6, Vector3 jarg7);
  public final static native boolean btCollisionShape_isPolyhedral(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isConvex2d(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isConvex(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isNonMoving(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isConcave(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isCompound(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isSoftBody(long jarg1, btCollisionShape jarg1_);
  public final static native boolean btCollisionShape_isInfinite(long jarg1, btCollisionShape jarg1_);
  public final static native void btCollisionShape_setLocalScaling(long jarg1, btCollisionShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btCollisionShape_getLocalScaling(long jarg1, btCollisionShape jarg1_);
  public final static native void btCollisionShape_calculateLocalInertia(long jarg1, btCollisionShape jarg1_, float jarg2, Vector3 jarg3);
  public final static native String btCollisionShape_getName(long jarg1, btCollisionShape jarg1_);
  public final static native int btCollisionShape_getShapeType(long jarg1, btCollisionShape jarg1_);
  public final static native Vector3 btCollisionShape_getAnisotropicRollingFrictionDirection(long jarg1, btCollisionShape jarg1_);
  public final static native void btCollisionShape_setMargin(long jarg1, btCollisionShape jarg1_, float jarg2);
  public final static native float btCollisionShape_getMargin(long jarg1, btCollisionShape jarg1_);
  public final static native void btCollisionShape_setUserPointer(long jarg1, btCollisionShape jarg1_, long jarg2);
  public final static native long btCollisionShape_getUserPointer(long jarg1, btCollisionShape jarg1_);
  public final static native int btCollisionShape_calculateSerializeBufferSize(long jarg1, btCollisionShape jarg1_);
  public final static native String btCollisionShape_serialize(long jarg1, btCollisionShape jarg1_, long jarg2, long jarg3);
  public final static native void btCollisionShape_serializeSingleShape(long jarg1, btCollisionShape jarg1_, long jarg2);
  public final static native void btCollisionShapeData_m_name_set(long jarg1, btCollisionShapeData jarg1_, String jarg2);
  public final static native String btCollisionShapeData_m_name_get(long jarg1, btCollisionShapeData jarg1_);
  public final static native void btCollisionShapeData_m_shapeType_set(long jarg1, btCollisionShapeData jarg1_, int jarg2);
  public final static native int btCollisionShapeData_m_shapeType_get(long jarg1, btCollisionShapeData jarg1_);
  public final static native void btCollisionShapeData_m_padding_set(long jarg1, btCollisionShapeData jarg1_, String jarg2);
  public final static native String btCollisionShapeData_m_padding_get(long jarg1, btCollisionShapeData jarg1_);
  public final static native long new_btCollisionShapeData();
  public final static native void delete_btCollisionShapeData(long jarg1);
  public final static native void delete_btConvexShape(long jarg1);
  public final static native Vector3 btConvexShape_localGetSupportingVertex(long jarg1, btConvexShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btConvexShape_localGetSupportingVertexWithoutMargin(long jarg1, btConvexShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btConvexShape_localGetSupportVertexWithoutMarginNonVirtual(long jarg1, btConvexShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btConvexShape_localGetSupportVertexNonVirtual(long jarg1, btConvexShape jarg1_, Vector3 jarg2);
  public final static native float btConvexShape_getMarginNonVirtual(long jarg1, btConvexShape jarg1_);
  public final static native void btConvexShape_getAabbNonVirtual(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btConvexShape_project(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Vector3 jarg3, long jarg4, long jarg5);
  public final static native void btConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin(long jarg1, btConvexShape jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, int jarg4);
  public final static native void btConvexShape_getAabbSlow(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native int btConvexShape_getNumPreferredPenetrationDirections(long jarg1, btConvexShape jarg1_);
  public final static native void btConvexShape_getPreferredPenetrationDirection(long jarg1, btConvexShape jarg1_, int jarg2, Vector3 jarg3);
  public final static native void delete_btConvexInternalShape(long jarg1);
  public final static native Vector3 btConvexInternalShape_getImplicitShapeDimensions(long jarg1, btConvexInternalShape jarg1_);
  public final static native void btConvexInternalShape_setImplicitShapeDimensions(long jarg1, btConvexInternalShape jarg1_, Vector3 jarg2);
  public final static native void btConvexInternalShape_setSafeMargin__SWIG_0(long jarg1, btConvexInternalShape jarg1_, float jarg2, float jarg3);
  public final static native void btConvexInternalShape_setSafeMargin__SWIG_1(long jarg1, btConvexInternalShape jarg1_, float jarg2);
  public final static native void btConvexInternalShape_setSafeMargin__SWIG_2(long jarg1, btConvexInternalShape jarg1_, Vector3 jarg2, float jarg3);
  public final static native void btConvexInternalShape_setSafeMargin__SWIG_3(long jarg1, btConvexInternalShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btConvexInternalShape_getLocalScalingNV(long jarg1, btConvexInternalShape jarg1_);
  public final static native float btConvexInternalShape_getMarginNV(long jarg1, btConvexInternalShape jarg1_);
  public final static native void btConvexInternalShapeData_m_collisionShapeData_set(long jarg1, btConvexInternalShapeData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btConvexInternalShapeData_m_collisionShapeData_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native void btConvexInternalShapeData_m_localScaling_set(long jarg1, btConvexInternalShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btConvexInternalShapeData_m_localScaling_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native void btConvexInternalShapeData_m_implicitShapeDimensions_set(long jarg1, btConvexInternalShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btConvexInternalShapeData_m_implicitShapeDimensions_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native void btConvexInternalShapeData_m_collisionMargin_set(long jarg1, btConvexInternalShapeData jarg1_, float jarg2);
  public final static native float btConvexInternalShapeData_m_collisionMargin_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native void btConvexInternalShapeData_m_padding_set(long jarg1, btConvexInternalShapeData jarg1_, int jarg2);
  public final static native int btConvexInternalShapeData_m_padding_get(long jarg1, btConvexInternalShapeData jarg1_);
  public final static native long new_btConvexInternalShapeData();
  public final static native void delete_btConvexInternalShapeData(long jarg1);
  public final static native void btConvexInternalAabbCachingShape_recalcLocalAabb(long jarg1, btConvexInternalAabbCachingShape jarg1_);
  public final static native void delete_btConvexInternalAabbCachingShape(long jarg1);
  public final static native void delete_btPolyhedralConvexShape(long jarg1);
  public final static native boolean btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_0(long jarg1, btPolyhedralConvexShape jarg1_, int jarg2);
  public final static native boolean btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_1(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native long btPolyhedralConvexShape_getConvexPolyhedron(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native int btPolyhedralConvexShape_getNumVertices(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native int btPolyhedralConvexShape_getNumEdges(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native void btPolyhedralConvexShape_getEdge(long jarg1, btPolyhedralConvexShape jarg1_, int jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btPolyhedralConvexShape_getVertex(long jarg1, btPolyhedralConvexShape jarg1_, int jarg2, Vector3 jarg3);
  public final static native int btPolyhedralConvexShape_getNumPlanes(long jarg1, btPolyhedralConvexShape jarg1_);
  public final static native void btPolyhedralConvexShape_getPlane(long jarg1, btPolyhedralConvexShape jarg1_, Vector3 jarg2, Vector3 jarg3, int jarg4);
  public final static native boolean btPolyhedralConvexShape_isInside(long jarg1, btPolyhedralConvexShape jarg1_, Vector3 jarg2, float jarg3);
  public final static native void btPolyhedralConvexAabbCachingShape_getNonvirtualAabb(long jarg1, btPolyhedralConvexAabbCachingShape jarg1_, Matrix4 jarg2, Vector3 jarg3, Vector3 jarg4, float jarg5);
  public final static native void btPolyhedralConvexAabbCachingShape_recalcLocalAabb(long jarg1, btPolyhedralConvexAabbCachingShape jarg1_);
  public final static native void delete_btPolyhedralConvexAabbCachingShape(long jarg1);
  public final static native void delete_btConcaveShape(long jarg1);
  public final static native void btConcaveShape_processAllTriangles(long jarg1, btConcaveShape jarg1_, long jarg2, btTriangleCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void delete_btTriangleCallback(long jarg1);
  public final static native void btTriangleCallback_processTriangle(long jarg1, btTriangleCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native void delete_btInternalTriangleIndexCallback(long jarg1);
  public final static native void btInternalTriangleIndexCallback_internalProcessTriangleIndex(long jarg1, btInternalTriangleIndexCallback jarg1_, long jarg2, btVector3 jarg2_, int jarg3, int jarg4);
  public final static native long new_btTriangleInfo();
  public final static native void btTriangleInfo_m_flags_set(long jarg1, btTriangleInfo jarg1_, int jarg2);
  public final static native int btTriangleInfo_m_flags_get(long jarg1, btTriangleInfo jarg1_);
  public final static native void btTriangleInfo_m_edgeV0V1Angle_set(long jarg1, btTriangleInfo jarg1_, float jarg2);
  public final static native float btTriangleInfo_m_edgeV0V1Angle_get(long jarg1, btTriangleInfo jarg1_);
  public final static native void btTriangleInfo_m_edgeV1V2Angle_set(long jarg1, btTriangleInfo jarg1_, float jarg2);
  public final static native float btTriangleInfo_m_edgeV1V2Angle_get(long jarg1, btTriangleInfo jarg1_);
  public final static native void btTriangleInfo_m_edgeV2V0Angle_set(long jarg1, btTriangleInfo jarg1_, float jarg2);
  public final static native float btTriangleInfo_m_edgeV2V0Angle_get(long jarg1, btTriangleInfo jarg1_);
  public final static native void delete_btTriangleInfo(long jarg1);
  public final static native void btTriangleInfoMap_m_convexEpsilon_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_m_convexEpsilon_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_m_planarEpsilon_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_m_planarEpsilon_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_m_equalVertexThreshold_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_m_equalVertexThreshold_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_m_edgeDistanceThreshold_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_m_edgeDistanceThreshold_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_m_maxEdgeAngleThreshold_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_m_maxEdgeAngleThreshold_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native void btTriangleInfoMap_m_zeroAreaThreshold_set(long jarg1, btTriangleInfoMap jarg1_, float jarg2);
  public final static native float btTriangleInfoMap_m_zeroAreaThreshold_get(long jarg1, btTriangleInfoMap jarg1_);
  public final static native long new_btTriangleInfoMap();
  public final static native void delete_btTriangleInfoMap(long jarg1);
  public final static native int btTriangleInfoMap_calculateSerializeBufferSize(long jarg1, btTriangleInfoMap jarg1_);
  public final static native String btTriangleInfoMap_serialize(long jarg1, btTriangleInfoMap jarg1_, long jarg2, long jarg3);
  public final static native void btTriangleInfoMap_deSerialize(long jarg1, btTriangleInfoMap jarg1_, long jarg2, btTriangleInfoMapData jarg2_);
  public final static native void btTriangleInfoData_m_flags_set(long jarg1, btTriangleInfoData jarg1_, int jarg2);
  public final static native int btTriangleInfoData_m_flags_get(long jarg1, btTriangleInfoData jarg1_);
  public final static native void btTriangleInfoData_m_edgeV0V1Angle_set(long jarg1, btTriangleInfoData jarg1_, float jarg2);
  public final static native float btTriangleInfoData_m_edgeV0V1Angle_get(long jarg1, btTriangleInfoData jarg1_);
  public final static native void btTriangleInfoData_m_edgeV1V2Angle_set(long jarg1, btTriangleInfoData jarg1_, float jarg2);
  public final static native float btTriangleInfoData_m_edgeV1V2Angle_get(long jarg1, btTriangleInfoData jarg1_);
  public final static native void btTriangleInfoData_m_edgeV2V0Angle_set(long jarg1, btTriangleInfoData jarg1_, float jarg2);
  public final static native float btTriangleInfoData_m_edgeV2V0Angle_get(long jarg1, btTriangleInfoData jarg1_);
  public final static native long new_btTriangleInfoData();
  public final static native void delete_btTriangleInfoData(long jarg1);
  public final static native void btTriangleInfoMapData_m_hashTablePtr_set(long jarg1, btTriangleInfoMapData jarg1_, java.nio.IntBuffer jarg2);
  public final static native java.nio.IntBuffer btTriangleInfoMapData_m_hashTablePtr_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_nextPtr_set(long jarg1, btTriangleInfoMapData jarg1_, java.nio.IntBuffer jarg2);
  public final static native java.nio.IntBuffer btTriangleInfoMapData_m_nextPtr_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_valueArrayPtr_set(long jarg1, btTriangleInfoMapData jarg1_, long jarg2, btTriangleInfoData jarg2_);
  public final static native long btTriangleInfoMapData_m_valueArrayPtr_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_keyArrayPtr_set(long jarg1, btTriangleInfoMapData jarg1_, java.nio.IntBuffer jarg2);
  public final static native java.nio.IntBuffer btTriangleInfoMapData_m_keyArrayPtr_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_convexEpsilon_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_m_convexEpsilon_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_planarEpsilon_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_m_planarEpsilon_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_equalVertexThreshold_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_m_equalVertexThreshold_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_edgeDistanceThreshold_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_m_edgeDistanceThreshold_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_zeroAreaThreshold_set(long jarg1, btTriangleInfoMapData jarg1_, float jarg2);
  public final static native float btTriangleInfoMapData_m_zeroAreaThreshold_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_nextSize_set(long jarg1, btTriangleInfoMapData jarg1_, int jarg2);
  public final static native int btTriangleInfoMapData_m_nextSize_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_hashTableSize_set(long jarg1, btTriangleInfoMapData jarg1_, int jarg2);
  public final static native int btTriangleInfoMapData_m_hashTableSize_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_numValues_set(long jarg1, btTriangleInfoMapData jarg1_, int jarg2);
  public final static native int btTriangleInfoMapData_m_numValues_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_numKeys_set(long jarg1, btTriangleInfoMapData jarg1_, int jarg2);
  public final static native int btTriangleInfoMapData_m_numKeys_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native void btTriangleInfoMapData_m_padding_set(long jarg1, btTriangleInfoMapData jarg1_, String jarg2);
  public final static native String btTriangleInfoMapData_m_padding_get(long jarg1, btTriangleInfoMapData jarg1_);
  public final static native long new_btTriangleInfoMapData();
  public final static native void delete_btTriangleInfoMapData(long jarg1);
  public final static native long new_btStaticPlaneShape(Vector3 jarg1, float jarg2);
  public final static native void delete_btStaticPlaneShape(long jarg1);
  public final static native Vector3 btStaticPlaneShape_getPlaneNormal(long jarg1, btStaticPlaneShape jarg1_);
  public final static native float btStaticPlaneShape_getPlaneConstant(long jarg1, btStaticPlaneShape jarg1_);
  public final static native void btStaticPlaneShapeData_m_collisionShapeData_set(long jarg1, btStaticPlaneShapeData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btStaticPlaneShapeData_m_collisionShapeData_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native void btStaticPlaneShapeData_m_localScaling_set(long jarg1, btStaticPlaneShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btStaticPlaneShapeData_m_localScaling_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native void btStaticPlaneShapeData_m_planeNormal_set(long jarg1, btStaticPlaneShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btStaticPlaneShapeData_m_planeNormal_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native void btStaticPlaneShapeData_m_planeConstant_set(long jarg1, btStaticPlaneShapeData jarg1_, float jarg2);
  public final static native float btStaticPlaneShapeData_m_planeConstant_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native void btStaticPlaneShapeData_m_pad_set(long jarg1, btStaticPlaneShapeData jarg1_, String jarg2);
  public final static native String btStaticPlaneShapeData_m_pad_get(long jarg1, btStaticPlaneShapeData jarg1_);
  public final static native long new_btStaticPlaneShapeData();
  public final static native void delete_btStaticPlaneShapeData(long jarg1);
  public final static native void delete_btHeightfieldTerrainShape(long jarg1);
  public final static native void btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_0(long jarg1, btHeightfieldTerrainShape jarg1_, boolean jarg2);
  public final static native void btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_1(long jarg1, btHeightfieldTerrainShape jarg1_);
  public final static native void btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_0(long jarg1, btHeightfieldTerrainShape jarg1_, boolean jarg2);
  public final static native void btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_1(long jarg1, btHeightfieldTerrainShape jarg1_);
  public final static native long new_btHeightfieldTerrainShape__SWIG_0(int jarg1, int jarg2, java.nio.FloatBuffer jarg3, float jarg4, float jarg5, float jarg6, int jarg7, boolean jarg8);
  public final static native long new_btHeightfieldTerrainShape__SWIG_1(int jarg1, int jarg2, java.nio.ShortBuffer jarg3, float jarg4, float jarg5, float jarg6, int jarg7, boolean jarg8);
  public final static native void delete_btTriangleMeshShape(long jarg1);
  public final static native Vector3 btTriangleMeshShape_localGetSupportingVertex(long jarg1, btTriangleMeshShape jarg1_, Vector3 jarg2);
  public final static native Vector3 btTriangleMeshShape_localGetSupportingVertexWithoutMargin(long jarg1, btTriangleMeshShape jarg1_, Vector3 jarg2);
  public final static native void btTriangleMeshShape_recalcLocalAabb(long jarg1, btTriangleMeshShape jarg1_);
  public final static native long btTriangleMeshShape_getMeshInterface__SWIG_0(long jarg1, btTriangleMeshShape jarg1_);
  public final static native Vector3 btTriangleMeshShape_getLocalAabbMin(long jarg1, btTriangleMeshShape jarg1_);
  public final static native Vector3 btTriangleMeshShape_getLocalAabbMax(long jarg1, btTriangleMeshShape jarg1_);
  public final static native long new_btBvhTriangleMeshShape__SWIG_0(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2, boolean jarg3);
  public final static native long new_btBvhTriangleMeshShape__SWIG_1(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2);
  public final static native long new_btBvhTriangleMeshShape__SWIG_2(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2, Vector3 jarg3, Vector3 jarg4, boolean jarg5);
  public final static native long new_btBvhTriangleMeshShape__SWIG_3(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void delete_btBvhTriangleMeshShape(long jarg1);
  public final static native boolean btBvhTriangleMeshShape_getOwnsBvh(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native void btBvhTriangleMeshShape_performRaycast(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btBvhTriangleMeshShape_performConvexcast(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleCallback jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native void btBvhTriangleMeshShape_refitTree(long jarg1, btBvhTriangleMeshShape jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btBvhTriangleMeshShape_partialRefitTree(long jarg1, btBvhTriangleMeshShape jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native long btBvhTriangleMeshShape_getOptimizedBvh(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native void btBvhTriangleMeshShape_setOptimizedBvh__SWIG_0(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btOptimizedBvh jarg2_, Vector3 jarg3);
  public final static native void btBvhTriangleMeshShape_setOptimizedBvh__SWIG_1(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btOptimizedBvh jarg2_);
  public final static native void btBvhTriangleMeshShape_buildOptimizedBvh(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native boolean btBvhTriangleMeshShape_usesQuantizedAabbCompression(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native void btBvhTriangleMeshShape_setTriangleInfoMap(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleInfoMap jarg2_);
  public final static native long btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_0(long jarg1, btBvhTriangleMeshShape jarg1_);
  public final static native void btBvhTriangleMeshShape_serializeSingleBvh(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2);
  public final static native void btBvhTriangleMeshShape_serializeSingleTriangleInfoMap(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2);
  public final static native void btTriangleMeshShapeData_m_collisionShapeData_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btTriangleMeshShapeData_m_collisionShapeData_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_m_meshInterface_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btStridingMeshInterfaceData jarg2_);
  public final static native long btTriangleMeshShapeData_m_meshInterface_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_m_quantizedFloatBvh_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btQuantizedBvhFloatData jarg2_);
  public final static native long btTriangleMeshShapeData_m_quantizedFloatBvh_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_m_quantizedDoubleBvh_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btQuantizedBvhDoubleData jarg2_);
  public final static native long btTriangleMeshShapeData_m_quantizedDoubleBvh_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_m_triangleInfoMap_set(long jarg1, btTriangleMeshShapeData jarg1_, long jarg2, btTriangleInfoMapData jarg2_);
  public final static native long btTriangleMeshShapeData_m_triangleInfoMap_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_m_collisionMargin_set(long jarg1, btTriangleMeshShapeData jarg1_, float jarg2);
  public final static native float btTriangleMeshShapeData_m_collisionMargin_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native void btTriangleMeshShapeData_m_pad3_set(long jarg1, btTriangleMeshShapeData jarg1_, String jarg2);
  public final static native String btTriangleMeshShapeData_m_pad3_get(long jarg1, btTriangleMeshShapeData jarg1_);
  public final static native long new_btTriangleMeshShapeData();
  public final static native void delete_btTriangleMeshShapeData(long jarg1);
  public final static native Vector3 btBoxShape_getHalfExtentsWithMargin(long jarg1, btBoxShape jarg1_);
  public final static native Vector3 btBoxShape_getHalfExtentsWithoutMargin(long jarg1, btBoxShape jarg1_);
  public final static native long new_btBoxShape(Vector3 jarg1);
  public final static native void btBoxShape_getPlaneEquation(long jarg1, btBoxShape jarg1_, long jarg2, btVector4 jarg2_, int jarg3);
  public final static native void delete_btBoxShape(long jarg1);
  public final static native long new_btCapsuleShape__SWIG_1(float jarg1, float jarg2);
  public final static native int btCapsuleShape_getUpAxis(long jarg1, btCapsuleShape jarg1_);
  public final static native float btCapsuleShape_getRadius(long jarg1, btCapsuleShape jarg1_);
  public final static native float btCapsuleShape_getHalfHeight(long jarg1, btCapsuleShape jarg1_);
  public final static native void delete_btCapsuleShape(long jarg1);
  public final static native long new_btCapsuleShapeX(float jarg1, float jarg2);
  public final static native void delete_btCapsuleShapeX(long jarg1);
  public final static native long new_btCapsuleShapeZ(float jarg1, float jarg2);
  public final static native void delete_btCapsuleShapeZ(long jarg1);
  public final static native void btCapsuleShapeData_m_convexInternalShapeData_set(long jarg1, btCapsuleShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
  public final static native long btCapsuleShapeData_m_convexInternalShapeData_get(long jarg1, btCapsuleShapeData jarg1_);
  public final static native void btCapsuleShapeData_m_upAxis_set(long jarg1, btCapsuleShapeData jarg1_, int jarg2);
  public final static native int btCapsuleShapeData_m_upAxis_get(long jarg1, btCapsuleShapeData jarg1_);
  public final static native void btCapsuleShapeData_m_padding_set(long jarg1, btCapsuleShapeData jarg1_, String jarg2);
  public final static native String btCapsuleShapeData_m_padding_get(long jarg1, btCapsuleShapeData jarg1_);
  public final static native long new_btCapsuleShapeData();
  public final static native void delete_btCapsuleShapeData(long jarg1);
  public final static native Vector3 btBox2dShape_getHalfExtentsWithMargin(long jarg1, btBox2dShape jarg1_);
  public final static native Vector3 btBox2dShape_getHalfExtentsWithoutMargin(long jarg1, btBox2dShape jarg1_);
  public final static native long new_btBox2dShape(Vector3 jarg1);
  public final static native int btBox2dShape_getVertexCount(long jarg1, btBox2dShape jarg1_);
  public final static native long btBox2dShape_getVertices(long jarg1, btBox2dShape jarg1_);
  public final static native long btBox2dShape_getNormals(long jarg1, btBox2dShape jarg1_);
  public final static native Vector3 btBox2dShape_getCentroid(long jarg1, btBox2dShape jarg1_);
  public final static native void btBox2dShape_getPlaneEquation(long jarg1, btBox2dShape jarg1_, long jarg2, btVector4 jarg2_, int jarg3);
  public final static native void delete_btBox2dShape(long jarg1);
  public final static native void btTriangleShape_m_vertices1_set(long jarg1, btTriangleShape jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangleShape_m_vertices1_get(long jarg1, btTriangleShape jarg1_);
  public final static native Vector3 btTriangleShape_getVertexPtr__SWIG_0(long jarg1, btTriangleShape jarg1_, int jarg2);
  public final static native long new_btTriangleShape__SWIG_0();
  public final static native long new_btTriangleShape__SWIG_1(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native void btTriangleShape_calcNormal(long jarg1, btTriangleShape jarg1_, Vector3 jarg2);
  public final static native void btTriangleShape_getPlaneEquation(long jarg1, btTriangleShape jarg1_, int jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void delete_btTriangleShape(long jarg1);
  public final static native long new_btSphereShape(float jarg1);
  public final static native float btSphereShape_getRadius(long jarg1, btSphereShape jarg1_);
  public final static native void btSphereShape_setUnscaledRadius(long jarg1, btSphereShape jarg1_, float jarg2);
  public final static native void delete_btSphereShape(long jarg1);
  public final static native void delete_btStridingMeshInterface(long jarg1);
  public final static native void btStridingMeshInterface_InternalProcessAllTriangles(long jarg1, btStridingMeshInterface jarg1_, long jarg2, btInternalTriangleIndexCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btStridingMeshInterface_calculateAabbBruteForce(long jarg1, btStridingMeshInterface jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btStridingMeshInterface_getLockedVertexIndexBase__SWIG_0(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btStridingMeshInterface_getLockedVertexIndexBase__SWIG_1(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_0(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_1(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void btStridingMeshInterface_unLockVertexBase(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native void btStridingMeshInterface_unLockReadOnlyVertexBase(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native int btStridingMeshInterface_getNumSubParts(long jarg1, btStridingMeshInterface jarg1_);
  public final static native void btStridingMeshInterface_preallocateVertices(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native void btStridingMeshInterface_preallocateIndices(long jarg1, btStridingMeshInterface jarg1_, int jarg2);
  public final static native boolean btStridingMeshInterface_hasPremadeAabb(long jarg1, btStridingMeshInterface jarg1_);
  public final static native void btStridingMeshInterface_setPremadeAabb(long jarg1, btStridingMeshInterface jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btStridingMeshInterface_getPremadeAabb(long jarg1, btStridingMeshInterface jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_);
  public final static native Vector3 btStridingMeshInterface_getScaling(long jarg1, btStridingMeshInterface jarg1_);
  public final static native void btStridingMeshInterface_setScaling(long jarg1, btStridingMeshInterface jarg1_, Vector3 jarg2);
  public final static native int btStridingMeshInterface_calculateSerializeBufferSize(long jarg1, btStridingMeshInterface jarg1_);
  public final static native String btStridingMeshInterface_serialize(long jarg1, btStridingMeshInterface jarg1_, long jarg2, long jarg3);
  public final static native void btIntIndexData_m_value_set(long jarg1, btIntIndexData jarg1_, int jarg2);
  public final static native int btIntIndexData_m_value_get(long jarg1, btIntIndexData jarg1_);
  public final static native long new_btIntIndexData();
  public final static native void delete_btIntIndexData(long jarg1);
  public final static native void btShortIntIndexData_m_value_set(long jarg1, btShortIntIndexData jarg1_, short jarg2);
  public final static native short btShortIntIndexData_m_value_get(long jarg1, btShortIntIndexData jarg1_);
  public final static native void btShortIntIndexData_m_pad_set(long jarg1, btShortIntIndexData jarg1_, String jarg2);
  public final static native String btShortIntIndexData_m_pad_get(long jarg1, btShortIntIndexData jarg1_);
  public final static native long new_btShortIntIndexData();
  public final static native void delete_btShortIntIndexData(long jarg1);
  public final static native void btShortIntIndexTripletData_m_values_set(long jarg1, btShortIntIndexTripletData jarg1_, short[] jarg2);
  public final static native short[] btShortIntIndexTripletData_m_values_get(long jarg1, btShortIntIndexTripletData jarg1_);
  public final static native void btShortIntIndexTripletData_m_pad_set(long jarg1, btShortIntIndexTripletData jarg1_, String jarg2);
  public final static native String btShortIntIndexTripletData_m_pad_get(long jarg1, btShortIntIndexTripletData jarg1_);
  public final static native long new_btShortIntIndexTripletData();
  public final static native void delete_btShortIntIndexTripletData(long jarg1);
  public final static native void btCharIndexTripletData_m_values_set(long jarg1, btCharIndexTripletData jarg1_, short[] jarg2);
  public final static native short[] btCharIndexTripletData_m_values_get(long jarg1, btCharIndexTripletData jarg1_);
  public final static native void btCharIndexTripletData_m_pad_set(long jarg1, btCharIndexTripletData jarg1_, char jarg2);
  public final static native char btCharIndexTripletData_m_pad_get(long jarg1, btCharIndexTripletData jarg1_);
  public final static native long new_btCharIndexTripletData();
  public final static native void delete_btCharIndexTripletData(long jarg1);
  public final static native void btMeshPartData_m_vertices3f_set(long jarg1, btMeshPartData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btMeshPartData_m_vertices3f_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_m_vertices3d_set(long jarg1, btMeshPartData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btMeshPartData_m_vertices3d_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_m_indices32_set(long jarg1, btMeshPartData jarg1_, long jarg2, btIntIndexData jarg2_);
  public final static native long btMeshPartData_m_indices32_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_m_3indices16_set(long jarg1, btMeshPartData jarg1_, long jarg2, btShortIntIndexTripletData jarg2_);
  public final static native long btMeshPartData_m_3indices16_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_m_3indices8_set(long jarg1, btMeshPartData jarg1_, long jarg2, btCharIndexTripletData jarg2_);
  public final static native long btMeshPartData_m_3indices8_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_m_indices16_set(long jarg1, btMeshPartData jarg1_, long jarg2, btShortIntIndexData jarg2_);
  public final static native long btMeshPartData_m_indices16_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_m_numTriangles_set(long jarg1, btMeshPartData jarg1_, int jarg2);
  public final static native int btMeshPartData_m_numTriangles_get(long jarg1, btMeshPartData jarg1_);
  public final static native void btMeshPartData_m_numVertices_set(long jarg1, btMeshPartData jarg1_, int jarg2);
  public final static native int btMeshPartData_m_numVertices_get(long jarg1, btMeshPartData jarg1_);
  public final static native long new_btMeshPartData();
  public final static native void delete_btMeshPartData(long jarg1);
  public final static native void btStridingMeshInterfaceData_m_meshPartsPtr_set(long jarg1, btStridingMeshInterfaceData jarg1_, long jarg2, btMeshPartData jarg2_);
  public final static native long btStridingMeshInterfaceData_m_meshPartsPtr_get(long jarg1, btStridingMeshInterfaceData jarg1_);
  public final static native void btStridingMeshInterfaceData_m_scaling_set(long jarg1, btStridingMeshInterfaceData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btStridingMeshInterfaceData_m_scaling_get(long jarg1, btStridingMeshInterfaceData jarg1_);
  public final static native void btStridingMeshInterfaceData_m_numMeshParts_set(long jarg1, btStridingMeshInterfaceData jarg1_, int jarg2);
  public final static native int btStridingMeshInterfaceData_m_numMeshParts_get(long jarg1, btStridingMeshInterfaceData jarg1_);
  public final static native void btStridingMeshInterfaceData_m_padding_set(long jarg1, btStridingMeshInterfaceData jarg1_, String jarg2);
  public final static native String btStridingMeshInterfaceData_m_padding_get(long jarg1, btStridingMeshInterfaceData jarg1_);
  public final static native long new_btStridingMeshInterfaceData();
  public final static native void delete_btStridingMeshInterfaceData(long jarg1);
  public final static native long new_btMinkowskiSumShape(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_);
  public final static native void btMinkowskiSumShape_setTransformA(long jarg1, btMinkowskiSumShape jarg1_, Matrix4 jarg2);
  public final static native void btMinkowskiSumShape_setTransformB(long jarg1, btMinkowskiSumShape jarg1_, Matrix4 jarg2);
  public final static native Matrix4 btMinkowskiSumShape_getTransformA(long jarg1, btMinkowskiSumShape jarg1_);
  public final static native Matrix4 btMinkowskiSumShape_GetTransformB(long jarg1, btMinkowskiSumShape jarg1_);
  public final static native long btMinkowskiSumShape_getShapeA(long jarg1, btMinkowskiSumShape jarg1_);
  public final static native long btMinkowskiSumShape_getShapeB(long jarg1, btMinkowskiSumShape jarg1_);
  public final static native void delete_btMinkowskiSumShape(long jarg1);
  public final static native void btFace_m_indices_set(long jarg1, btFace jarg1_, long jarg2);
  public final static native long btFace_m_indices_get(long jarg1, btFace jarg1_);
  public final static native void btFace_m_plane_set(long jarg1, btFace jarg1_, float[] jarg2);
  public final static native float[] btFace_m_plane_get(long jarg1, btFace jarg1_);
  public final static native long new_btFace();
  public final static native void delete_btFace(long jarg1);
  public final static native long new_btConvexPolyhedron();
  public final static native void delete_btConvexPolyhedron(long jarg1);
  public final static native void btConvexPolyhedron_m_vertices_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2);
  public final static native long btConvexPolyhedron_m_vertices_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_m_faces_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2);
  public final static native long btConvexPolyhedron_m_faces_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_m_uniqueEdges_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2);
  public final static native long btConvexPolyhedron_m_uniqueEdges_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_m_localCenter_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexPolyhedron_m_localCenter_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_m_extents_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexPolyhedron_m_extents_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_m_radius_set(long jarg1, btConvexPolyhedron jarg1_, float jarg2);
  public final static native float btConvexPolyhedron_m_radius_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_mC_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexPolyhedron_mC_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_mE_set(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btConvexPolyhedron_mE_get(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_initialize(long jarg1, btConvexPolyhedron jarg1_);
  public final static native boolean btConvexPolyhedron_testContainment(long jarg1, btConvexPolyhedron jarg1_);
  public final static native void btConvexPolyhedron_project(long jarg1, btConvexPolyhedron jarg1_, Matrix4 jarg2, Vector3 jarg3, long jarg4, long jarg5, Vector3 jarg6, Vector3 jarg7);
  public final static native long new_btOptimizedBvh();
  public final static native void delete_btOptimizedBvh(long jarg1);
  public final static native void btOptimizedBvh_build(long jarg1, btOptimizedBvh jarg1_, long jarg2, btStridingMeshInterface jarg2_, boolean jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native void btOptimizedBvh_refit(long jarg1, btOptimizedBvh jarg1_, long jarg2, btStridingMeshInterface jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btOptimizedBvh_refitPartial(long jarg1, btOptimizedBvh jarg1_, long jarg2, btStridingMeshInterface jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native void btOptimizedBvh_updateBvhNodes(long jarg1, btOptimizedBvh jarg1_, long jarg2, btStridingMeshInterface jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native boolean btOptimizedBvh_serializeInPlace(long jarg1, btOptimizedBvh jarg1_, long jarg2, long jarg3, boolean jarg4);
  public final static native long btOptimizedBvh_deSerializeInPlace(long jarg1, long jarg2, boolean jarg3);
  public final static native void btTriangle_m_vertex0_set(long jarg1, btTriangle jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangle_m_vertex0_get(long jarg1, btTriangle jarg1_);
  public final static native void btTriangle_m_vertex1_set(long jarg1, btTriangle jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangle_m_vertex1_get(long jarg1, btTriangle jarg1_);
  public final static native void btTriangle_m_vertex2_set(long jarg1, btTriangle jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangle_m_vertex2_get(long jarg1, btTriangle jarg1_);
  public final static native void btTriangle_m_partId_set(long jarg1, btTriangle jarg1_, int jarg2);
  public final static native int btTriangle_m_partId_get(long jarg1, btTriangle jarg1_);
  public final static native void btTriangle_m_triangleIndex_set(long jarg1, btTriangle jarg1_, int jarg2);
  public final static native int btTriangle_m_triangleIndex_get(long jarg1, btTriangle jarg1_);
  public final static native long new_btTriangle();
  public final static native void delete_btTriangle(long jarg1);
  public final static native int btTriangleBuffer_getNumTriangles(long jarg1, btTriangleBuffer jarg1_);
  public final static native long btTriangleBuffer_getTriangle(long jarg1, btTriangleBuffer jarg1_, int jarg2);
  public final static native void btTriangleBuffer_clearBuffer(long jarg1, btTriangleBuffer jarg1_);
  public final static native long new_btTriangleBuffer();
  public final static native void delete_btTriangleBuffer(long jarg1);
  public final static native void btIndexedMesh_m_numTriangles_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_m_numTriangles_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_m_triangleIndexBase_set(long jarg1, btIndexedMesh jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btIndexedMesh_m_triangleIndexBase_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_m_triangleIndexStride_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_m_triangleIndexStride_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_m_numVertices_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_m_numVertices_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_m_vertexBase_set(long jarg1, btIndexedMesh jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btIndexedMesh_m_vertexBase_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_m_vertexStride_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_m_vertexStride_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_m_indexType_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_m_indexType_get(long jarg1, btIndexedMesh jarg1_);
  public final static native void btIndexedMesh_m_vertexType_set(long jarg1, btIndexedMesh jarg1_, int jarg2);
  public final static native int btIndexedMesh_m_vertexType_get(long jarg1, btIndexedMesh jarg1_);
  public final static native long new_btIndexedMesh();
  public final static native void btIndexedMesh_setTriangleIndexBase(long jarg1, btIndexedMesh jarg1_, java.nio.ShortBuffer jarg2);
  public final static native void btIndexedMesh_setVertexBase(long jarg1, btIndexedMesh jarg1_, java.nio.FloatBuffer jarg2);
  public final static native void delete_btIndexedMesh(long jarg1);
  public final static native long new_btTriangleIndexVertexArray__SWIG_0();
  public final static native void delete_btTriangleIndexVertexArray(long jarg1);
  public final static native long new_btTriangleIndexVertexArray__SWIG_1(int jarg1, java.nio.IntBuffer jarg2, int jarg3, int jarg4, java.nio.FloatBuffer jarg5, int jarg6);
  public final static native void btTriangleIndexVertexArray_addIndexedMesh__SWIG_0(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, btIndexedMesh jarg2_, int jarg3);
  public final static native void btTriangleIndexVertexArray_addIndexedMesh__SWIG_1(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, btIndexedMesh jarg2_);
  public final static native void btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_0(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_1(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_0(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_1(long jarg1, btTriangleIndexVertexArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native long btTriangleIndexVertexArray_getIndexedMeshArray__SWIG_0(long jarg1, btTriangleIndexVertexArray jarg1_);
  public final static native void btMaterial_m_friction_set(long jarg1, btMaterial jarg1_, float jarg2);
  public final static native float btMaterial_m_friction_get(long jarg1, btMaterial jarg1_);
  public final static native void btMaterial_m_restitution_set(long jarg1, btMaterial jarg1_, float jarg2);
  public final static native float btMaterial_m_restitution_get(long jarg1, btMaterial jarg1_);
  public final static native void btMaterial_pad_set(long jarg1, btMaterial jarg1_, int[] jarg2);
  public final static native int[] btMaterial_pad_get(long jarg1, btMaterial jarg1_);
  public final static native long new_btMaterial__SWIG_0();
  public final static native long new_btMaterial__SWIG_1(float jarg1, float jarg2);
  public final static native void delete_btMaterial(long jarg1);
  public final static native long new_btScaledBvhTriangleMeshShape(long jarg1, btBvhTriangleMeshShape jarg1_, Vector3 jarg2);
  public final static native void delete_btScaledBvhTriangleMeshShape(long jarg1);
  public final static native long btScaledBvhTriangleMeshShape_getChildShape__SWIG_0(long jarg1, btScaledBvhTriangleMeshShape jarg1_);
  public final static native void btScaledTriangleMeshShapeData_m_trimeshShapeData_set(long jarg1, btScaledTriangleMeshShapeData jarg1_, long jarg2, btTriangleMeshShapeData jarg2_);
  public final static native long btScaledTriangleMeshShapeData_m_trimeshShapeData_get(long jarg1, btScaledTriangleMeshShapeData jarg1_);
  public final static native void btScaledTriangleMeshShapeData_m_localScaling_set(long jarg1, btScaledTriangleMeshShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btScaledTriangleMeshShapeData_m_localScaling_get(long jarg1, btScaledTriangleMeshShapeData jarg1_);
  public final static native long new_btScaledTriangleMeshShapeData();
  public final static native void delete_btScaledTriangleMeshShapeData(long jarg1);
  public final static native long new_btShapeHull(long jarg1, btConvexShape jarg1_);
  public final static native void delete_btShapeHull(long jarg1);
  public final static native boolean btShapeHull_buildHull(long jarg1, btShapeHull jarg1_, float jarg2);
  public final static native int btShapeHull_numTriangles(long jarg1, btShapeHull jarg1_);
  public final static native int btShapeHull_numVertices(long jarg1, btShapeHull jarg1_);
  public final static native int btShapeHull_numIndices(long jarg1, btShapeHull jarg1_);
  public final static native long btShapeHull_getVertexPointer(long jarg1, btShapeHull jarg1_);
  public final static native java.nio.LongBuffer btShapeHull_getIndexPointer(long jarg1, btShapeHull jarg1_);
  public final static native long new_btConvexHullShape__SWIG_0(java.nio.FloatBuffer jarg1, int jarg2, int jarg3);
  public final static native long new_btConvexHullShape__SWIG_1(java.nio.FloatBuffer jarg1, int jarg2);
  public final static native long new_btConvexHullShape__SWIG_2(java.nio.FloatBuffer jarg1);
  public final static native long new_btConvexHullShape__SWIG_3();
  public final static native void btConvexHullShape_addPoint(long jarg1, btConvexHullShape jarg1_, Vector3 jarg2);
  public final static native long btConvexHullShape_getUnscaledPoints__SWIG_0(long jarg1, btConvexHullShape jarg1_);
  public final static native long btConvexHullShape_getPoints(long jarg1, btConvexHullShape jarg1_);
  public final static native Vector3 btConvexHullShape_getScaledPoint(long jarg1, btConvexHullShape jarg1_, int jarg2);
  public final static native int btConvexHullShape_getNumPoints(long jarg1, btConvexHullShape jarg1_);
  public final static native void btConvexHullShape_project(long jarg1, btConvexHullShape jarg1_, Matrix4 jarg2, Vector3 jarg3, long jarg4, long jarg5, Vector3 jarg6, Vector3 jarg7);
  public final static native long new_btConvexHullShape__SWIG_4(long jarg1, btShapeHull jarg1_);
  public final static native void delete_btConvexHullShape(long jarg1);
  public final static native void btConvexHullShapeData_m_convexInternalShapeData_set(long jarg1, btConvexHullShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
  public final static native long btConvexHullShapeData_m_convexInternalShapeData_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native void btConvexHullShapeData_m_unscaledPointsFloatPtr_set(long jarg1, btConvexHullShapeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btConvexHullShapeData_m_unscaledPointsFloatPtr_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native void btConvexHullShapeData_m_unscaledPointsDoublePtr_set(long jarg1, btConvexHullShapeData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btConvexHullShapeData_m_unscaledPointsDoublePtr_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native void btConvexHullShapeData_m_numUnscaledPoints_set(long jarg1, btConvexHullShapeData jarg1_, int jarg2);
  public final static native int btConvexHullShapeData_m_numUnscaledPoints_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native void btConvexHullShapeData_m_padding3_set(long jarg1, btConvexHullShapeData jarg1_, String jarg2);
  public final static native String btConvexHullShapeData_m_padding3_get(long jarg1, btConvexHullShapeData jarg1_);
  public final static native long new_btConvexHullShapeData();
  public final static native void delete_btConvexHullShapeData(long jarg1);
  public final static native void btMaterialProperties_m_numMaterials_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_m_numMaterials_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_m_materialBase_set(long jarg1, btMaterialProperties jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btMaterialProperties_m_materialBase_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_m_materialStride_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_m_materialStride_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_m_materialType_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_m_materialType_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_m_numTriangles_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_m_numTriangles_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_m_triangleMaterialsBase_set(long jarg1, btMaterialProperties jarg1_, java.nio.ByteBuffer jarg2);
  public final static native java.nio.ByteBuffer btMaterialProperties_m_triangleMaterialsBase_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_m_triangleMaterialStride_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_m_triangleMaterialStride_get(long jarg1, btMaterialProperties jarg1_);
  public final static native void btMaterialProperties_m_triangleType_set(long jarg1, btMaterialProperties jarg1_, int jarg2);
  public final static native int btMaterialProperties_m_triangleType_get(long jarg1, btMaterialProperties jarg1_);
  public final static native long new_btMaterialProperties();
  public final static native void delete_btMaterialProperties(long jarg1);
  public final static native long new_btTriangleIndexVertexMaterialArray__SWIG_0();
  public final static native long new_btTriangleIndexVertexMaterialArray__SWIG_1(int jarg1, java.nio.IntBuffer jarg2, int jarg3, int jarg4, java.nio.FloatBuffer jarg5, int jarg6, int jarg7, java.nio.ByteBuffer jarg8, int jarg9, java.nio.IntBuffer jarg10, int jarg11);
  public final static native void delete_btTriangleIndexVertexMaterialArray(long jarg1);
  public final static native void btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_0(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, btMaterialProperties jarg2_, int jarg3);
  public final static native void btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_1(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, btMaterialProperties jarg2_);
  public final static native void btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_0(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_1(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_0(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_1(long jarg1, btTriangleIndexVertexMaterialArray jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native Vector3 btCylinderShape_getHalfExtentsWithMargin(long jarg1, btCylinderShape jarg1_);
  public final static native Vector3 btCylinderShape_getHalfExtentsWithoutMargin(long jarg1, btCylinderShape jarg1_);
  public final static native long new_btCylinderShape(Vector3 jarg1);
  public final static native int btCylinderShape_getUpAxis(long jarg1, btCylinderShape jarg1_);
  public final static native float btCylinderShape_getRadius(long jarg1, btCylinderShape jarg1_);
  public final static native void delete_btCylinderShape(long jarg1);
  public final static native long new_btCylinderShapeX(Vector3 jarg1);
  public final static native void delete_btCylinderShapeX(long jarg1);
  public final static native long new_btCylinderShapeZ(Vector3 jarg1);
  public final static native void delete_btCylinderShapeZ(long jarg1);
  public final static native void btCylinderShapeData_m_convexInternalShapeData_set(long jarg1, btCylinderShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
  public final static native long btCylinderShapeData_m_convexInternalShapeData_get(long jarg1, btCylinderShapeData jarg1_);
  public final static native void btCylinderShapeData_m_upAxis_set(long jarg1, btCylinderShapeData jarg1_, int jarg2);
  public final static native int btCylinderShapeData_m_upAxis_get(long jarg1, btCylinderShapeData jarg1_);
  public final static native void btCylinderShapeData_m_padding_set(long jarg1, btCylinderShapeData jarg1_, String jarg2);
  public final static native String btCylinderShapeData_m_padding_get(long jarg1, btCylinderShapeData jarg1_);
  public final static native long new_btCylinderShapeData();
  public final static native void delete_btCylinderShapeData(long jarg1);
  public final static native void btTriangleMesh_m_weldingThreshold_set(long jarg1, btTriangleMesh jarg1_, float jarg2);
  public final static native float btTriangleMesh_m_weldingThreshold_get(long jarg1, btTriangleMesh jarg1_);
  public final static native long new_btTriangleMesh__SWIG_0(boolean jarg1, boolean jarg2);
  public final static native long new_btTriangleMesh__SWIG_1(boolean jarg1);
  public final static native long new_btTriangleMesh__SWIG_2();
  public final static native boolean btTriangleMesh_getUse32bitIndices(long jarg1, btTriangleMesh jarg1_);
  public final static native boolean btTriangleMesh_getUse4componentVertices(long jarg1, btTriangleMesh jarg1_);
  public final static native void btTriangleMesh_addTriangle__SWIG_0(long jarg1, btTriangleMesh jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, boolean jarg5);
  public final static native void btTriangleMesh_addTriangle__SWIG_1(long jarg1, btTriangleMesh jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native int btTriangleMesh_getNumTriangles(long jarg1, btTriangleMesh jarg1_);
  public final static native int btTriangleMesh_findOrAddVertex(long jarg1, btTriangleMesh jarg1_, Vector3 jarg2, boolean jarg3);
  public final static native void btTriangleMesh_addIndex(long jarg1, btTriangleMesh jarg1_, int jarg2);
  public final static native void delete_btTriangleMesh(long jarg1);
  public final static native long new_btConeShape(float jarg1, float jarg2);
  public final static native float btConeShape_getRadius(long jarg1, btConeShape jarg1_);
  public final static native float btConeShape_getHeight(long jarg1, btConeShape jarg1_);
  public final static native void btConeShape_setConeUpIndex(long jarg1, btConeShape jarg1_, int jarg2);
  public final static native int btConeShape_getConeUpIndex(long jarg1, btConeShape jarg1_);
  public final static native void delete_btConeShape(long jarg1);
  public final static native long new_btConeShapeX(float jarg1, float jarg2);
  public final static native void delete_btConeShapeX(long jarg1);
  public final static native long new_btConeShapeZ(float jarg1, float jarg2);
  public final static native void delete_btConeShapeZ(long jarg1);
  public final static native long new_btConvexTriangleMeshShape__SWIG_0(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2);
  public final static native long new_btConvexTriangleMeshShape__SWIG_1(long jarg1, btStridingMeshInterface jarg1_);
  public final static native long btConvexTriangleMeshShape_getMeshInterface__SWIG_0(long jarg1, btConvexTriangleMeshShape jarg1_);
  public final static native void btConvexTriangleMeshShape_calculatePrincipalAxisTransform(long jarg1, btConvexTriangleMeshShape jarg1_, Matrix4 jarg2, Vector3 jarg3, long jarg4);
  public final static native void delete_btConvexTriangleMeshShape(long jarg1);
  public final static native long new_btEmptyShape();
  public final static native void delete_btEmptyShape(long jarg1);
  public final static native long new_btMultimaterialTriangleMeshShape__SWIG_0(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2, boolean jarg3);
  public final static native long new_btMultimaterialTriangleMeshShape__SWIG_1(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2);
  public final static native long new_btMultimaterialTriangleMeshShape__SWIG_2(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2, Vector3 jarg3, Vector3 jarg4, boolean jarg5);
  public final static native long new_btMultimaterialTriangleMeshShape__SWIG_3(long jarg1, btStridingMeshInterface jarg1_, boolean jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void delete_btMultimaterialTriangleMeshShape(long jarg1);
  public final static native long btMultimaterialTriangleMeshShape_getMaterialProperties(long jarg1, btMultimaterialTriangleMeshShape jarg1_, int jarg2, int jarg3);
  public final static native long new_btBU_Simplex1to4__SWIG_0();
  public final static native long new_btBU_Simplex1to4__SWIG_1(Vector3 jarg1);
  public final static native long new_btBU_Simplex1to4__SWIG_2(Vector3 jarg1, Vector3 jarg2);
  public final static native long new_btBU_Simplex1to4__SWIG_3(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native long new_btBU_Simplex1to4__SWIG_4(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btBU_Simplex1to4_reset(long jarg1, btBU_Simplex1to4 jarg1_);
  public final static native void btBU_Simplex1to4_addVertex(long jarg1, btBU_Simplex1to4 jarg1_, Vector3 jarg2);
  public final static native int btBU_Simplex1to4_getIndex(long jarg1, btBU_Simplex1to4 jarg1_, int jarg2);
  public final static native void delete_btBU_Simplex1to4(long jarg1);
  public final static native long new_btUniformScalingShape(long jarg1, btConvexShape jarg1_, float jarg2);
  public final static native void delete_btUniformScalingShape(long jarg1);
  public final static native float btUniformScalingShape_getUniformScalingFactor(long jarg1, btUniformScalingShape jarg1_);
  public final static native long btUniformScalingShape_getChildShape__SWIG_0(long jarg1, btUniformScalingShape jarg1_);
  public final static native void btCompoundShapeChild_m_transform_set(long jarg1, btCompoundShapeChild jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btCompoundShapeChild_m_transform_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native void btCompoundShapeChild_m_childShape_set(long jarg1, btCompoundShapeChild jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native long btCompoundShapeChild_m_childShape_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native void btCompoundShapeChild_m_childShapeType_set(long jarg1, btCompoundShapeChild jarg1_, int jarg2);
  public final static native int btCompoundShapeChild_m_childShapeType_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native void btCompoundShapeChild_m_childMargin_set(long jarg1, btCompoundShapeChild jarg1_, float jarg2);
  public final static native float btCompoundShapeChild_m_childMargin_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native void btCompoundShapeChild_m_node_set(long jarg1, btCompoundShapeChild jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long btCompoundShapeChild_m_node_get(long jarg1, btCompoundShapeChild jarg1_);
  public final static native long new_btCompoundShapeChild();
  public final static native void delete_btCompoundShapeChild(long jarg1);
  public final static native long new_btCompoundShape__SWIG_0(boolean jarg1);
  public final static native long new_btCompoundShape__SWIG_1();
  public final static native void delete_btCompoundShape(long jarg1);
  public final static native void btCompoundShape_addChildShape(long jarg1, btCompoundShape jarg1_, Matrix4 jarg2, long jarg3, btCollisionShape jarg3_);
  public final static native void btCompoundShape_removeChildShape(long jarg1, btCompoundShape jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native void btCompoundShape_removeChildShapeByIndex(long jarg1, btCompoundShape jarg1_, int jarg2);
  public final static native int btCompoundShape_getNumChildShapes(long jarg1, btCompoundShape jarg1_);
  public final static native long btCompoundShape_getChildShape__SWIG_0(long jarg1, btCompoundShape jarg1_, int jarg2);
  public final static native Matrix4 btCompoundShape_getChildTransform__SWIG_0(long jarg1, btCompoundShape jarg1_, int jarg2);
  public final static native void btCompoundShape_updateChildTransform__SWIG_0(long jarg1, btCompoundShape jarg1_, int jarg2, Matrix4 jarg3, boolean jarg4);
  public final static native void btCompoundShape_updateChildTransform__SWIG_1(long jarg1, btCompoundShape jarg1_, int jarg2, Matrix4 jarg3);
  public final static native long btCompoundShape_getChildList(long jarg1, btCompoundShape jarg1_);
  public final static native void btCompoundShape_recalculateLocalAabb(long jarg1, btCompoundShape jarg1_);
  public final static native long btCompoundShape_getDynamicAabbTree__SWIG_0(long jarg1, btCompoundShape jarg1_);
  public final static native void btCompoundShape_createAabbTreeFromChildren(long jarg1, btCompoundShape jarg1_);
  public final static native void btCompoundShape_calculatePrincipalAxisTransform(long jarg1, btCompoundShape jarg1_, java.nio.FloatBuffer jarg2, Matrix4 jarg3, Vector3 jarg4);
  public final static native int btCompoundShape_getUpdateRevision(long jarg1, btCompoundShape jarg1_);
  public final static native void btCompoundShapeChildData_m_transform_set(long jarg1, btCompoundShapeChildData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btCompoundShapeChildData_m_transform_get(long jarg1, btCompoundShapeChildData jarg1_);
  public final static native void btCompoundShapeChildData_m_childShape_set(long jarg1, btCompoundShapeChildData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btCompoundShapeChildData_m_childShape_get(long jarg1, btCompoundShapeChildData jarg1_);
  public final static native void btCompoundShapeChildData_m_childShapeType_set(long jarg1, btCompoundShapeChildData jarg1_, int jarg2);
  public final static native int btCompoundShapeChildData_m_childShapeType_get(long jarg1, btCompoundShapeChildData jarg1_);
  public final static native void btCompoundShapeChildData_m_childMargin_set(long jarg1, btCompoundShapeChildData jarg1_, float jarg2);
  public final static native float btCompoundShapeChildData_m_childMargin_get(long jarg1, btCompoundShapeChildData jarg1_);
  public final static native long new_btCompoundShapeChildData();
  public final static native void delete_btCompoundShapeChildData(long jarg1);
  public final static native void btCompoundShapeData_m_collisionShapeData_set(long jarg1, btCompoundShapeData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btCompoundShapeData_m_collisionShapeData_get(long jarg1, btCompoundShapeData jarg1_);
  public final static native void btCompoundShapeData_m_childShapePtr_set(long jarg1, btCompoundShapeData jarg1_, long jarg2, btCompoundShapeChildData jarg2_);
  public final static native long btCompoundShapeData_m_childShapePtr_get(long jarg1, btCompoundShapeData jarg1_);
  public final static native void btCompoundShapeData_m_numChildShapes_set(long jarg1, btCompoundShapeData jarg1_, int jarg2);
  public final static native int btCompoundShapeData_m_numChildShapes_get(long jarg1, btCompoundShapeData jarg1_);
  public final static native void btCompoundShapeData_m_collisionMargin_set(long jarg1, btCompoundShapeData jarg1_, float jarg2);
  public final static native float btCompoundShapeData_m_collisionMargin_get(long jarg1, btCompoundShapeData jarg1_);
  public final static native long new_btCompoundShapeData();
  public final static native void delete_btCompoundShapeData(long jarg1);
  public final static native long new_btConvexPointCloudShape__SWIG_0();
  public final static native long new_btConvexPointCloudShape__SWIG_1(long jarg1, btVector3 jarg1_, int jarg2, Vector3 jarg3, boolean jarg4);
  public final static native long new_btConvexPointCloudShape__SWIG_2(long jarg1, btVector3 jarg1_, int jarg2, Vector3 jarg3);
  public final static native void btConvexPointCloudShape_setPoints__SWIG_0(long jarg1, btConvexPointCloudShape jarg1_, long jarg2, btVector3 jarg2_, int jarg3, boolean jarg4, Vector3 jarg5);
  public final static native void btConvexPointCloudShape_setPoints__SWIG_1(long jarg1, btConvexPointCloudShape jarg1_, long jarg2, btVector3 jarg2_, int jarg3, boolean jarg4);
  public final static native void btConvexPointCloudShape_setPoints__SWIG_2(long jarg1, btConvexPointCloudShape jarg1_, long jarg2, btVector3 jarg2_, int jarg3);
  public final static native long btConvexPointCloudShape_getUnscaledPoints__SWIG_0(long jarg1, btConvexPointCloudShape jarg1_);
  public final static native int btConvexPointCloudShape_getNumPoints(long jarg1, btConvexPointCloudShape jarg1_);
  public final static native Vector3 btConvexPointCloudShape_getScaledPoint(long jarg1, btConvexPointCloudShape jarg1_, int jarg2);
  public final static native void delete_btConvexPointCloudShape(long jarg1);
  public final static native long new_btConvex2dShape(long jarg1, btConvexShape jarg1_);
  public final static native void delete_btConvex2dShape(long jarg1);
  public final static native long btConvex2dShape_getChildShape__SWIG_0(long jarg1, btConvex2dShape jarg1_);
  public final static native boolean btCollisionObject_mergesSimulationIslands(long jarg1, btCollisionObject jarg1_);
  public final static native Vector3 btCollisionObject_getAnisotropicFriction__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setAnisotropicFriction__SWIG_0(long jarg1, btCollisionObject jarg1_, Vector3 jarg2, int jarg3);
  public final static native void btCollisionObject_setAnisotropicFriction__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native boolean btCollisionObject_hasAnisotropicFriction__SWIG_0(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native boolean btCollisionObject_hasAnisotropicFriction__SWIG_1(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setContactProcessingThreshold(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getContactProcessingThreshold(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_isStaticObject(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_isKinematicObject(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_isStaticOrKinematicObject(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_hasContactResponse(long jarg1, btCollisionObject jarg1_);
  public final static native long new_btCollisionObject();
  public final static native void delete_btCollisionObject(long jarg1);
  public final static native void btCollisionObject_setCollisionShape(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native long btCollisionObject_getCollisionShape__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native long btCollisionObject_internalGetExtensionPointer(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_internalSetExtensionPointer(long jarg1, btCollisionObject jarg1_, long jarg2);
  public final static native int btCollisionObject_getActivationState(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setActivationState(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native void btCollisionObject_setDeactivationTime(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getDeactivationTime(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_forceActivationState(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native void btCollisionObject_activate__SWIG_0(long jarg1, btCollisionObject jarg1_, boolean jarg2);
  public final static native void btCollisionObject_activate__SWIG_1(long jarg1, btCollisionObject jarg1_);
  public final static native boolean btCollisionObject_isActive(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setRestitution(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getRestitution(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setFriction(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getFriction(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setRollingFriction(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getRollingFriction(long jarg1, btCollisionObject jarg1_);
  public final static native int btCollisionObject_getInternalType(long jarg1, btCollisionObject jarg1_);
  public final static native Matrix4 btCollisionObject_getWorldTransform__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setWorldTransform(long jarg1, btCollisionObject jarg1_, Matrix4 jarg2);
  public final static native long btCollisionObject_getBroadphaseHandle__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setBroadphaseHandle(long jarg1, btCollisionObject jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native Matrix4 btCollisionObject_getInterpolationWorldTransform__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setInterpolationWorldTransform(long jarg1, btCollisionObject jarg1_, Matrix4 jarg2);
  public final static native void btCollisionObject_setInterpolationLinearVelocity(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native void btCollisionObject_setInterpolationAngularVelocity(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native Vector3 btCollisionObject_getInterpolationLinearVelocity__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native Vector3 btCollisionObject_getInterpolationAngularVelocity__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native int btCollisionObject_getIslandTag(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setIslandTag(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native int btCollisionObject_getCompanionId(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setCompanionId(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native float btCollisionObject_getHitFraction(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setHitFraction(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native int btCollisionObject_getCollisionFlags(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setCollisionFlags(long jarg1, btCollisionObject jarg1_, int jarg2);
  public final static native float btCollisionObject_getCcdSweptSphereRadius(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setCcdSweptSphereRadius(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native float btCollisionObject_getCcdMotionThreshold(long jarg1, btCollisionObject jarg1_);
  public final static native float btCollisionObject_getCcdSquareMotionThreshold(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setCcdMotionThreshold(long jarg1, btCollisionObject jarg1_, float jarg2);
  public final static native long btCollisionObject_getUserPointer(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_setUserPointer(long jarg1, btCollisionObject jarg1_, long jarg2);
  public final static native boolean btCollisionObject_checkCollideWith(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native int btCollisionObject_calculateSerializeBufferSize(long jarg1, btCollisionObject jarg1_);
  public final static native String btCollisionObject_serialize(long jarg1, btCollisionObject jarg1_, long jarg2, long jarg3);
  public final static native void btCollisionObject_serializeSingleObject(long jarg1, btCollisionObject jarg1_, long jarg2);
  public final static native void btCollisionObject_internalSetGdxBridge(long jarg1, btCollisionObject jarg1_, long jarg2, GdxCollisionObjectBridge jarg2_);
  public final static native long btCollisionObject_internalGetGdxBridge(long jarg1, btCollisionObject jarg1_);
  public final static native void btCollisionObject_getAnisotropicFriction__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native void btCollisionObject_getWorldTransform__SWIG_2(long jarg1, btCollisionObject jarg1_, Matrix4 jarg2);
  public final static native void btCollisionObject_getInterpolationWorldTransform__SWIG_2(long jarg1, btCollisionObject jarg1_, Matrix4 jarg2);
  public final static native void btCollisionObject_getInterpolationLinearVelocity__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native void btCollisionObject_getInterpolationAngularVelocity__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
  public final static native void btCollisionObjectDoubleData_m_broadphaseHandle_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2);
  public final static native long btCollisionObjectDoubleData_m_broadphaseHandle_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_collisionShape_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2);
  public final static native long btCollisionObjectDoubleData_m_collisionShape_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_rootCollisionShape_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btCollisionObjectDoubleData_m_rootCollisionShape_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_name_set(long jarg1, btCollisionObjectDoubleData jarg1_, String jarg2);
  public final static native String btCollisionObjectDoubleData_m_name_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_worldTransform_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btTransformDoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_m_worldTransform_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_interpolationWorldTransform_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btTransformDoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_m_interpolationWorldTransform_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_interpolationLinearVelocity_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_m_interpolationLinearVelocity_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_interpolationAngularVelocity_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_m_interpolationAngularVelocity_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_anisotropicFriction_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btCollisionObjectDoubleData_m_anisotropicFriction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_contactProcessingThreshold_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_m_contactProcessingThreshold_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_deactivationTime_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_m_deactivationTime_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_friction_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_m_friction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_rollingFriction_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_m_rollingFriction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_restitution_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_m_restitution_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_hitFraction_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_m_hitFraction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_ccdSweptSphereRadius_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_m_ccdSweptSphereRadius_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_ccdMotionThreshold_set(long jarg1, btCollisionObjectDoubleData jarg1_, double jarg2);
  public final static native double btCollisionObjectDoubleData_m_ccdMotionThreshold_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_hasAnisotropicFriction_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_m_hasAnisotropicFriction_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_collisionFlags_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_m_collisionFlags_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_islandTag1_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_m_islandTag1_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_companionId_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_m_companionId_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_activationState1_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_m_activationState1_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_internalType_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_m_internalType_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_checkCollideWith_set(long jarg1, btCollisionObjectDoubleData jarg1_, int jarg2);
  public final static native int btCollisionObjectDoubleData_m_checkCollideWith_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native void btCollisionObjectDoubleData_m_padding_set(long jarg1, btCollisionObjectDoubleData jarg1_, String jarg2);
  public final static native String btCollisionObjectDoubleData_m_padding_get(long jarg1, btCollisionObjectDoubleData jarg1_);
  public final static native long new_btCollisionObjectDoubleData();
  public final static native void delete_btCollisionObjectDoubleData(long jarg1);
  public final static native void btCollisionObjectFloatData_m_broadphaseHandle_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2);
  public final static native long btCollisionObjectFloatData_m_broadphaseHandle_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_collisionShape_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2);
  public final static native long btCollisionObjectFloatData_m_collisionShape_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_rootCollisionShape_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btCollisionShapeData jarg2_);
  public final static native long btCollisionObjectFloatData_m_rootCollisionShape_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_name_set(long jarg1, btCollisionObjectFloatData jarg1_, String jarg2);
  public final static native String btCollisionObjectFloatData_m_name_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_worldTransform_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btCollisionObjectFloatData_m_worldTransform_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_interpolationWorldTransform_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btCollisionObjectFloatData_m_interpolationWorldTransform_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_interpolationLinearVelocity_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btCollisionObjectFloatData_m_interpolationLinearVelocity_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_interpolationAngularVelocity_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btCollisionObjectFloatData_m_interpolationAngularVelocity_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_anisotropicFriction_set(long jarg1, btCollisionObjectFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btCollisionObjectFloatData_m_anisotropicFriction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_contactProcessingThreshold_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_m_contactProcessingThreshold_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_deactivationTime_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_m_deactivationTime_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_friction_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_m_friction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_rollingFriction_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_m_rollingFriction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_restitution_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_m_restitution_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_hitFraction_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_m_hitFraction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_ccdSweptSphereRadius_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_m_ccdSweptSphereRadius_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_ccdMotionThreshold_set(long jarg1, btCollisionObjectFloatData jarg1_, float jarg2);
  public final static native float btCollisionObjectFloatData_m_ccdMotionThreshold_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_hasAnisotropicFriction_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_m_hasAnisotropicFriction_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_collisionFlags_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_m_collisionFlags_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_islandTag1_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_m_islandTag1_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_companionId_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_m_companionId_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_activationState1_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_m_activationState1_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_internalType_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_m_internalType_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_checkCollideWith_set(long jarg1, btCollisionObjectFloatData jarg1_, int jarg2);
  public final static native int btCollisionObjectFloatData_m_checkCollideWith_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native void btCollisionObjectFloatData_m_padding_set(long jarg1, btCollisionObjectFloatData jarg1_, String jarg2);
  public final static native String btCollisionObjectFloatData_m_padding_get(long jarg1, btCollisionObjectFloatData jarg1_);
  public final static native long new_btCollisionObjectFloatData();
  public final static native void delete_btCollisionObjectFloatData(long jarg1);
  public final static native void GdxCollisionObjectBridge_userValue_set(long jarg1, GdxCollisionObjectBridge jarg1_, int jarg2);
  public final static native int GdxCollisionObjectBridge_userValue_get(long jarg1, GdxCollisionObjectBridge jarg1_);
  public final static native void GdxCollisionObjectBridge_contactCallbackFlag_set(long jarg1, GdxCollisionObjectBridge jarg1_, int jarg2);
  public final static native int GdxCollisionObjectBridge_contactCallbackFlag_get(long jarg1, GdxCollisionObjectBridge jarg1_);
  public final static native void GdxCollisionObjectBridge_contactCallbackFilter_set(long jarg1, GdxCollisionObjectBridge jarg1_, int jarg2);
  public final static native int GdxCollisionObjectBridge_contactCallbackFilter_get(long jarg1, GdxCollisionObjectBridge jarg1_);
  public final static native long new_GdxCollisionObjectBridge();
  public final static native void delete_GdxCollisionObjectBridge(long jarg1);
  public final static native boolean gdxCheckFilter__SWIG_0(int jarg1, int jarg2);
  public final static native boolean gdxCheckFilter__SWIG_1(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionObjectWrapper_m_parent_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
  public final static native long btCollisionObjectWrapper_m_parent_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native void btCollisionObjectWrapper_m_shape_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native long btCollisionObjectWrapper_m_shape_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native void btCollisionObjectWrapper_m_collisionObject_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long btCollisionObjectWrapper_m_collisionObject_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native Matrix4 btCollisionObjectWrapper_m_worldTransform_get(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native Matrix4 btCollisionObjectWrapper_getWorldTransform(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native long btCollisionObjectWrapper_getCollisionObject(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native long btCollisionObjectWrapper_getCollisionShape(long jarg1, btCollisionObjectWrapper jarg1_);
  public final static native long new_btEmptyAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native void delete_btEmptyAlgorithm(long jarg1);
  public final static native void delete_btActivatingCollisionAlgorithm(long jarg1);
  public final static native void btConvexTriangleCallback_m_triangleCount_set(long jarg1, btConvexTriangleCallback jarg1_, int jarg2);
  public final static native int btConvexTriangleCallback_m_triangleCount_get(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native void btConvexTriangleCallback_m_manifoldPtr_set(long jarg1, btConvexTriangleCallback jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native long btConvexTriangleCallback_m_manifoldPtr_get(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native long new_btConvexTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
  public final static native void btConvexTriangleCallback_setTimeStepAndCounters(long jarg1, btConvexTriangleCallback jarg1_, float jarg2, long jarg3, btDispatcherInfo jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btCollisionObjectWrapper jarg5_, long jarg6, btManifoldResult jarg6_);
  public final static native void btConvexTriangleCallback_clearWrapperData(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native void delete_btConvexTriangleCallback(long jarg1);
  public final static native void btConvexTriangleCallback_clearCache(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native Vector3 btConvexTriangleCallback_getAabbMin(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native Vector3 btConvexTriangleCallback_getAabbMax(long jarg1, btConvexTriangleCallback jarg1_);
  public final static native long new_btConvexConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
  public final static native void delete_btConvexConcaveCollisionAlgorithm(long jarg1);
  public final static native void btConvexConcaveCollisionAlgorithm_clearCache(long jarg1, btConvexConcaveCollisionAlgorithm jarg1_);
  public final static native long new_btConvexPlaneCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5, int jarg6, int jarg7);
  public final static native void delete_btConvexPlaneCollisionAlgorithm(long jarg1);
  public final static native void btConvexPlaneCollisionAlgorithm_collideSingleContact(long jarg1, btConvexPlaneCollisionAlgorithm jarg1_, Quaternion jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btDispatcherInfo jarg5_, long jarg6, btManifoldResult jarg6_);
  public final static native void delete_btCollisionConfiguration(long jarg1);
  public final static native long btCollisionConfiguration_getPersistentManifoldPool(long jarg1, btCollisionConfiguration jarg1_);
  public final static native long btCollisionConfiguration_getCollisionAlgorithmPool(long jarg1, btCollisionConfiguration jarg1_);
  public final static native long btCollisionConfiguration_getStackAllocator(long jarg1, btCollisionConfiguration jarg1_);
  public final static native long btCollisionConfiguration_getCollisionAlgorithmCreateFunc(long jarg1, btCollisionConfiguration jarg1_, int jarg2, int jarg3);
  public final static native void btDefaultCollisionConstructionInfo_m_stackAlloc_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, long jarg2, btStackAlloc jarg2_);
  public final static native long btDefaultCollisionConstructionInfo_m_stackAlloc_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_m_persistentManifoldPool_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, long jarg2, btPoolAllocator jarg2_);
  public final static native long btDefaultCollisionConstructionInfo_m_persistentManifoldPool_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, long jarg2, btPoolAllocator jarg2_);
  public final static native long btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, int jarg2);
  public final static native int btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, int jarg2);
  public final static native int btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, int jarg2);
  public final static native int btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_m_defaultStackAllocatorSize_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, int jarg2);
  public final static native int btDefaultCollisionConstructionInfo_m_defaultStackAllocatorSize_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native void btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_set(long jarg1, btDefaultCollisionConstructionInfo jarg1_, int jarg2);
  public final static native int btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_get(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native long new_btDefaultCollisionConstructionInfo();
  public final static native void delete_btDefaultCollisionConstructionInfo(long jarg1);
  public final static native long new_btDefaultCollisionConfiguration__SWIG_0(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native long new_btDefaultCollisionConfiguration__SWIG_1();
  public final static native void delete_btDefaultCollisionConfiguration(long jarg1);
  public final static native long btDefaultCollisionConfiguration_getSimplexSolver(long jarg1, btDefaultCollisionConfiguration jarg1_);
  public final static native void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0(long jarg1, btDefaultCollisionConfiguration jarg1_, int jarg2, int jarg3);
  public final static native void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1(long jarg1, btDefaultCollisionConfiguration jarg1_, int jarg2);
  public final static native void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2(long jarg1, btDefaultCollisionConfiguration jarg1_);
  public final static native void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0(long jarg1, btDefaultCollisionConfiguration jarg1_, int jarg2, int jarg3);
  public final static native void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1(long jarg1, btDefaultCollisionConfiguration jarg1_, int jarg2);
  public final static native void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2(long jarg1, btDefaultCollisionConfiguration jarg1_);
  public final static native void gContactAddedCallback_set(long jarg1);
  public final static native long gContactAddedCallback_get();
  public final static native long new_btManifoldResult__SWIG_0();
  public final static native long new_btManifoldResult__SWIG_1(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
  public final static native void delete_btManifoldResult(long jarg1);
  public final static native void btManifoldResult_setPersistentManifold(long jarg1, btManifoldResult jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native long btManifoldResult_getPersistentManifold__SWIG_0(long jarg1, btManifoldResult jarg1_);
  public final static native void btManifoldResult_setShapeIdentifiersA(long jarg1, btManifoldResult jarg1_, int jarg2, int jarg3);
  public final static native void btManifoldResult_setShapeIdentifiersB(long jarg1, btManifoldResult jarg1_, int jarg2, int jarg3);
  public final static native void btManifoldResult_addContactPoint(long jarg1, btManifoldResult jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native void btManifoldResult_refreshContactPoints(long jarg1, btManifoldResult jarg1_);
  public final static native long btManifoldResult_getBody0Wrap(long jarg1, btManifoldResult jarg1_);
  public final static native long btManifoldResult_getBody1Wrap(long jarg1, btManifoldResult jarg1_);
  public final static native void btManifoldResult_setBody0Wrap(long jarg1, btManifoldResult jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
  public final static native void btManifoldResult_setBody1Wrap(long jarg1, btManifoldResult jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
  public final static native long btManifoldResult_getBody0Internal(long jarg1, btManifoldResult jarg1_);
  public final static native long btManifoldResult_getBody1Internal(long jarg1, btManifoldResult jarg1_);
  public final static native float btManifoldResult_calculateCombinedRestitution(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native float btManifoldResult_calculateCombinedFriction(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_1(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native void delete_btSphereSphereCollisionAlgorithm(long jarg1);
  public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native void delete_btBoxBoxCollisionAlgorithm(long jarg1);
  public final static native void btCollisionAlgorithmCreateFunc_m_swapped_set(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, boolean jarg2);
  public final static native boolean btCollisionAlgorithmCreateFunc_m_swapped_get(long jarg1, btCollisionAlgorithmCreateFunc jarg1_);
  public final static native long new_btCollisionAlgorithmCreateFunc();
  public final static native void delete_btCollisionAlgorithmCreateFunc(long jarg1);
  public final static native long btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native void delete_btBox2dBox2dCollisionAlgorithm(long jarg1);
  public final static native void btElement_m_id_set(long jarg1, btElement jarg1_, int jarg2);
  public final static native int btElement_m_id_get(long jarg1, btElement jarg1_);
  public final static native void btElement_m_sz_set(long jarg1, btElement jarg1_, int jarg2);
  public final static native int btElement_m_sz_get(long jarg1, btElement jarg1_);
  public final static native long new_btElement();
  public final static native void delete_btElement(long jarg1);
  public final static native long new_btUnionFind();
  public final static native void delete_btUnionFind(long jarg1);
  public final static native void btUnionFind_sortIslands(long jarg1, btUnionFind jarg1_);
  public final static native void btUnionFind_reset(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native int btUnionFind_getNumElements(long jarg1, btUnionFind jarg1_);
  public final static native boolean btUnionFind_isRoot(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native long btUnionFind_getElement__SWIG_0(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native void btUnionFind_allocate(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native void btUnionFind_Free(long jarg1, btUnionFind jarg1_);
  public final static native int btUnionFind_find__SWIG_0(long jarg1, btUnionFind jarg1_, int jarg2, int jarg3);
  public final static native void btUnionFind_unite(long jarg1, btUnionFind jarg1_, int jarg2, int jarg3);
  public final static native int btUnionFind_find__SWIG_1(long jarg1, btUnionFind jarg1_, int jarg2);
  public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
  public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_1(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native void delete_btSphereTriangleCollisionAlgorithm(long jarg1);
  public final static native long new_btSimulationIslandManager();
  public final static native void delete_btSimulationIslandManager(long jarg1);
  public final static native void btSimulationIslandManager_initUnionFind(long jarg1, btSimulationIslandManager jarg1_, int jarg2);
  public final static native long btSimulationIslandManager_getUnionFind(long jarg1, btSimulationIslandManager jarg1_);
  public final static native void btSimulationIslandManager_updateActivationState(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btCollisionWorld jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native void btSimulationIslandManager_storeIslandActivationState(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btCollisionWorld jarg2_);
  public final static native void btSimulationIslandManager_findUnions(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btDispatcher jarg2_, long jarg3, btCollisionWorld jarg3_);
  public final static native void btSimulationIslandManager_buildAndProcessIslands(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btDispatcher jarg2_, long jarg3, btCollisionWorld jarg3_, long jarg4);
  public final static native void btSimulationIslandManager_buildIslands(long jarg1, btSimulationIslandManager jarg1_, long jarg2, btDispatcher jarg2_, long jarg3, btCollisionWorld jarg3_);
  public final static native boolean btSimulationIslandManager_getSplitIslands(long jarg1, btSimulationIslandManager jarg1_);
  public final static native void btSimulationIslandManager_setSplitIslands(long jarg1, btSimulationIslandManager jarg1_, boolean jarg2);
  public final static native long new_btGhostObject();
  public final static native void delete_btGhostObject(long jarg1);
  public final static native void btGhostObject_convexSweepTest__SWIG_0(long jarg1, btGhostObject jarg1_, long jarg2, btConvexShape jarg2_, Matrix4 jarg3, Matrix4 jarg4, long jarg5, ConvexResultCallback jarg5_, float jarg6);
  public final static native void btGhostObject_convexSweepTest__SWIG_1(long jarg1, btGhostObject jarg1_, long jarg2, btConvexShape jarg2_, Matrix4 jarg3, Matrix4 jarg4, long jarg5, ConvexResultCallback jarg5_);
  public final static native void btGhostObject_rayTest(long jarg1, btGhostObject jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, RayResultCallback jarg4_);
  public final static native void btGhostObject_addOverlappingObjectInternal__SWIG_0(long jarg1, btGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native void btGhostObject_addOverlappingObjectInternal__SWIG_1(long jarg1, btGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native void btGhostObject_removeOverlappingObjectInternal__SWIG_0(long jarg1, btGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_, long jarg4, btBroadphaseProxy jarg4_);
  public final static native void btGhostObject_removeOverlappingObjectInternal__SWIG_1(long jarg1, btGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native int btGhostObject_getNumOverlappingObjects(long jarg1, btGhostObject jarg1_);
  public final static native long btGhostObject_getOverlappingObject__SWIG_0(long jarg1, btGhostObject jarg1_, int jarg2);
  public final static native long btGhostObject_getOverlappingPairs__SWIG_0(long jarg1, btGhostObject jarg1_);
  public final static native long btGhostObject_upcast__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native long new_btPairCachingGhostObject();
  public final static native void delete_btPairCachingGhostObject(long jarg1);
  public final static native void btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_0(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
  public final static native void btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_1(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native void btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_0(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_, long jarg4, btBroadphaseProxy jarg4_);
  public final static native void btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_1(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btDispatcher jarg3_);
  public final static native long btPairCachingGhostObject_getOverlappingPairCache(long jarg1, btPairCachingGhostObject jarg1_);
  public final static native long new_btGhostPairCallback();
  public final static native void delete_btGhostPairCallback(long jarg1);
  public final static native void LocalShapeInfo_m_shapePart_set(long jarg1, LocalShapeInfo jarg1_, int jarg2);
  public final static native int LocalShapeInfo_m_shapePart_get(long jarg1, LocalShapeInfo jarg1_);
  public final static native void LocalShapeInfo_m_triangleIndex_set(long jarg1, LocalShapeInfo jarg1_, int jarg2);
  public final static native int LocalShapeInfo_m_triangleIndex_get(long jarg1, LocalShapeInfo jarg1_);
  public final static native long new_LocalShapeInfo();
  public final static native void delete_LocalShapeInfo(long jarg1);
  public final static native long new_LocalRayResult(long jarg1, btCollisionObject jarg1_, long jarg2, LocalShapeInfo jarg2_, Vector3 jarg3, float jarg4);
  public final static native void LocalRayResult_m_collisionObject_set(long jarg1, LocalRayResult jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long LocalRayResult_m_collisionObject_get(long jarg1, LocalRayResult jarg1_);
  public final static native void LocalRayResult_m_localShapeInfo_set(long jarg1, LocalRayResult jarg1_, long jarg2, LocalShapeInfo jarg2_);
  public final static native long LocalRayResult_m_localShapeInfo_get(long jarg1, LocalRayResult jarg1_);
  public final static native void LocalRayResult_m_hitNormalLocal_set(long jarg1, LocalRayResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long LocalRayResult_m_hitNormalLocal_get(long jarg1, LocalRayResult jarg1_);
  public final static native void LocalRayResult_m_hitFraction_set(long jarg1, LocalRayResult jarg1_, float jarg2);
  public final static native float LocalRayResult_m_hitFraction_get(long jarg1, LocalRayResult jarg1_);
  public final static native void delete_LocalRayResult(long jarg1);
  public final static native void RayResultCallback_m_closestHitFraction_set(long jarg1, RayResultCallback jarg1_, float jarg2);
  public final static native float RayResultCallback_m_closestHitFraction_get(long jarg1, RayResultCallback jarg1_);
  public final static native void RayResultCallback_m_collisionObject_set(long jarg1, RayResultCallback jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long RayResultCallback_m_collisionObject_get(long jarg1, RayResultCallback jarg1_);
  public final static native void RayResultCallback_m_collisionFilterGroup_set(long jarg1, RayResultCallback jarg1_, short jarg2);
  public final static native short RayResultCallback_m_collisionFilterGroup_get(long jarg1, RayResultCallback jarg1_);
  public final static native void RayResultCallback_m_collisionFilterMask_set(long jarg1, RayResultCallback jarg1_, short jarg2);
  public final static native short RayResultCallback_m_collisionFilterMask_get(long jarg1, RayResultCallback jarg1_);
  public final static native void RayResultCallback_m_flags_set(long jarg1, RayResultCallback jarg1_, long jarg2);
  public final static native long RayResultCallback_m_flags_get(long jarg1, RayResultCallback jarg1_);
  public final static native void delete_RayResultCallback(long jarg1);
  public final static native boolean RayResultCallback_hasHit(long jarg1, RayResultCallback jarg1_);
  public final static native long new_RayResultCallback();
  public final static native boolean RayResultCallback_needsCollision(long jarg1, RayResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native boolean RayResultCallback_needsCollisionSwigExplicitRayResultCallback(long jarg1, RayResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native float RayResultCallback_addSingleResult(long jarg1, RayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native void RayResultCallback_director_connect(RayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void RayResultCallback_change_ownership(RayResultCallback obj, long cptr, boolean take_or_release);
  public final static native long new_ClosestRayResultCallback(Vector3 jarg1, Vector3 jarg2);
  public final static native void ClosestRayResultCallback_m_rayFromWorld_set(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestRayResultCallback_m_rayFromWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
  public final static native void ClosestRayResultCallback_m_rayToWorld_set(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestRayResultCallback_m_rayToWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
  public final static native void ClosestRayResultCallback_m_hitNormalWorld_set(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestRayResultCallback_m_hitNormalWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
  public final static native void ClosestRayResultCallback_m_hitPointWorld_set(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestRayResultCallback_m_hitPointWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
  public final static native float ClosestRayResultCallback_addSingleResult(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native float ClosestRayResultCallback_addSingleResultSwigExplicitClosestRayResultCallback(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native void delete_ClosestRayResultCallback(long jarg1);
  public final static native void ClosestRayResultCallback_director_connect(ClosestRayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ClosestRayResultCallback_change_ownership(ClosestRayResultCallback obj, long cptr, boolean take_or_release);
  public final static native long new_AllHitsRayResultCallback(Vector3 jarg1, Vector3 jarg2);
  public final static native void AllHitsRayResultCallback_m_collisionObjects_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2);
  public final static native long AllHitsRayResultCallback_m_collisionObjects_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native void AllHitsRayResultCallback_m_rayFromWorld_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long AllHitsRayResultCallback_m_rayFromWorld_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native void AllHitsRayResultCallback_m_rayToWorld_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long AllHitsRayResultCallback_m_rayToWorld_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native void AllHitsRayResultCallback_m_hitNormalWorld_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2);
  public final static native long AllHitsRayResultCallback_m_hitNormalWorld_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native void AllHitsRayResultCallback_m_hitPointWorld_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2);
  public final static native long AllHitsRayResultCallback_m_hitPointWorld_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native void AllHitsRayResultCallback_m_hitFractions_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2);
  public final static native long AllHitsRayResultCallback_m_hitFractions_get(long jarg1, AllHitsRayResultCallback jarg1_);
  public final static native float AllHitsRayResultCallback_addSingleResult(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native float AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
  public final static native void delete_AllHitsRayResultCallback(long jarg1);
  public final static native void AllHitsRayResultCallback_director_connect(AllHitsRayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AllHitsRayResultCallback_change_ownership(AllHitsRayResultCallback obj, long cptr, boolean take_or_release);
  public final static native long new_LocalConvexResult(long jarg1, btCollisionObject jarg1_, long jarg2, LocalShapeInfo jarg2_, Vector3 jarg3, Vector3 jarg4, float jarg5);
  public final static native void LocalConvexResult_m_hitCollisionObject_set(long jarg1, LocalConvexResult jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long LocalConvexResult_m_hitCollisionObject_get(long jarg1, LocalConvexResult jarg1_);
  public final static native void LocalConvexResult_m_localShapeInfo_set(long jarg1, LocalConvexResult jarg1_, long jarg2, LocalShapeInfo jarg2_);
  public final static native long LocalConvexResult_m_localShapeInfo_get(long jarg1, LocalConvexResult jarg1_);
  public final static native void LocalConvexResult_m_hitNormalLocal_set(long jarg1, LocalConvexResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long LocalConvexResult_m_hitNormalLocal_get(long jarg1, LocalConvexResult jarg1_);
  public final static native void LocalConvexResult_m_hitPointLocal_set(long jarg1, LocalConvexResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long LocalConvexResult_m_hitPointLocal_get(long jarg1, LocalConvexResult jarg1_);
  public final static native void LocalConvexResult_m_hitFraction_set(long jarg1, LocalConvexResult jarg1_, float jarg2);
  public final static native float LocalConvexResult_m_hitFraction_get(long jarg1, LocalConvexResult jarg1_);
  public final static native void delete_LocalConvexResult(long jarg1);
  public final static native void ConvexResultCallback_m_closestHitFraction_set(long jarg1, ConvexResultCallback jarg1_, float jarg2);
  public final static native float ConvexResultCallback_m_closestHitFraction_get(long jarg1, ConvexResultCallback jarg1_);
  public final static native void ConvexResultCallback_m_collisionFilterGroup_set(long jarg1, ConvexResultCallback jarg1_, short jarg2);
  public final static native short ConvexResultCallback_m_collisionFilterGroup_get(long jarg1, ConvexResultCallback jarg1_);
  public final static native void ConvexResultCallback_m_collisionFilterMask_set(long jarg1, ConvexResultCallback jarg1_, short jarg2);
  public final static native short ConvexResultCallback_m_collisionFilterMask_get(long jarg1, ConvexResultCallback jarg1_);
  public final static native long new_ConvexResultCallback();
  public final static native void delete_ConvexResultCallback(long jarg1);
  public final static native boolean ConvexResultCallback_hasHit(long jarg1, ConvexResultCallback jarg1_);
  public final static native boolean ConvexResultCallback_needsCollision(long jarg1, ConvexResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native boolean ConvexResultCallback_needsCollisionSwigExplicitConvexResultCallback(long jarg1, ConvexResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native float ConvexResultCallback_addSingleResult(long jarg1, ConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
  public final static native void ConvexResultCallback_director_connect(ConvexResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ConvexResultCallback_change_ownership(ConvexResultCallback obj, long cptr, boolean take_or_release);
  public final static native long new_ClosestConvexResultCallback(Vector3 jarg1, Vector3 jarg2);
  public final static native void ClosestConvexResultCallback_m_convexFromWorld_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestConvexResultCallback_m_convexFromWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
  public final static native void ClosestConvexResultCallback_m_convexToWorld_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestConvexResultCallback_m_convexToWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
  public final static native void ClosestConvexResultCallback_m_hitNormalWorld_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestConvexResultCallback_m_hitNormalWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
  public final static native void ClosestConvexResultCallback_m_hitPointWorld_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long ClosestConvexResultCallback_m_hitPointWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
  public final static native void ClosestConvexResultCallback_m_hitCollisionObject_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long ClosestConvexResultCallback_m_hitCollisionObject_get(long jarg1, ClosestConvexResultCallback jarg1_);
  public final static native float ClosestConvexResultCallback_addSingleResult(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
  public final static native float ClosestConvexResultCallback_addSingleResultSwigExplicitClosestConvexResultCallback(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
  public final static native void delete_ClosestConvexResultCallback(long jarg1);
  public final static native void ClosestConvexResultCallback_director_connect(ClosestConvexResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ClosestConvexResultCallback_change_ownership(ClosestConvexResultCallback obj, long cptr, boolean take_or_release);
  public final static native void ContactResultCallback_m_collisionFilterGroup_set(long jarg1, ContactResultCallback jarg1_, short jarg2);
  public final static native short ContactResultCallback_m_collisionFilterGroup_get(long jarg1, ContactResultCallback jarg1_);
  public final static native void ContactResultCallback_m_collisionFilterMask_set(long jarg1, ContactResultCallback jarg1_, short jarg2);
  public final static native short ContactResultCallback_m_collisionFilterMask_get(long jarg1, ContactResultCallback jarg1_);
  public final static native long new_ContactResultCallback();
  public final static native void delete_ContactResultCallback(long jarg1);
  public final static native boolean ContactResultCallback_needsCollision(long jarg1, ContactResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native boolean ContactResultCallback_needsCollisionSwigExplicitContactResultCallback(long jarg1, ContactResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native float ContactResultCallback_addSingleResult(long jarg1, ContactResultCallback jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, long jarg6, btCollisionObjectWrapper jarg6_, int jarg7, int jarg8);
  public final static native void ContactResultCallback_director_connect(ContactResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactResultCallback_change_ownership(ContactResultCallback obj, long cptr, boolean take_or_release);
  public final static native long new_btCollisionWorld(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btCollisionConfiguration jarg3_);
  public final static native void delete_btCollisionWorld(long jarg1);
  public final static native void btCollisionWorld_setBroadphase(long jarg1, btCollisionWorld jarg1_, long jarg2, btBroadphaseInterface jarg2_);
  public final static native long btCollisionWorld_getBroadphase__SWIG_0(long jarg1, btCollisionWorld jarg1_);
  public final static native long btCollisionWorld_getPairCache(long jarg1, btCollisionWorld jarg1_);
  public final static native long btCollisionWorld_getDispatcher__SWIG_0(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_updateSingleAabb(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionWorld_updateAabbs(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_computeOverlappingPairs(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_setDebugDrawer(long jarg1, btCollisionWorld jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native long btCollisionWorld_getDebugDrawer(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_debugDrawWorld(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_debugDrawObject(long jarg1, btCollisionWorld jarg1_, Matrix4 jarg2, long jarg3, btCollisionShape jarg3_, Vector3 jarg4);
  public final static native int btCollisionWorld_getNumCollisionObjects(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_rayTest(long jarg1, btCollisionWorld jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, RayResultCallback jarg4_);
  public final static native void btCollisionWorld_convexSweepTest__SWIG_0(long jarg1, btCollisionWorld jarg1_, long jarg2, btConvexShape jarg2_, Matrix4 jarg3, Matrix4 jarg4, long jarg5, ConvexResultCallback jarg5_, float jarg6);
  public final static native void btCollisionWorld_convexSweepTest__SWIG_1(long jarg1, btCollisionWorld jarg1_, long jarg2, btConvexShape jarg2_, Matrix4 jarg3, Matrix4 jarg4, long jarg5, ConvexResultCallback jarg5_);
  public final static native void btCollisionWorld_contactTest(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, ContactResultCallback jarg3_);
  public final static native void btCollisionWorld_contactPairTest(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, ContactResultCallback jarg4_);
  public final static native void btCollisionWorld_rayTestSingle(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionShape jarg4_, Matrix4 jarg5, long jarg6, RayResultCallback jarg6_);
  public final static native void btCollisionWorld_rayTestSingleInternal(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, RayResultCallback jarg4_);
  public final static native void btCollisionWorld_objectQuerySingle(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, btCollisionObject jarg4_, long jarg5, btCollisionShape jarg5_, Matrix4 jarg6, long jarg7, ConvexResultCallback jarg7_, float jarg8);
  public final static native void btCollisionWorld_objectQuerySingleInternal(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, ConvexResultCallback jarg5_, float jarg6);
  public final static native void btCollisionWorld_addCollisionObject__SWIG_0(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3, short jarg4);
  public final static native void btCollisionWorld_addCollisionObject__SWIG_1(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3);
  public final static native void btCollisionWorld_addCollisionObject__SWIG_2(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long btCollisionWorld_getCollisionObjectArray__SWIG_0(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_removeCollisionObject(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionWorld_performDiscreteCollisionDetection(long jarg1, btCollisionWorld jarg1_);
  public final static native long btCollisionWorld_getDispatchInfo__SWIG_0(long jarg1, btCollisionWorld jarg1_);
  public final static native boolean btCollisionWorld_getForceUpdateAllAabbs(long jarg1, btCollisionWorld jarg1_);
  public final static native void btCollisionWorld_setForceUpdateAllAabbs(long jarg1, btCollisionWorld jarg1_, boolean jarg2);
  public final static native void btCollisionWorld_serialize(long jarg1, btCollisionWorld jarg1_, long jarg2);
  public final static native void ClosestNotMeConvexResultCallback_m_me_set(long jarg1, ClosestNotMeConvexResultCallback jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long ClosestNotMeConvexResultCallback_m_me_get(long jarg1, ClosestNotMeConvexResultCallback jarg1_);
  public final static native void ClosestNotMeConvexResultCallback_m_allowedPenetration_set(long jarg1, ClosestNotMeConvexResultCallback jarg1_, float jarg2);
  public final static native float ClosestNotMeConvexResultCallback_m_allowedPenetration_get(long jarg1, ClosestNotMeConvexResultCallback jarg1_);
  public final static native long new_ClosestNotMeConvexResultCallback(long jarg1, btCollisionObject jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void delete_ClosestNotMeConvexResultCallback(long jarg1);
  public final static native long new_ClosestNotMeRayResultCallback(long jarg1, btCollisionObject jarg1_);
  public final static native void delete_ClosestNotMeRayResultCallback(long jarg1);
  public final static native long new_btConvex2dConvex2dAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
  public final static native void delete_btConvex2dConvex2dAlgorithm(long jarg1);
  public final static native void btConvex2dConvex2dAlgorithm_setLowLevelOfDetail(long jarg1, btConvex2dConvex2dAlgorithm jarg1_, boolean jarg2);
  public final static native long btConvex2dConvex2dAlgorithm_getManifold(long jarg1, btConvex2dConvex2dAlgorithm jarg1_);
  public final static native void btBoxBoxDetector_m_box1_set(long jarg1, btBoxBoxDetector jarg1_, long jarg2, btBoxShape jarg2_);
  public final static native long btBoxBoxDetector_m_box1_get(long jarg1, btBoxBoxDetector jarg1_);
  public final static native void btBoxBoxDetector_m_box2_set(long jarg1, btBoxBoxDetector jarg1_, long jarg2, btBoxShape jarg2_);
  public final static native long btBoxBoxDetector_m_box2_get(long jarg1, btBoxBoxDetector jarg1_);
  public final static native long new_btBoxBoxDetector(long jarg1, btBoxShape jarg1_, long jarg2, btBoxShape jarg2_);
  public final static native void delete_btBoxBoxDetector(long jarg1);
  public final static native void btBoxBoxDetector_getClosestPoints__SWIG_0(long jarg1, btBoxBoxDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_, boolean jarg5);
  public final static native void btBoxBoxDetector_getClosestPoints__SWIG_1(long jarg1, btBoxBoxDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_);
  public final static native long new_btSphereBoxCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
  public final static native void delete_btSphereBoxCollisionAlgorithm(long jarg1);
  public final static native boolean btSphereBoxCollisionAlgorithm_getSphereDistance(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, Vector3 jarg3, Vector3 jarg4, long jarg5, Vector3 jarg6, float jarg7, float jarg8);
  public final static native float btSphereBoxCollisionAlgorithm_getSpherePenetration(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native int btCollisionDispatcher_getDispatcherFlags(long jarg1, btCollisionDispatcher jarg1_);
  public final static native void btCollisionDispatcher_setDispatcherFlags(long jarg1, btCollisionDispatcher jarg1_, int jarg2);
  public final static native void btCollisionDispatcher_registerCollisionCreateFunc(long jarg1, btCollisionDispatcher jarg1_, int jarg2, int jarg3, long jarg4, btCollisionAlgorithmCreateFunc jarg4_);
  public final static native long btCollisionDispatcher_getManifoldByIndexInternal__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, int jarg2);
  public final static native long new_btCollisionDispatcher(long jarg1, btCollisionConfiguration jarg1_);
  public final static native void delete_btCollisionDispatcher(long jarg1);
  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btPersistentManifold jarg4_);
  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_1(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
  public final static native void btCollisionDispatcher_setNearCallback(long jarg1, btCollisionDispatcher jarg1_, long jarg2);
  public final static native long btCollisionDispatcher_getNearCallback(long jarg1, btCollisionDispatcher jarg1_);
  public final static native void btCollisionDispatcher_defaultNearCallback(long jarg1, btBroadphasePair jarg1_, long jarg2, btCollisionDispatcher jarg2_, long jarg3, btDispatcherInfo jarg3_);
  public final static native long btCollisionDispatcher_getCollisionConfiguration__SWIG_0(long jarg1, btCollisionDispatcher jarg1_);
  public final static native void btCollisionDispatcher_setCollisionConfiguration(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionConfiguration jarg2_);
  public final static native long btCollisionDispatcher_getInternalManifoldPool__SWIG_0(long jarg1, btCollisionDispatcher jarg1_);
  public final static native long new_btConvexConvexAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
  public final static native void delete_btConvexConvexAlgorithm(long jarg1);
  public final static native void btConvexConvexAlgorithm_setLowLevelOfDetail(long jarg1, btConvexConvexAlgorithm jarg1_, boolean jarg2);
  public final static native long btConvexConvexAlgorithm_getManifold(long jarg1, btConvexConvexAlgorithm jarg1_);
  public final static native void SphereTriangleDetector_getClosestPoints__SWIG_0(long jarg1, SphereTriangleDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_, boolean jarg5);
  public final static native void SphereTriangleDetector_getClosestPoints__SWIG_1(long jarg1, SphereTriangleDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_);
  public final static native long new_SphereTriangleDetector(long jarg1, btSphereShape jarg1_, long jarg2, btTriangleShape jarg2_, float jarg3);
  public final static native void delete_SphereTriangleDetector(long jarg1);
  public final static native boolean SphereTriangleDetector_collide(long jarg1, SphereTriangleDetector jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, long jarg6, float jarg7);
  public final static native void btGenerateInternalEdgeInfo(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleInfoMap jarg2_);
  public final static native void btAdjustInternalEdgeContacts__SWIG_0(long jarg1, btManifoldPoint jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void btAdjustInternalEdgeContacts__SWIG_1(long jarg1, btManifoldPoint jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5);
  public final static native long new_btCompoundCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
  public final static native void delete_btCompoundCollisionAlgorithm(long jarg1);
  public final static native void delete_btConvexCast(long jarg1);
  public final static native boolean btConvexCast_calcTimeOfImpact(long jarg1, btConvexCast jarg1_, Matrix4 jarg2, Matrix4 jarg3, Matrix4 jarg4, Matrix4 jarg5, long jarg6);
  public final static native long new_btSubsimplexConvexCast(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, long jarg3);
  public final static native void delete_btSubsimplexConvexCast(long jarg1);
  public final static native void btPolyhedralContactClipping_clipHullAgainstHull(Vector3 jarg1, long jarg2, btConvexPolyhedron jarg2_, long jarg3, btConvexPolyhedron jarg3_, Matrix4 jarg4, Matrix4 jarg5, float jarg6, float jarg7, long jarg8);
  public final static native void btPolyhedralContactClipping_clipFaceAgainstHull(Vector3 jarg1, long jarg2, btConvexPolyhedron jarg2_, Matrix4 jarg3, long jarg4, float jarg5, float jarg6, long jarg7);
  public final static native boolean btPolyhedralContactClipping_findSeparatingAxis(long jarg1, btConvexPolyhedron jarg1_, long jarg2, btConvexPolyhedron jarg2_, Matrix4 jarg3, Matrix4 jarg4, Vector3 jarg5, long jarg6);
  public final static native void btPolyhedralContactClipping_clipFace(long jarg1, long jarg2, Vector3 jarg3, float jarg4);
  public final static native long new_btPolyhedralContactClipping();
  public final static native void delete_btPolyhedralContactClipping(long jarg1);
  public final static native void gContactBreakingThreshold_set(float jarg1);
  public final static native float gContactBreakingThreshold_get();
  public final static native void gContactDestroyedCallback_set(long jarg1);
  public final static native long gContactDestroyedCallback_get();
  public final static native void gContactProcessedCallback_set(long jarg1);
  public final static native long gContactProcessedCallback_get();
  public final static native void btPersistentManifold_m_companionIdA_set(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native int btPersistentManifold_m_companionIdA_get(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_m_companionIdB_set(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native int btPersistentManifold_m_companionIdB_get(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_m_index1a_set(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native int btPersistentManifold_m_index1a_get(long jarg1, btPersistentManifold jarg1_);
  public final static native long new_btPersistentManifold__SWIG_0();
  public final static native long new_btPersistentManifold__SWIG_1(long jarg1, btCollisionObject jarg1_, long jarg2, btCollisionObject jarg2_, int jarg3, float jarg4, float jarg5);
  public final static native long btPersistentManifold_getBody0(long jarg1, btPersistentManifold jarg1_);
  public final static native long btPersistentManifold_getBody1(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_setBodies(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
  public final static native void btPersistentManifold_clearUserCache(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_);
  public final static native int btPersistentManifold_getNumContacts(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_setNumContacts(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native long btPersistentManifold_getContactPoint__SWIG_0(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native float btPersistentManifold_getContactBreakingThreshold(long jarg1, btPersistentManifold jarg1_);
  public final static native float btPersistentManifold_getContactProcessingThreshold(long jarg1, btPersistentManifold jarg1_);
  public final static native void btPersistentManifold_setContactBreakingThreshold(long jarg1, btPersistentManifold jarg1_, float jarg2);
  public final static native void btPersistentManifold_setContactProcessingThreshold(long jarg1, btPersistentManifold jarg1_, float jarg2);
  public final static native int btPersistentManifold_getCacheEntry(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_);
  public final static native int btPersistentManifold_addManifoldPoint__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_, boolean jarg3);
  public final static native int btPersistentManifold_addManifoldPoint__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_);
  public final static native void btPersistentManifold_removeContactPoint(long jarg1, btPersistentManifold jarg1_, int jarg2);
  public final static native void btPersistentManifold_replaceContactPoint(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3);
  public final static native boolean btPersistentManifold_validContactDistance(long jarg1, btPersistentManifold jarg1_, long jarg2, btManifoldPoint jarg2_);
  public final static native void btPersistentManifold_refreshContactPoints(long jarg1, btPersistentManifold jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native void btPersistentManifold_clearManifold(long jarg1, btPersistentManifold jarg1_);
  public final static native void delete_btPersistentManifold(long jarg1);
  public final static native void btGjkPairDetector_m_lastUsedMethod_set(long jarg1, btGjkPairDetector jarg1_, int jarg2);
  public final static native int btGjkPairDetector_m_lastUsedMethod_get(long jarg1, btGjkPairDetector jarg1_);
  public final static native void btGjkPairDetector_m_curIter_set(long jarg1, btGjkPairDetector jarg1_, int jarg2);
  public final static native int btGjkPairDetector_m_curIter_get(long jarg1, btGjkPairDetector jarg1_);
  public final static native void btGjkPairDetector_m_degenerateSimplex_set(long jarg1, btGjkPairDetector jarg1_, int jarg2);
  public final static native int btGjkPairDetector_m_degenerateSimplex_get(long jarg1, btGjkPairDetector jarg1_);
  public final static native void btGjkPairDetector_m_catchDegeneracies_set(long jarg1, btGjkPairDetector jarg1_, int jarg2);
  public final static native int btGjkPairDetector_m_catchDegeneracies_get(long jarg1, btGjkPairDetector jarg1_);
  public final static native long new_btGjkPairDetector__SWIG_0(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, long jarg3, long jarg4, btConvexPenetrationDepthSolver jarg4_);
  public final static native long new_btGjkPairDetector__SWIG_1(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, int jarg3, int jarg4, float jarg5, float jarg6, long jarg7, long jarg8, btConvexPenetrationDepthSolver jarg8_);
  public final static native void delete_btGjkPairDetector(long jarg1);
  public final static native void btGjkPairDetector_getClosestPoints__SWIG_0(long jarg1, btGjkPairDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_, boolean jarg5);
  public final static native void btGjkPairDetector_getClosestPoints__SWIG_1(long jarg1, btGjkPairDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_);
  public final static native void btGjkPairDetector_getClosestPointsNonVirtual(long jarg1, btGjkPairDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_);
  public final static native void btGjkPairDetector_setMinkowskiA(long jarg1, btGjkPairDetector jarg1_, long jarg2, btConvexShape jarg2_);
  public final static native void btGjkPairDetector_setMinkowskiB(long jarg1, btGjkPairDetector jarg1_, long jarg2, btConvexShape jarg2_);
  public final static native void btGjkPairDetector_setCachedSeperatingAxis(long jarg1, btGjkPairDetector jarg1_, Vector3 jarg2);
  public final static native Vector3 btGjkPairDetector_getCachedSeparatingAxis(long jarg1, btGjkPairDetector jarg1_);
  public final static native float btGjkPairDetector_getCachedSeparatingDistance(long jarg1, btGjkPairDetector jarg1_);
  public final static native void btGjkPairDetector_setPenetrationDepthSolver(long jarg1, btGjkPairDetector jarg1_, long jarg2, btConvexPenetrationDepthSolver jarg2_);
  public final static native void btGjkPairDetector_setIgnoreMargin(long jarg1, btGjkPairDetector jarg1_, boolean jarg2);
  public final static native void delete_btConvexPenetrationDepthSolver(long jarg1);
  public final static native boolean btConvexPenetrationDepthSolver_calcPenDepth(long jarg1, btConvexPenetrationDepthSolver jarg1_, long jarg2, long jarg3, btConvexShape jarg3_, long jarg4, btConvexShape jarg4_, Matrix4 jarg5, Matrix4 jarg6, Vector3 jarg7, Vector3 jarg8, Vector3 jarg9, long jarg10, btIDebugDraw jarg10_, long jarg11, btStackAlloc jarg11_);
  public final static native long new_btMinkowskiPenetrationDepthSolver();
  public final static native void delete_btMinkowskiPenetrationDepthSolver(long jarg1);
  public final static native long new_btGjkConvexCast(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, long jarg3);
  public final static native void delete_btGjkConvexCast(long jarg1);
  public final static native void btConstraintRow_m_normal_set(long jarg1, btConstraintRow jarg1_, float[] jarg2);
  public final static native float[] btConstraintRow_m_normal_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_m_rhs_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_m_rhs_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_m_jacDiagInv_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_m_jacDiagInv_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_m_lowerLimit_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_m_lowerLimit_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_m_upperLimit_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_m_upperLimit_get(long jarg1, btConstraintRow jarg1_);
  public final static native void btConstraintRow_m_accumImpulse_set(long jarg1, btConstraintRow jarg1_, float jarg2);
  public final static native float btConstraintRow_m_accumImpulse_get(long jarg1, btConstraintRow jarg1_);
  public final static native long new_btConstraintRow();
  public final static native void delete_btConstraintRow(long jarg1);
  public final static native long new_btManifoldPoint__SWIG_0();
  public final static native long new_btManifoldPoint__SWIG_1(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native void btManifoldPoint_m_localPointA_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btManifoldPoint_m_localPointA_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_localPointB_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btManifoldPoint_m_localPointB_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_positionWorldOnB_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btManifoldPoint_m_positionWorldOnB_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_positionWorldOnA_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btManifoldPoint_m_positionWorldOnA_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_normalWorldOnB_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btManifoldPoint_m_normalWorldOnB_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_distance1_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_distance1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_combinedFriction_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_combinedFriction_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_combinedRollingFriction_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_combinedRollingFriction_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_combinedRestitution_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_combinedRestitution_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_partId0_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_m_partId0_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_partId1_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_m_partId1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_index0_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_m_index0_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_index1_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_m_index1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_userPersistentData_set(long jarg1, btManifoldPoint jarg1_, long jarg2);
  public final static native long btManifoldPoint_m_userPersistentData_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_lateralFrictionInitialized_set(long jarg1, btManifoldPoint jarg1_, boolean jarg2);
  public final static native boolean btManifoldPoint_m_lateralFrictionInitialized_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_appliedImpulse_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_appliedImpulse_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_appliedImpulseLateral1_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_appliedImpulseLateral1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_appliedImpulseLateral2_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_appliedImpulseLateral2_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_contactMotion1_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_contactMotion1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_contactMotion2_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_contactMotion2_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_contactCFM1_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_contactCFM1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_contactCFM2_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_m_contactCFM2_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_lifeTime_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native int btManifoldPoint_m_lifeTime_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_lateralFrictionDir1_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btManifoldPoint_m_lateralFrictionDir1_get(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_m_lateralFrictionDir2_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btManifoldPoint_m_lateralFrictionDir2_get(long jarg1, btManifoldPoint jarg1_);
  public final static native float btManifoldPoint_getDistance(long jarg1, btManifoldPoint jarg1_);
  public final static native int btManifoldPoint_getLifeTime(long jarg1, btManifoldPoint jarg1_);
  public final static native Vector3 btManifoldPoint_getPositionWorldOnA(long jarg1, btManifoldPoint jarg1_);
  public final static native Vector3 btManifoldPoint_getPositionWorldOnB(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_setDistance(long jarg1, btManifoldPoint jarg1_, float jarg2);
  public final static native float btManifoldPoint_getAppliedImpulse(long jarg1, btManifoldPoint jarg1_);
  public final static native int btManifoldPoint_getUserValue(long jarg1, btManifoldPoint jarg1_);
  public final static native void btManifoldPoint_setUserValue(long jarg1, btManifoldPoint jarg1_, int jarg2);
  public final static native void delete_btManifoldPoint(long jarg1);
  public final static native long new_btContinuousConvexCollision__SWIG_0(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, long jarg3, long jarg4, btConvexPenetrationDepthSolver jarg4_);
  public final static native long new_btContinuousConvexCollision__SWIG_1(long jarg1, btConvexShape jarg1_, long jarg2, btStaticPlaneShape jarg2_);
  public final static native void delete_btContinuousConvexCollision(long jarg1);
  public final static native void btTriangleRaycastCallback_m_from_set(long jarg1, btTriangleRaycastCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangleRaycastCallback_m_from_get(long jarg1, btTriangleRaycastCallback jarg1_);
  public final static native void btTriangleRaycastCallback_m_to_set(long jarg1, btTriangleRaycastCallback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTriangleRaycastCallback_m_to_get(long jarg1, btTriangleRaycastCallback jarg1_);
  public final static native void btTriangleRaycastCallback_m_flags_set(long jarg1, btTriangleRaycastCallback jarg1_, long jarg2);
  public final static native long btTriangleRaycastCallback_m_flags_get(long jarg1, btTriangleRaycastCallback jarg1_);
  public final static native void btTriangleRaycastCallback_m_hitFraction_set(long jarg1, btTriangleRaycastCallback jarg1_, float jarg2);
  public final static native float btTriangleRaycastCallback_m_hitFraction_get(long jarg1, btTriangleRaycastCallback jarg1_);
  public final static native float btTriangleRaycastCallback_reportHit(long jarg1, btTriangleRaycastCallback jarg1_, Vector3 jarg2, float jarg3, int jarg4, int jarg5);
  public final static native void delete_btTriangleRaycastCallback(long jarg1);
  public final static native void btTriangleConvexcastCallback_m_convexShape_set(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btConvexShape jarg2_);
  public final static native long btTriangleConvexcastCallback_m_convexShape_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_m_convexShapeFrom_set(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btTriangleConvexcastCallback_m_convexShapeFrom_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_m_convexShapeTo_set(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btTriangleConvexcastCallback_m_convexShapeTo_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_m_triangleToWorld_set(long jarg1, btTriangleConvexcastCallback jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btTriangleConvexcastCallback_m_triangleToWorld_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_m_hitFraction_set(long jarg1, btTriangleConvexcastCallback jarg1_, float jarg2);
  public final static native float btTriangleConvexcastCallback_m_hitFraction_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_m_triangleCollisionMargin_set(long jarg1, btTriangleConvexcastCallback jarg1_, float jarg2);
  public final static native float btTriangleConvexcastCallback_m_triangleCollisionMargin_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native void btTriangleConvexcastCallback_m_allowedPenetration_set(long jarg1, btTriangleConvexcastCallback jarg1_, float jarg2);
  public final static native float btTriangleConvexcastCallback_m_allowedPenetration_get(long jarg1, btTriangleConvexcastCallback jarg1_);
  public final static native float btTriangleConvexcastCallback_reportHit(long jarg1, btTriangleConvexcastCallback jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4, int jarg5, int jarg6);
  public final static native void delete_btTriangleConvexcastCallback(long jarg1);
  public final static native int btGjkEpaSolver2_StackSizeRequirement();
  public final static native boolean btGjkEpaSolver2_Distance(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, Vector3 jarg5, long jarg6);
  public final static native boolean btGjkEpaSolver2_Penetration__SWIG_0(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, Vector3 jarg5, long jarg6, boolean jarg7);
  public final static native boolean btGjkEpaSolver2_Penetration__SWIG_1(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, Vector3 jarg5, long jarg6);
  public final static native float btGjkEpaSolver2_SignedDistance__SWIG_0(Vector3 jarg1, float jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, long jarg5);
  public final static native boolean btGjkEpaSolver2_SignedDistance__SWIG_1(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, long jarg3, btConvexShape jarg3_, Matrix4 jarg4, Vector3 jarg5, long jarg6);
  public final static native long new_btGjkEpaSolver2();
  public final static native void delete_btGjkEpaSolver2(long jarg1);
  public final static native long new_btGjkEpaPenetrationDepthSolver();
  public final static native void delete_btGjkEpaPenetrationDepthSolver(long jarg1);
  public final static native void btPointCollector_m_normalOnBInWorld_set(long jarg1, btPointCollector jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btPointCollector_m_normalOnBInWorld_get(long jarg1, btPointCollector jarg1_);
  public final static native void btPointCollector_m_pointInWorld_set(long jarg1, btPointCollector jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btPointCollector_m_pointInWorld_get(long jarg1, btPointCollector jarg1_);
  public final static native void btPointCollector_m_distance_set(long jarg1, btPointCollector jarg1_, float jarg2);
  public final static native float btPointCollector_m_distance_get(long jarg1, btPointCollector jarg1_);
  public final static native void btPointCollector_m_hasResult_set(long jarg1, btPointCollector jarg1_, boolean jarg2);
  public final static native boolean btPointCollector_m_hasResult_get(long jarg1, btPointCollector jarg1_);
  public final static native long new_btPointCollector();
  public final static native void btPointCollector_setShapeIdentifiersA(long jarg1, btPointCollector jarg1_, int jarg2, int jarg3);
  public final static native void btPointCollector_setShapeIdentifiersB(long jarg1, btPointCollector jarg1_, int jarg2, int jarg3);
  public final static native void btPointCollector_addContactPoint(long jarg1, btPointCollector jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native void delete_btPointCollector(long jarg1);
  public final static native long new_btUsageBitfield();
  public final static native void btUsageBitfield_reset(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_usedVertexA_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_usedVertexA_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_usedVertexB_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_usedVertexB_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_usedVertexC_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_usedVertexC_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_usedVertexD_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_usedVertexD_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_unused1_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_unused1_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_unused2_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_unused2_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_unused3_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_unused3_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void btUsageBitfield_unused4_set(long jarg1, btUsageBitfield jarg1_, int jarg2);
  public final static native int btUsageBitfield_unused4_get(long jarg1, btUsageBitfield jarg1_);
  public final static native void delete_btUsageBitfield(long jarg1);
  public final static native void btSubSimplexClosestResult_m_closestPointOnSimplex_set(long jarg1, btSubSimplexClosestResult jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSubSimplexClosestResult_m_closestPointOnSimplex_get(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_m_usedVertices_set(long jarg1, btSubSimplexClosestResult jarg1_, long jarg2, btUsageBitfield jarg2_);
  public final static native long btSubSimplexClosestResult_m_usedVertices_get(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_m_barycentricCoords_set(long jarg1, btSubSimplexClosestResult jarg1_, float[] jarg2);
  public final static native float[] btSubSimplexClosestResult_m_barycentricCoords_get(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_m_degenerate_set(long jarg1, btSubSimplexClosestResult jarg1_, boolean jarg2);
  public final static native boolean btSubSimplexClosestResult_m_degenerate_get(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_reset(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native boolean btSubSimplexClosestResult_isValid(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_0(long jarg1, btSubSimplexClosestResult jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_1(long jarg1, btSubSimplexClosestResult jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_2(long jarg1, btSubSimplexClosestResult jarg1_, float jarg2, float jarg3);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_3(long jarg1, btSubSimplexClosestResult jarg1_, float jarg2);
  public final static native void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_4(long jarg1, btSubSimplexClosestResult jarg1_);
  public final static native long new_btSubSimplexClosestResult();
  public final static native void delete_btSubSimplexClosestResult(long jarg1);
  public final static native void btVoronoiSimplexSolver_m_numVertices_set(long jarg1, btVoronoiSimplexSolver jarg1_, int jarg2);
  public final static native int btVoronoiSimplexSolver_m_numVertices_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_simplexVectorW_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_m_simplexVectorW_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_simplexPointsP_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_m_simplexPointsP_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_simplexPointsQ_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_m_simplexPointsQ_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_cachedP1_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_m_cachedP1_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_cachedP2_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_m_cachedP2_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_cachedV_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_m_cachedV_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_lastW_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btVoronoiSimplexSolver_m_lastW_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_equalVertexThreshold_set(long jarg1, btVoronoiSimplexSolver jarg1_, float jarg2);
  public final static native float btVoronoiSimplexSolver_m_equalVertexThreshold_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_cachedValidClosest_set(long jarg1, btVoronoiSimplexSolver jarg1_, boolean jarg2);
  public final static native boolean btVoronoiSimplexSolver_m_cachedValidClosest_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_cachedBC_set(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btSubSimplexClosestResult jarg2_);
  public final static native long btVoronoiSimplexSolver_m_cachedBC_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_m_needsUpdate_set(long jarg1, btVoronoiSimplexSolver jarg1_, boolean jarg2);
  public final static native boolean btVoronoiSimplexSolver_m_needsUpdate_get(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_removeVertex(long jarg1, btVoronoiSimplexSolver jarg1_, int jarg2);
  public final static native void btVoronoiSimplexSolver_reduceVertices(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btUsageBitfield jarg2_);
  public final static native boolean btVoronoiSimplexSolver_updateClosestVectorAndPoints(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native boolean btVoronoiSimplexSolver_closestPtPointTetrahedron(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6, long jarg7, btSubSimplexClosestResult jarg7_);
  public final static native int btVoronoiSimplexSolver_pointOutsideOfPlane(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native boolean btVoronoiSimplexSolver_closestPtPointTriangle(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, long jarg6, btSubSimplexClosestResult jarg6_);
  public final static native long new_btVoronoiSimplexSolver();
  public final static native void btVoronoiSimplexSolver_reset(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_addVertex(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void btVoronoiSimplexSolver_setEqualVertexThreshold(long jarg1, btVoronoiSimplexSolver jarg1_, float jarg2);
  public final static native float btVoronoiSimplexSolver_getEqualVertexThreshold(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native boolean btVoronoiSimplexSolver_closest(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2);
  public final static native float btVoronoiSimplexSolver_maxVertex(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native boolean btVoronoiSimplexSolver_fullSimplex(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native int btVoronoiSimplexSolver_getSimplex(long jarg1, btVoronoiSimplexSolver jarg1_, long jarg2, btVector3 jarg2_, long jarg3, btVector3 jarg3_, long jarg4, btVector3 jarg4_);
  public final static native boolean btVoronoiSimplexSolver_inSimplex(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2);
  public final static native void btVoronoiSimplexSolver_backup_closest(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2);
  public final static native boolean btVoronoiSimplexSolver_emptySimplex(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void btVoronoiSimplexSolver_compute_points(long jarg1, btVoronoiSimplexSolver jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native int btVoronoiSimplexSolver_numVertices(long jarg1, btVoronoiSimplexSolver jarg1_);
  public final static native void delete_btVoronoiSimplexSolver(long jarg1);
  public final static native long new_btMultiSphereShape(Vector3[] jarg1, float[] jarg2, int jarg3);
  public final static native int btMultiSphereShape_getSphereCount(long jarg1, btMultiSphereShape jarg1_);
  public final static native Vector3 btMultiSphereShape_getSpherePosition(long jarg1, btMultiSphereShape jarg1_, int jarg2);
  public final static native float btMultiSphereShape_getSphereRadius(long jarg1, btMultiSphereShape jarg1_, int jarg2);
  public final static native void delete_btMultiSphereShape(long jarg1);
  public final static native void btPositionAndRadius_m_pos_set(long jarg1, btPositionAndRadius jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btPositionAndRadius_m_pos_get(long jarg1, btPositionAndRadius jarg1_);
  public final static native void btPositionAndRadius_m_radius_set(long jarg1, btPositionAndRadius jarg1_, float jarg2);
  public final static native float btPositionAndRadius_m_radius_get(long jarg1, btPositionAndRadius jarg1_);
  public final static native long new_btPositionAndRadius();
  public final static native void delete_btPositionAndRadius(long jarg1);
  public final static native void btMultiSphereShapeData_m_convexInternalShapeData_set(long jarg1, btMultiSphereShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
  public final static native long btMultiSphereShapeData_m_convexInternalShapeData_get(long jarg1, btMultiSphereShapeData jarg1_);
  public final static native void btMultiSphereShapeData_m_localPositionArrayPtr_set(long jarg1, btMultiSphereShapeData jarg1_, long jarg2, btPositionAndRadius jarg2_);
  public final static native long btMultiSphereShapeData_m_localPositionArrayPtr_get(long jarg1, btMultiSphereShapeData jarg1_);
  public final static native void btMultiSphereShapeData_m_localPositionArraySize_set(long jarg1, btMultiSphereShapeData jarg1_, int jarg2);
  public final static native int btMultiSphereShapeData_m_localPositionArraySize_get(long jarg1, btMultiSphereShapeData jarg1_);
  public final static native void btMultiSphereShapeData_m_padding_set(long jarg1, btMultiSphereShapeData jarg1_, String jarg2);
  public final static native String btMultiSphereShapeData_m_padding_get(long jarg1, btMultiSphereShapeData jarg1_);
  public final static native long new_btMultiSphereShapeData();
  public final static native void delete_btMultiSphereShapeData(long jarg1);
  public final static native boolean ContactAddedListener_CB(btManifoldPoint jarg1, long jarg2, btCollisionObjectWrapper jarg2_, int jarg3, int jarg4, long jarg5, btCollisionObjectWrapper jarg5_, int jarg6, int jarg7);
  public final static native void currentContactAddedListener_set(long jarg1);
  public final static native long currentContactAddedListener_get();
  public final static native boolean ContactAddedListenerByWrapper_onContactAdded(long jarg1, ContactAddedListenerByWrapper jarg1_, btManifoldPoint jarg2, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, boolean jarg6, long jarg7, btCollisionObjectWrapper jarg7_, int jarg8, int jarg9, boolean jarg10);
  public final static native long new_ContactAddedListenerByWrapper();
  public final static native void delete_ContactAddedListenerByWrapper(long jarg1);
  public final static native void ContactAddedListenerByWrapper_director_connect(ContactAddedListenerByWrapper obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactAddedListenerByWrapper_change_ownership(ContactAddedListenerByWrapper obj, long cptr, boolean take_or_release);
  public final static native boolean ContactAddedListenerByObject_onContactAdded(long jarg1, ContactAddedListenerByObject jarg1_, btManifoldPoint jarg2, long jarg3, btCollisionObject jarg3_, int jarg4, int jarg5, boolean jarg6, long jarg7, btCollisionObject jarg7_, int jarg8, int jarg9, boolean jarg10);
  public final static native long new_ContactAddedListenerByObject();
  public final static native void delete_ContactAddedListenerByObject(long jarg1);
  public final static native void ContactAddedListenerByObject_director_connect(ContactAddedListenerByObject obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactAddedListenerByObject_change_ownership(ContactAddedListenerByObject obj, long cptr, boolean take_or_release);
  public final static native boolean ContactAddedListenerByValue_onContactAdded(long jarg1, ContactAddedListenerByValue jarg1_, btManifoldPoint jarg2, int jarg3, int jarg4, int jarg5, boolean jarg6, int jarg7, int jarg8, int jarg9, boolean jarg10);
  public final static native long new_ContactAddedListenerByValue();
  public final static native void delete_ContactAddedListenerByValue(long jarg1);
  public final static native void ContactAddedListenerByValue_director_connect(ContactAddedListenerByValue obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactAddedListenerByValue_change_ownership(ContactAddedListenerByValue obj, long cptr, boolean take_or_release);
  public final static native boolean ContactProcessedListener_CB(btManifoldPoint jarg1, long jarg2, long jarg3);
  public final static native void currentContactProcessedListener_set(long jarg1);
  public final static native long currentContactProcessedListener_get();
  public final static native void ContactProcessedListenerByObject_onContactProcessed(long jarg1, ContactProcessedListenerByObject jarg1_, btManifoldPoint jarg2, long jarg3, btCollisionObject jarg3_, boolean jarg4, long jarg5, btCollisionObject jarg5_, boolean jarg6);
  public final static native long new_ContactProcessedListenerByObject();
  public final static native void delete_ContactProcessedListenerByObject(long jarg1);
  public final static native void ContactProcessedListenerByObject_director_connect(ContactProcessedListenerByObject obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactProcessedListenerByObject_change_ownership(ContactProcessedListenerByObject obj, long cptr, boolean take_or_release);
  public final static native void ContactProcessedListenerByValue_onContactProcessed(long jarg1, ContactProcessedListenerByValue jarg1_, btManifoldPoint jarg2, int jarg3, boolean jarg4, int jarg5, boolean jarg6);
  public final static native long new_ContactProcessedListenerByValue();
  public final static native void delete_ContactProcessedListenerByValue(long jarg1);
  public final static native void ContactProcessedListenerByValue_director_connect(ContactProcessedListenerByValue obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactProcessedListenerByValue_change_ownership(ContactProcessedListenerByValue obj, long cptr, boolean take_or_release);
  public final static native boolean ContactDestroyedListener_CB(long jarg1);
  public final static native void currentContactDestroyedListener_set(long jarg1, ContactDestroyedListener jarg1_);
  public final static native long currentContactDestroyedListener_get();
  public final static native long new_ContactDestroyedListener();
  public final static native void delete_ContactDestroyedListener(long jarg1);
  public final static native void ContactDestroyedListener_onContactDestroyed(long jarg1, ContactDestroyedListener jarg1_, int jarg2);
  public final static native void ContactDestroyedListener_enable(long jarg1, ContactDestroyedListener jarg1_);
  public final static native void ContactDestroyedListener_disable(long jarg1, ContactDestroyedListener jarg1_);
  public final static native boolean ContactDestroyedListener_isEnabled(long jarg1, ContactDestroyedListener jarg1_);
  public final static native void ContactDestroyedListener_director_connect(ContactDestroyedListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactDestroyedListener_change_ownership(ContactDestroyedListener obj, long cptr, boolean take_or_release);
  public final static native long new_btCollisionObjectArray__SWIG_0();
  public final static native void delete_btCollisionObjectArray(long jarg1);
  public final static native long new_btCollisionObjectArray__SWIG_1(long jarg1, btCollisionObjectArray jarg1_);
  public final static native int btCollisionObjectArray_size(long jarg1, btCollisionObjectArray jarg1_);
  public final static native long btCollisionObjectArray_at__SWIG_0(long jarg1, btCollisionObjectArray jarg1_, int jarg2);
  public final static native void btCollisionObjectArray_clear(long jarg1, btCollisionObjectArray jarg1_);
  public final static native void btCollisionObjectArray_pop_back(long jarg1, btCollisionObjectArray jarg1_);
  public final static native void btCollisionObjectArray_resizeNoInitialize(long jarg1, btCollisionObjectArray jarg1_, int jarg2);
  public final static native void btCollisionObjectArray_resize__SWIG_0(long jarg1, btCollisionObjectArray jarg1_, int jarg2, long jarg3, btCollisionObject jarg3_);
  public final static native void btCollisionObjectArray_resize__SWIG_1(long jarg1, btCollisionObjectArray jarg1_, int jarg2);
  public final static native long btCollisionObjectArray_expandNonInitializing(long jarg1, btCollisionObjectArray jarg1_);
  public final static native long btCollisionObjectArray_expand__SWIG_0(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long btCollisionObjectArray_expand__SWIG_1(long jarg1, btCollisionObjectArray jarg1_);
  public final static native void btCollisionObjectArray_push_back(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native int btCollisionObjectArray_capacity(long jarg1, btCollisionObjectArray jarg1_);
  public final static native void btCollisionObjectArray_reserve(long jarg1, btCollisionObjectArray jarg1_, int jarg2);
  public final static native void btCollisionObjectArray_swap(long jarg1, btCollisionObjectArray jarg1_, int jarg2, int jarg3);
  public final static native int btCollisionObjectArray_findBinarySearch(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native int btCollisionObjectArray_findLinearSearch(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionObjectArray_remove(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btCollisionObjectArray_initializeFromBuffer(long jarg1, btCollisionObjectArray jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void btCollisionObjectArray_copyFromArray(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObjectArray jarg2_);
  public final static native int btBroadphasePairArray_size(long jarg1, btBroadphasePairArray jarg1_);
  public final static native long btBroadphasePairArray_at(long jarg1, btBroadphasePairArray jarg1_, int jarg2);
  public final static native int btBroadphasePairArray_getCollisionObjects(long jarg1, btBroadphasePairArray jarg1_, int[] jarg2, int jarg3, int jarg4);
  public final static native int btBroadphasePairArray_getCollisionObjectsValue(long jarg1, btBroadphasePairArray jarg1_, int[] jarg2, int jarg3, int jarg4);
  public final static native long new_btBroadphasePairArray();
  public final static native void delete_btBroadphasePairArray(long jarg1);
  public final static native long new_btManifoldArray__SWIG_0();
  public final static native void delete_btManifoldArray(long jarg1);
  public final static native long new_btManifoldArray__SWIG_1(long jarg1, btManifoldArray jarg1_);
  public final static native int btManifoldArray_size(long jarg1, btManifoldArray jarg1_);
  public final static native long btManifoldArray_at__SWIG_0(long jarg1, btManifoldArray jarg1_, int jarg2);
  public final static native void btManifoldArray_clear(long jarg1, btManifoldArray jarg1_);
  public final static native void btManifoldArray_pop_back(long jarg1, btManifoldArray jarg1_);
  public final static native void btManifoldArray_resizeNoInitialize(long jarg1, btManifoldArray jarg1_, int jarg2);
  public final static native void btManifoldArray_resize__SWIG_0(long jarg1, btManifoldArray jarg1_, int jarg2, long jarg3, btPersistentManifold jarg3_);
  public final static native void btManifoldArray_resize__SWIG_1(long jarg1, btManifoldArray jarg1_, int jarg2);
  public final static native long btManifoldArray_expandNonInitializing(long jarg1, btManifoldArray jarg1_);
  public final static native long btManifoldArray_expand__SWIG_0(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native long btManifoldArray_expand__SWIG_1(long jarg1, btManifoldArray jarg1_);
  public final static native void btManifoldArray_push_back(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native int btManifoldArray_capacity(long jarg1, btManifoldArray jarg1_);
  public final static native void btManifoldArray_reserve(long jarg1, btManifoldArray jarg1_, int jarg2);
  public final static native void btManifoldArray_swap(long jarg1, btManifoldArray jarg1_, int jarg2, int jarg3);
  public final static native int btManifoldArray_findBinarySearch(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native int btManifoldArray_findLinearSearch(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native void btManifoldArray_remove(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native void btManifoldArray_initializeFromBuffer(long jarg1, btManifoldArray jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void btManifoldArray_copyFromArray(long jarg1, btManifoldArray jarg1_, long jarg2, btManifoldArray jarg2_);
  public final static native void btRigidBodyConstructionInfo_m_mass_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_mass_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_motionState_set(long jarg1, btRigidBodyConstructionInfo jarg1_, long jarg2, btMotionState jarg2_);
  public final static native long btRigidBodyConstructionInfo_m_motionState_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_startWorldTransform_set(long jarg1, btRigidBodyConstructionInfo jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btRigidBodyConstructionInfo_m_startWorldTransform_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_collisionShape_set(long jarg1, btRigidBodyConstructionInfo jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native long btRigidBodyConstructionInfo_m_collisionShape_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_localInertia_set(long jarg1, btRigidBodyConstructionInfo jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btRigidBodyConstructionInfo_m_localInertia_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_linearDamping_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_linearDamping_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_angularDamping_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_angularDamping_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_friction_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_friction_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_restitution_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_restitution_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_linearSleepingThreshold_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_linearSleepingThreshold_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_angularSleepingThreshold_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_angularSleepingThreshold_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_additionalDamping_set(long jarg1, btRigidBodyConstructionInfo jarg1_, boolean jarg2);
  public final static native boolean btRigidBodyConstructionInfo_m_additionalDamping_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_additionalDampingFactor_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_additionalDampingFactor_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_additionalLinearDampingThresholdSqr_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_additionalLinearDampingThresholdSqr_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_additionalAngularDampingThresholdSqr_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_additionalAngularDampingThresholdSqr_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native void btRigidBodyConstructionInfo_m_additionalAngularDampingFactor_set(long jarg1, btRigidBodyConstructionInfo jarg1_, float jarg2);
  public final static native float btRigidBodyConstructionInfo_m_additionalAngularDampingFactor_get(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native long new_btRigidBodyConstructionInfo__SWIG_0(float jarg1, long jarg2, btMotionState jarg2_, long jarg3, btCollisionShape jarg3_, Vector3 jarg4);
  public final static native long new_btRigidBodyConstructionInfo__SWIG_1(float jarg1, long jarg2, btMotionState jarg2_, long jarg3, btCollisionShape jarg3_);
  public final static native void delete_btRigidBodyConstructionInfo(long jarg1);
  public final static native void gDeactivationTime_set(float jarg1);
  public final static native float gDeactivationTime_get();
  public final static native void gDisableDeactivation_set(boolean jarg1);
  public final static native boolean gDisableDeactivation_get();
  public final static native long new_btRigidBody__SWIG_0(long jarg1, btRigidBodyConstructionInfo jarg1_);
  public final static native long new_btRigidBody__SWIG_1(float jarg1, long jarg2, btMotionState jarg2_, long jarg3, btCollisionShape jarg3_, Vector3 jarg4);
  public final static native long new_btRigidBody__SWIG_2(float jarg1, long jarg2, btMotionState jarg2_, long jarg3, btCollisionShape jarg3_);
  public final static native void delete_btRigidBody(long jarg1);
  public final static native void btRigidBody_proceedToTransform(long jarg1, btRigidBody jarg1_, Matrix4 jarg2);
  public final static native void btRigidBody_predictIntegratedTransform(long jarg1, btRigidBody jarg1_, float jarg2, Matrix4 jarg3);
  public final static native void btRigidBody_saveKinematicState(long jarg1, btRigidBody jarg1_, float jarg2);
  public final static native void btRigidBody_applyGravity(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setGravity(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native Vector3 btRigidBody_getGravity(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setDamping(long jarg1, btRigidBody jarg1_, float jarg2, float jarg3);
  public final static native float btRigidBody_getLinearDamping(long jarg1, btRigidBody jarg1_);
  public final static native float btRigidBody_getAngularDamping(long jarg1, btRigidBody jarg1_);
  public final static native float btRigidBody_getLinearSleepingThreshold(long jarg1, btRigidBody jarg1_);
  public final static native float btRigidBody_getAngularSleepingThreshold(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_applyDamping(long jarg1, btRigidBody jarg1_, float jarg2);
  public final static native long btRigidBody_getCollisionShape__SWIG_0(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setMassProps(long jarg1, btRigidBody jarg1_, float jarg2, Vector3 jarg3);
  public final static native Vector3 btRigidBody_getLinearFactor(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setLinearFactor(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native float btRigidBody_getInvMass(long jarg1, btRigidBody jarg1_);
  public final static native Matrix3 btRigidBody_getInvInertiaTensorWorld(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_integrateVelocities(long jarg1, btRigidBody jarg1_, float jarg2);
  public final static native void btRigidBody_setCenterOfMassTransform(long jarg1, btRigidBody jarg1_, Matrix4 jarg2);
  public final static native void btRigidBody_applyCentralForce(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native Vector3 btRigidBody_getTotalForce(long jarg1, btRigidBody jarg1_);
  public final static native Vector3 btRigidBody_getTotalTorque(long jarg1, btRigidBody jarg1_);
  public final static native Vector3 btRigidBody_getInvInertiaDiagLocal(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setInvInertiaDiagLocal(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btRigidBody_setSleepingThresholds(long jarg1, btRigidBody jarg1_, float jarg2, float jarg3);
  public final static native void btRigidBody_applyTorque(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btRigidBody_applyForce(long jarg1, btRigidBody jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btRigidBody_applyCentralImpulse(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btRigidBody_applyTorqueImpulse(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btRigidBody_applyImpulse(long jarg1, btRigidBody jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btRigidBody_clearForces(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_updateInertiaTensor(long jarg1, btRigidBody jarg1_);
  public final static native Vector3 btRigidBody_getCenterOfMassPosition(long jarg1, btRigidBody jarg1_);
  public final static native Quaternion btRigidBody_getOrientation(long jarg1, btRigidBody jarg1_);
  public final static native Matrix4 btRigidBody_getCenterOfMassTransform(long jarg1, btRigidBody jarg1_);
  public final static native Vector3 btRigidBody_getLinearVelocity(long jarg1, btRigidBody jarg1_);
  public final static native Vector3 btRigidBody_getAngularVelocity(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setLinearVelocity(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btRigidBody_setAngularVelocity(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native Vector3 btRigidBody_getVelocityInLocalPoint(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btRigidBody_translate(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btRigidBody_getAabb(long jarg1, btRigidBody jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native float btRigidBody_computeImpulseDenominator(long jarg1, btRigidBody jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native float btRigidBody_computeAngularImpulseDenominator(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btRigidBody_updateDeactivation(long jarg1, btRigidBody jarg1_, float jarg2);
  public final static native boolean btRigidBody_wantsSleeping(long jarg1, btRigidBody jarg1_);
  public final static native long btRigidBody_getBroadphaseProxy__SWIG_0(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setNewBroadphaseProxy(long jarg1, btRigidBody jarg1_, long jarg2, btBroadphaseProxy jarg2_);
  public final static native long btRigidBody_getMotionState__SWIG_0(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setMotionState(long jarg1, btRigidBody jarg1_, long jarg2, btMotionState jarg2_);
  public final static native void btRigidBody_m_contactSolverType_set(long jarg1, btRigidBody jarg1_, int jarg2);
  public final static native int btRigidBody_m_contactSolverType_get(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_m_frictionSolverType_set(long jarg1, btRigidBody jarg1_, int jarg2);
  public final static native int btRigidBody_m_frictionSolverType_get(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setAngularFactor__SWIG_0(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btRigidBody_setAngularFactor__SWIG_1(long jarg1, btRigidBody jarg1_, float jarg2);
  public final static native Vector3 btRigidBody_getAngularFactor(long jarg1, btRigidBody jarg1_);
  public final static native boolean btRigidBody_isInWorld(long jarg1, btRigidBody jarg1_);
  public final static native boolean btRigidBody_checkCollideWithOverride(long jarg1, btRigidBody jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btRigidBody_addConstraintRef(long jarg1, btRigidBody jarg1_, long jarg2, btTypedConstraint jarg2_);
  public final static native void btRigidBody_removeConstraintRef(long jarg1, btRigidBody jarg1_, long jarg2, btTypedConstraint jarg2_);
  public final static native long btRigidBody_getConstraintRef(long jarg1, btRigidBody jarg1_, int jarg2);
  public final static native int btRigidBody_getNumConstraintRefs(long jarg1, btRigidBody jarg1_);
  public final static native void btRigidBody_setFlags(long jarg1, btRigidBody jarg1_, int jarg2);
  public final static native int btRigidBody_getFlags(long jarg1, btRigidBody jarg1_);
  public final static native Vector3 btRigidBody_computeGyroscopicForce(long jarg1, btRigidBody jarg1_, float jarg2);
  public final static native void btRigidBodyFloatData_m_collisionObjectData_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btCollisionObjectFloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_collisionObjectData_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_invInertiaTensorWorld_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2);
  public final static native long btRigidBodyFloatData_m_invInertiaTensorWorld_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_linearVelocity_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_linearVelocity_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_angularVelocity_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_angularVelocity_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_angularFactor_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_angularFactor_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_linearFactor_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_linearFactor_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_gravity_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_gravity_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_gravity_acceleration_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_gravity_acceleration_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_invInertiaLocal_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_invInertiaLocal_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_totalForce_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_totalForce_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_totalTorque_set(long jarg1, btRigidBodyFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btRigidBodyFloatData_m_totalTorque_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_inverseMass_set(long jarg1, btRigidBodyFloatData jarg1_, float jarg2);
  public final static native float btRigidBodyFloatData_m_inverseMass_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_linearDamping_set(long jarg1, btRigidBodyFloatData jarg1_, float jarg2);
  public final static native float btRigidBodyFloatData_m_linearDamping_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_angularDamping_set(long jarg1, btRigidBodyFloatData jarg1_, float jarg2);
  public final static native float btRigidBodyFloatData_m_angularDamping_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_additionalDampingFactor_set(long jarg1, btRigidBodyFloatData jarg1_, float jarg2);
  public final static native float btRigidBodyFloatData_m_additionalDampingFactor_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_additionalLinearDampingThresholdSqr_set(long jarg1, btRigidBodyFloatData jarg1_, float jarg2);
  public final static native float btRigidBodyFloatData_m_additionalLinearDampingThresholdSqr_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_additionalAngularDampingThresholdSqr_set(long jarg1, btRigidBodyFloatData jarg1_, float jarg2);
  public final static native float btRigidBodyFloatData_m_additionalAngularDampingThresholdSqr_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_additionalAngularDampingFactor_set(long jarg1, btRigidBodyFloatData jarg1_, float jarg2);
  public final static native float btRigidBodyFloatData_m_additionalAngularDampingFactor_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_linearSleepingThreshold_set(long jarg1, btRigidBodyFloatData jarg1_, float jarg2);
  public final static native float btRigidBodyFloatData_m_linearSleepingThreshold_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_angularSleepingThreshold_set(long jarg1, btRigidBodyFloatData jarg1_, float jarg2);
  public final static native float btRigidBodyFloatData_m_angularSleepingThreshold_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native void btRigidBodyFloatData_m_additionalDamping_set(long jarg1, btRigidBodyFloatData jarg1_, int jarg2);
  public final static native int btRigidBodyFloatData_m_additionalDamping_get(long jarg1, btRigidBodyFloatData jarg1_);
  public final static native long new_btRigidBodyFloatData();
  public final static native void delete_btRigidBodyFloatData(long jarg1);
  public final static native void btRigidBodyDoubleData_m_collisionObjectData_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btCollisionObjectDoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_collisionObjectData_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_invInertiaTensorWorld_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2);
  public final static native long btRigidBodyDoubleData_m_invInertiaTensorWorld_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_linearVelocity_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_linearVelocity_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_angularVelocity_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_angularVelocity_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_angularFactor_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_angularFactor_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_linearFactor_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_linearFactor_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_gravity_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_gravity_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_gravity_acceleration_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_gravity_acceleration_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_invInertiaLocal_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_invInertiaLocal_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_totalForce_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_totalForce_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_totalTorque_set(long jarg1, btRigidBodyDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btRigidBodyDoubleData_m_totalTorque_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_inverseMass_set(long jarg1, btRigidBodyDoubleData jarg1_, double jarg2);
  public final static native double btRigidBodyDoubleData_m_inverseMass_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_linearDamping_set(long jarg1, btRigidBodyDoubleData jarg1_, double jarg2);
  public final static native double btRigidBodyDoubleData_m_linearDamping_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_angularDamping_set(long jarg1, btRigidBodyDoubleData jarg1_, double jarg2);
  public final static native double btRigidBodyDoubleData_m_angularDamping_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_additionalDampingFactor_set(long jarg1, btRigidBodyDoubleData jarg1_, double jarg2);
  public final static native double btRigidBodyDoubleData_m_additionalDampingFactor_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_additionalLinearDampingThresholdSqr_set(long jarg1, btRigidBodyDoubleData jarg1_, double jarg2);
  public final static native double btRigidBodyDoubleData_m_additionalLinearDampingThresholdSqr_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_additionalAngularDampingThresholdSqr_set(long jarg1, btRigidBodyDoubleData jarg1_, double jarg2);
  public final static native double btRigidBodyDoubleData_m_additionalAngularDampingThresholdSqr_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_additionalAngularDampingFactor_set(long jarg1, btRigidBodyDoubleData jarg1_, double jarg2);
  public final static native double btRigidBodyDoubleData_m_additionalAngularDampingFactor_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_linearSleepingThreshold_set(long jarg1, btRigidBodyDoubleData jarg1_, double jarg2);
  public final static native double btRigidBodyDoubleData_m_linearSleepingThreshold_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_angularSleepingThreshold_set(long jarg1, btRigidBodyDoubleData jarg1_, double jarg2);
  public final static native double btRigidBodyDoubleData_m_angularSleepingThreshold_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_additionalDamping_set(long jarg1, btRigidBodyDoubleData jarg1_, int jarg2);
  public final static native int btRigidBodyDoubleData_m_additionalDamping_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native void btRigidBodyDoubleData_m_padding_set(long jarg1, btRigidBodyDoubleData jarg1_, String jarg2);
  public final static native String btRigidBodyDoubleData_m_padding_get(long jarg1, btRigidBodyDoubleData jarg1_);
  public final static native long new_btRigidBodyDoubleData();
  public final static native void delete_btRigidBodyDoubleData(long jarg1);
  public final static native void btConstraintInfo2_fps_set(long jarg1, btConstraintInfo2 jarg1_, float jarg2);
  public final static native float btConstraintInfo2_fps_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_erp_set(long jarg1, btConstraintInfo2 jarg1_, float jarg2);
  public final static native float btConstraintInfo2_erp_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_m_J1linearAxis_set(long jarg1, btConstraintInfo2 jarg1_, long jarg2);
  public final static native long btConstraintInfo2_m_J1linearAxis_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_m_J1angularAxis_set(long jarg1, btConstraintInfo2 jarg1_, long jarg2);
  public final static native long btConstraintInfo2_m_J1angularAxis_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_m_J2linearAxis_set(long jarg1, btConstraintInfo2 jarg1_, long jarg2);
  public final static native long btConstraintInfo2_m_J2linearAxis_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_m_J2angularAxis_set(long jarg1, btConstraintInfo2 jarg1_, long jarg2);
  public final static native long btConstraintInfo2_m_J2angularAxis_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_rowskip_set(long jarg1, btConstraintInfo2 jarg1_, int jarg2);
  public final static native int btConstraintInfo2_rowskip_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_m_constraintError_set(long jarg1, btConstraintInfo2 jarg1_, long jarg2);
  public final static native long btConstraintInfo2_m_constraintError_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_cfm_set(long jarg1, btConstraintInfo2 jarg1_, long jarg2);
  public final static native long btConstraintInfo2_cfm_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_m_lowerLimit_set(long jarg1, btConstraintInfo2 jarg1_, long jarg2);
  public final static native long btConstraintInfo2_m_lowerLimit_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_m_upperLimit_set(long jarg1, btConstraintInfo2 jarg1_, long jarg2);
  public final static native long btConstraintInfo2_m_upperLimit_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_findex_set(long jarg1, btConstraintInfo2 jarg1_, long jarg2);
  public final static native long btConstraintInfo2_findex_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_m_numIterations_set(long jarg1, btConstraintInfo2 jarg1_, int jarg2);
  public final static native int btConstraintInfo2_m_numIterations_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native void btConstraintInfo2_m_damping_set(long jarg1, btConstraintInfo2 jarg1_, float jarg2);
  public final static native float btConstraintInfo2_m_damping_get(long jarg1, btConstraintInfo2 jarg1_);
  public final static native long new_btConstraintInfo2();
  public final static native void delete_btConstraintInfo2(long jarg1);
  public final static native void btJointFeedback_m_appliedForceBodyA_set(long jarg1, btJointFeedback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btJointFeedback_m_appliedForceBodyA_get(long jarg1, btJointFeedback jarg1_);
  public final static native void btJointFeedback_m_appliedTorqueBodyA_set(long jarg1, btJointFeedback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btJointFeedback_m_appliedTorqueBodyA_get(long jarg1, btJointFeedback jarg1_);
  public final static native void btJointFeedback_m_appliedForceBodyB_set(long jarg1, btJointFeedback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btJointFeedback_m_appliedForceBodyB_get(long jarg1, btJointFeedback jarg1_);
  public final static native void btJointFeedback_m_appliedTorqueBodyB_set(long jarg1, btJointFeedback jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btJointFeedback_m_appliedTorqueBodyB_get(long jarg1, btJointFeedback jarg1_);
  public final static native long new_btJointFeedback();
  public final static native void delete_btJointFeedback(long jarg1);
  public final static native void delete_btTypedConstraint(long jarg1);
  public final static native long btTypedConstraint_getFixedBody();
  public final static native int btTypedConstraint_getOverrideNumSolverIterations(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_setOverrideNumSolverIterations(long jarg1, btTypedConstraint jarg1_, int jarg2);
  public final static native void btTypedConstraint_buildJacobian(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_setupSolverConstraint(long jarg1, btTypedConstraint jarg1_, long jarg2, int jarg3, int jarg4, float jarg5);
  public final static native void btTypedConstraint_getInfo1(long jarg1, btTypedConstraint jarg1_, long jarg2);
  public final static native void btTypedConstraint_getInfo2(long jarg1, btTypedConstraint jarg1_, long jarg2, btConstraintInfo2 jarg2_);
  public final static native void btTypedConstraint_internalSetAppliedImpulse(long jarg1, btTypedConstraint jarg1_, float jarg2);
  public final static native float btTypedConstraint_internalGetAppliedImpulse(long jarg1, btTypedConstraint jarg1_);
  public final static native float btTypedConstraint_getBreakingImpulseThreshold(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_setBreakingImpulseThreshold(long jarg1, btTypedConstraint jarg1_, float jarg2);
  public final static native boolean btTypedConstraint_isEnabled(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_setEnabled(long jarg1, btTypedConstraint jarg1_, boolean jarg2);
  public final static native void btTypedConstraint_solveConstraintObsolete(long jarg1, btTypedConstraint jarg1_, long jarg2, btSolverBody jarg2_, long jarg3, btSolverBody jarg3_, float jarg4);
  public final static native long btTypedConstraint_getRigidBodyA__SWIG_0(long jarg1, btTypedConstraint jarg1_);
  public final static native long btTypedConstraint_getRigidBodyB__SWIG_0(long jarg1, btTypedConstraint jarg1_);
  public final static native int btTypedConstraint_getUserConstraintType(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_setUserConstraintType(long jarg1, btTypedConstraint jarg1_, int jarg2);
  public final static native void btTypedConstraint_setUserConstraintId(long jarg1, btTypedConstraint jarg1_, int jarg2);
  public final static native int btTypedConstraint_getUserConstraintId(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_setUserConstraintPtr(long jarg1, btTypedConstraint jarg1_, long jarg2);
  public final static native long btTypedConstraint_getUserConstraintPtr(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_setJointFeedback(long jarg1, btTypedConstraint jarg1_, long jarg2, btJointFeedback jarg2_);
  public final static native long btTypedConstraint_getJointFeedback__SWIG_0(long jarg1, btTypedConstraint jarg1_);
  public final static native int btTypedConstraint_getUid(long jarg1, btTypedConstraint jarg1_);
  public final static native boolean btTypedConstraint_needsFeedback(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_enableFeedback(long jarg1, btTypedConstraint jarg1_, boolean jarg2);
  public final static native float btTypedConstraint_getAppliedImpulse(long jarg1, btTypedConstraint jarg1_);
  public final static native int btTypedConstraint_getConstraintType(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_setDbgDrawSize(long jarg1, btTypedConstraint jarg1_, float jarg2);
  public final static native float btTypedConstraint_getDbgDrawSize(long jarg1, btTypedConstraint jarg1_);
  public final static native void btTypedConstraint_setParam__SWIG_0(long jarg1, btTypedConstraint jarg1_, int jarg2, float jarg3, int jarg4);
  public final static native void btTypedConstraint_setParam__SWIG_1(long jarg1, btTypedConstraint jarg1_, int jarg2, float jarg3);
  public final static native float btTypedConstraint_getParam__SWIG_0(long jarg1, btTypedConstraint jarg1_, int jarg2, int jarg3);
  public final static native float btTypedConstraint_getParam__SWIG_1(long jarg1, btTypedConstraint jarg1_, int jarg2);
  public final static native int btTypedConstraint_calculateSerializeBufferSize(long jarg1, btTypedConstraint jarg1_);
  public final static native String btTypedConstraint_serialize(long jarg1, btTypedConstraint jarg1_, long jarg2, long jarg3);
  public final static native float btAdjustAngleToLimits(float jarg1, float jarg2, float jarg3);
  public final static native void btTypedConstraintData_m_rbA_set(long jarg1, btTypedConstraintData jarg1_, long jarg2, btRigidBodyFloatData jarg2_);
  public final static native long btTypedConstraintData_m_rbA_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_rbB_set(long jarg1, btTypedConstraintData jarg1_, long jarg2, btRigidBodyFloatData jarg2_);
  public final static native long btTypedConstraintData_m_rbB_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_name_set(long jarg1, btTypedConstraintData jarg1_, String jarg2);
  public final static native String btTypedConstraintData_m_name_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_objectType_set(long jarg1, btTypedConstraintData jarg1_, int jarg2);
  public final static native int btTypedConstraintData_m_objectType_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_userConstraintType_set(long jarg1, btTypedConstraintData jarg1_, int jarg2);
  public final static native int btTypedConstraintData_m_userConstraintType_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_userConstraintId_set(long jarg1, btTypedConstraintData jarg1_, int jarg2);
  public final static native int btTypedConstraintData_m_userConstraintId_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_needsFeedback_set(long jarg1, btTypedConstraintData jarg1_, int jarg2);
  public final static native int btTypedConstraintData_m_needsFeedback_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_appliedImpulse_set(long jarg1, btTypedConstraintData jarg1_, float jarg2);
  public final static native float btTypedConstraintData_m_appliedImpulse_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_dbgDrawSize_set(long jarg1, btTypedConstraintData jarg1_, float jarg2);
  public final static native float btTypedConstraintData_m_dbgDrawSize_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_disableCollisionsBetweenLinkedBodies_set(long jarg1, btTypedConstraintData jarg1_, int jarg2);
  public final static native int btTypedConstraintData_m_disableCollisionsBetweenLinkedBodies_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_overrideNumSolverIterations_set(long jarg1, btTypedConstraintData jarg1_, int jarg2);
  public final static native int btTypedConstraintData_m_overrideNumSolverIterations_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_breakingImpulseThreshold_set(long jarg1, btTypedConstraintData jarg1_, float jarg2);
  public final static native float btTypedConstraintData_m_breakingImpulseThreshold_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native void btTypedConstraintData_m_isEnabled_set(long jarg1, btTypedConstraintData jarg1_, int jarg2);
  public final static native int btTypedConstraintData_m_isEnabled_get(long jarg1, btTypedConstraintData jarg1_);
  public final static native long new_btTypedConstraintData();
  public final static native void delete_btTypedConstraintData(long jarg1);
  public final static native long new_btAngularLimit();
  public final static native void btAngularLimit_set__SWIG_0(long jarg1, btAngularLimit jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void btAngularLimit_set__SWIG_1(long jarg1, btAngularLimit jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void btAngularLimit_set__SWIG_2(long jarg1, btAngularLimit jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void btAngularLimit_set__SWIG_3(long jarg1, btAngularLimit jarg1_, float jarg2, float jarg3);
  public final static native void btAngularLimit_test(long jarg1, btAngularLimit jarg1_, float jarg2);
  public final static native float btAngularLimit_getSoftness(long jarg1, btAngularLimit jarg1_);
  public final static native float btAngularLimit_getBiasFactor(long jarg1, btAngularLimit jarg1_);
  public final static native float btAngularLimit_getRelaxationFactor(long jarg1, btAngularLimit jarg1_);
  public final static native float btAngularLimit_getCorrection(long jarg1, btAngularLimit jarg1_);
  public final static native float btAngularLimit_getSign(long jarg1, btAngularLimit jarg1_);
  public final static native float btAngularLimit_getHalfRange(long jarg1, btAngularLimit jarg1_);
  public final static native boolean btAngularLimit_isLimit(long jarg1, btAngularLimit jarg1_);
  public final static native void btAngularLimit_fit(long jarg1, btAngularLimit jarg1_, long jarg2);
  public final static native float btAngularLimit_getError(long jarg1, btAngularLimit jarg1_);
  public final static native float btAngularLimit_getLow(long jarg1, btAngularLimit jarg1_);
  public final static native float btAngularLimit_getHigh(long jarg1, btAngularLimit jarg1_);
  public final static native void delete_btAngularLimit(long jarg1);
  public final static native void delete_btDynamicsWorld(long jarg1);
  public final static native int btDynamicsWorld_stepSimulation__SWIG_0(long jarg1, btDynamicsWorld jarg1_, float jarg2, int jarg3, float jarg4);
  public final static native int btDynamicsWorld_stepSimulation__SWIG_1(long jarg1, btDynamicsWorld jarg1_, float jarg2, int jarg3);
  public final static native int btDynamicsWorld_stepSimulation__SWIG_2(long jarg1, btDynamicsWorld jarg1_, float jarg2);
  public final static native void btDynamicsWorld_addConstraint__SWIG_0(long jarg1, btDynamicsWorld jarg1_, long jarg2, btTypedConstraint jarg2_, boolean jarg3);
  public final static native void btDynamicsWorld_addConstraint__SWIG_1(long jarg1, btDynamicsWorld jarg1_, long jarg2, btTypedConstraint jarg2_);
  public final static native void btDynamicsWorld_removeConstraint(long jarg1, btDynamicsWorld jarg1_, long jarg2, btTypedConstraint jarg2_);
  public final static native void btDynamicsWorld_addAction(long jarg1, btDynamicsWorld jarg1_, long jarg2, btActionInterface jarg2_);
  public final static native void btDynamicsWorld_removeAction(long jarg1, btDynamicsWorld jarg1_, long jarg2, btActionInterface jarg2_);
  public final static native void btDynamicsWorld_setGravity(long jarg1, btDynamicsWorld jarg1_, Vector3 jarg2);
  public final static native Vector3 btDynamicsWorld_getGravity(long jarg1, btDynamicsWorld jarg1_);
  public final static native void btDynamicsWorld_synchronizeMotionStates(long jarg1, btDynamicsWorld jarg1_);
  public final static native void btDynamicsWorld_addRigidBody__SWIG_0(long jarg1, btDynamicsWorld jarg1_, long jarg2, btRigidBody jarg2_);
  public final static native void btDynamicsWorld_addRigidBody__SWIG_1(long jarg1, btDynamicsWorld jarg1_, long jarg2, btRigidBody jarg2_, short jarg3, short jarg4);
  public final static native void btDynamicsWorld_removeRigidBody(long jarg1, btDynamicsWorld jarg1_, long jarg2, btRigidBody jarg2_);
  public final static native void btDynamicsWorld_setConstraintSolver(long jarg1, btDynamicsWorld jarg1_, long jarg2, btConstraintSolver jarg2_);
  public final static native long btDynamicsWorld_getConstraintSolver(long jarg1, btDynamicsWorld jarg1_);
  public final static native int btDynamicsWorld_getNumConstraints(long jarg1, btDynamicsWorld jarg1_);
  public final static native long btDynamicsWorld_getConstraint__SWIG_0(long jarg1, btDynamicsWorld jarg1_, int jarg2);
  public final static native int btDynamicsWorld_getWorldType(long jarg1, btDynamicsWorld jarg1_);
  public final static native void btDynamicsWorld_clearForces(long jarg1, btDynamicsWorld jarg1_);
  public final static native void btDynamicsWorld_setInternalTickCallback__SWIG_0(long jarg1, btDynamicsWorld jarg1_, long jarg2, long jarg3, boolean jarg4);
  public final static native void btDynamicsWorld_setInternalTickCallback__SWIG_1(long jarg1, btDynamicsWorld jarg1_, long jarg2, long jarg3);
  public final static native void btDynamicsWorld_setInternalTickCallback__SWIG_2(long jarg1, btDynamicsWorld jarg1_, long jarg2);
  public final static native void btDynamicsWorld_setWorldUserInfo(long jarg1, btDynamicsWorld jarg1_, long jarg2);
  public final static native long btDynamicsWorld_getWorldUserInfo(long jarg1, btDynamicsWorld jarg1_);
  public final static native long btDynamicsWorld_getSolverInfo(long jarg1, btDynamicsWorld jarg1_);
  public final static native void btDynamicsWorld_addVehicle(long jarg1, btDynamicsWorld jarg1_, long jarg2, btActionInterface jarg2_);
  public final static native void btDynamicsWorld_removeVehicle(long jarg1, btDynamicsWorld jarg1_, long jarg2, btActionInterface jarg2_);
  public final static native void btDynamicsWorld_addCharacter(long jarg1, btDynamicsWorld jarg1_, long jarg2, btActionInterface jarg2_);
  public final static native void btDynamicsWorld_removeCharacter(long jarg1, btDynamicsWorld jarg1_, long jarg2, btActionInterface jarg2_);
  public final static native void btDynamicsWorldDoubleData_m_solverInfo_set(long jarg1, btDynamicsWorldDoubleData jarg1_, long jarg2, btContactSolverInfoDoubleData jarg2_);
  public final static native long btDynamicsWorldDoubleData_m_solverInfo_get(long jarg1, btDynamicsWorldDoubleData jarg1_);
  public final static native void btDynamicsWorldDoubleData_m_gravity_set(long jarg1, btDynamicsWorldDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btDynamicsWorldDoubleData_m_gravity_get(long jarg1, btDynamicsWorldDoubleData jarg1_);
  public final static native long new_btDynamicsWorldDoubleData();
  public final static native void delete_btDynamicsWorldDoubleData(long jarg1);
  public final static native void btDynamicsWorldFloatData_m_solverInfo_set(long jarg1, btDynamicsWorldFloatData jarg1_, long jarg2, btContactSolverInfoFloatData jarg2_);
  public final static native long btDynamicsWorldFloatData_m_solverInfo_get(long jarg1, btDynamicsWorldFloatData jarg1_);
  public final static native void btDynamicsWorldFloatData_m_gravity_set(long jarg1, btDynamicsWorldFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btDynamicsWorldFloatData_m_gravity_get(long jarg1, btDynamicsWorldFloatData jarg1_);
  public final static native long new_btDynamicsWorldFloatData();
  public final static native void delete_btDynamicsWorldFloatData(long jarg1);
  public final static native void InternalTickCallback_CB(long jarg1, btDynamicsWorld jarg1_, float jarg2);
  public final static native long new_InternalTickCallback__SWIG_0(long jarg1, btDynamicsWorld jarg1_, boolean jarg2);
  public final static native long new_InternalTickCallback__SWIG_1(long jarg1, btDynamicsWorld jarg1_);
  public final static native long new_InternalTickCallback__SWIG_2();
  public final static native void InternalTickCallback_onInternalTick(long jarg1, InternalTickCallback jarg1_, long jarg2, btDynamicsWorld jarg2_, float jarg3);
  public final static native void InternalTickCallback_onInternalTickSwigExplicitInternalTickCallback(long jarg1, InternalTickCallback jarg1_, long jarg2, btDynamicsWorld jarg2_, float jarg3);
  public final static native void InternalTickCallback_detach__SWIG_0(long jarg1, InternalTickCallback jarg1_);
  public final static native void InternalTickCallback_attach__SWIG_0(long jarg1, InternalTickCallback jarg1_, long jarg2, btDynamicsWorld jarg2_, boolean jarg3);
  public final static native void InternalTickCallback_attach__SWIG_1(long jarg1, InternalTickCallback jarg1_);
  public final static native void InternalTickCallback_detach__SWIG_1(long jarg1, btDynamicsWorld jarg1_, boolean jarg2);
  public final static native void delete_InternalTickCallback(long jarg1);
  public final static native void InternalTickCallback_director_connect(InternalTickCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void InternalTickCallback_change_ownership(InternalTickCallback obj, long cptr, boolean take_or_release);
  public final static native long new_btSimpleDynamicsWorld(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btConstraintSolver jarg3_, long jarg4, btCollisionConfiguration jarg4_);
  public final static native void delete_btSimpleDynamicsWorld(long jarg1);
  public final static native int btSimpleDynamicsWorld_stepSimulation__SWIG_0(long jarg1, btSimpleDynamicsWorld jarg1_, float jarg2, int jarg3, float jarg4);
  public final static native int btSimpleDynamicsWorld_stepSimulation__SWIG_1(long jarg1, btSimpleDynamicsWorld jarg1_, float jarg2, int jarg3);
  public final static native int btSimpleDynamicsWorld_stepSimulation__SWIG_2(long jarg1, btSimpleDynamicsWorld jarg1_, float jarg2);
  public final static native void btSimpleDynamicsWorld_addRigidBody__SWIG_0(long jarg1, btSimpleDynamicsWorld jarg1_, long jarg2, btRigidBody jarg2_);
  public final static native void btSimpleDynamicsWorld_addRigidBody__SWIG_1(long jarg1, btSimpleDynamicsWorld jarg1_, long jarg2, btRigidBody jarg2_, short jarg3, short jarg4);
  public final static native void delete_btActionInterface(long jarg1);
  public final static native void btActionInterface_updateAction(long jarg1, btActionInterface jarg1_, long jarg2, btCollisionWorld jarg2_, float jarg3);
  public final static native void btActionInterface_debugDraw(long jarg1, btActionInterface jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native long new_btDiscreteDynamicsWorld(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btConstraintSolver jarg3_, long jarg4, btCollisionConfiguration jarg4_);
  public final static native void delete_btDiscreteDynamicsWorld(long jarg1);
  public final static native int btDiscreteDynamicsWorld_stepSimulation__SWIG_0(long jarg1, btDiscreteDynamicsWorld jarg1_, float jarg2, int jarg3, float jarg4);
  public final static native int btDiscreteDynamicsWorld_stepSimulation__SWIG_1(long jarg1, btDiscreteDynamicsWorld jarg1_, float jarg2, int jarg3);
  public final static native int btDiscreteDynamicsWorld_stepSimulation__SWIG_2(long jarg1, btDiscreteDynamicsWorld jarg1_, float jarg2);
  public final static native void btDiscreteDynamicsWorld_synchronizeSingleMotionState(long jarg1, btDiscreteDynamicsWorld jarg1_, long jarg2, btRigidBody jarg2_);
  public final static native void btDiscreteDynamicsWorld_addConstraint__SWIG_0(long jarg1, btDiscreteDynamicsWorld jarg1_, long jarg2, btTypedConstraint jarg2_, boolean jarg3);
  public final static native void btDiscreteDynamicsWorld_addConstraint__SWIG_1(long jarg1, btDiscreteDynamicsWorld jarg1_, long jarg2, btTypedConstraint jarg2_);
  public final static native long btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_0(long jarg1, btDiscreteDynamicsWorld jarg1_);
  public final static native long btDiscreteDynamicsWorld_getCollisionWorld(long jarg1, btDiscreteDynamicsWorld jarg1_);
  public final static native void btDiscreteDynamicsWorld_addCollisionObject__SWIG_0(long jarg1, btDiscreteDynamicsWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3, short jarg4);
  public final static native void btDiscreteDynamicsWorld_addCollisionObject__SWIG_1(long jarg1, btDiscreteDynamicsWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3);
  public final static native void btDiscreteDynamicsWorld_addCollisionObject__SWIG_2(long jarg1, btDiscreteDynamicsWorld jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native void btDiscreteDynamicsWorld_addRigidBody__SWIG_0(long jarg1, btDiscreteDynamicsWorld jarg1_, long jarg2, btRigidBody jarg2_);
  public final static native void btDiscreteDynamicsWorld_addRigidBody__SWIG_1(long jarg1, btDiscreteDynamicsWorld jarg1_, long jarg2, btRigidBody jarg2_, short jarg3, short jarg4);
  public final static native void btDiscreteDynamicsWorld_debugDrawConstraint(long jarg1, btDiscreteDynamicsWorld jarg1_, long jarg2, btTypedConstraint jarg2_);
  public final static native long btDiscreteDynamicsWorld_getConstraint__SWIG_0(long jarg1, btDiscreteDynamicsWorld jarg1_, int jarg2);
  public final static native void btDiscreteDynamicsWorld_applyGravity(long jarg1, btDiscreteDynamicsWorld jarg1_);
  public final static native void btDiscreteDynamicsWorld_setNumTasks(long jarg1, btDiscreteDynamicsWorld jarg1_, int jarg2);
  public final static native void btDiscreteDynamicsWorld_updateVehicles(long jarg1, btDiscreteDynamicsWorld jarg1_, float jarg2);
  public final static native void btDiscreteDynamicsWorld_setSynchronizeAllMotionStates(long jarg1, btDiscreteDynamicsWorld jarg1_, boolean jarg2);
  public final static native boolean btDiscreteDynamicsWorld_getSynchronizeAllMotionStates(long jarg1, btDiscreteDynamicsWorld jarg1_);
  public final static native void btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution(long jarg1, btDiscreteDynamicsWorld jarg1_, boolean jarg2);
  public final static native boolean btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution(long jarg1, btDiscreteDynamicsWorld jarg1_);
  public final static native void delete_btCharacterControllerInterface(long jarg1);
  public final static native void btCharacterControllerInterface_setWalkDirection(long jarg1, btCharacterControllerInterface jarg1_, Vector3 jarg2);
  public final static native void btCharacterControllerInterface_setVelocityForTimeInterval(long jarg1, btCharacterControllerInterface jarg1_, Vector3 jarg2, float jarg3);
  public final static native void btCharacterControllerInterface_reset(long jarg1, btCharacterControllerInterface jarg1_);
  public final static native void btCharacterControllerInterface_warp(long jarg1, btCharacterControllerInterface jarg1_, Vector3 jarg2);
  public final static native void btCharacterControllerInterface_preStep(long jarg1, btCharacterControllerInterface jarg1_, long jarg2, btCollisionWorld jarg2_);
  public final static native void btCharacterControllerInterface_playerStep(long jarg1, btCharacterControllerInterface jarg1_, long jarg2, btCollisionWorld jarg2_, float jarg3);
  public final static native boolean btCharacterControllerInterface_canJump(long jarg1, btCharacterControllerInterface jarg1_);
  public final static native void btCharacterControllerInterface_jump(long jarg1, btCharacterControllerInterface jarg1_);
  public final static native boolean btCharacterControllerInterface_onGround(long jarg1, btCharacterControllerInterface jarg1_);
  public final static native long new_btKinematicCharacterController__SWIG_0(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btConvexShape jarg2_, float jarg3, int jarg4);
  public final static native long new_btKinematicCharacterController__SWIG_1(long jarg1, btPairCachingGhostObject jarg1_, long jarg2, btConvexShape jarg2_, float jarg3);
  public final static native void delete_btKinematicCharacterController(long jarg1);
  public final static native void btKinematicCharacterController_setUpAxis(long jarg1, btKinematicCharacterController jarg1_, int jarg2);
  public final static native void btKinematicCharacterController_setFallSpeed(long jarg1, btKinematicCharacterController jarg1_, float jarg2);
  public final static native void btKinematicCharacterController_setJumpSpeed(long jarg1, btKinematicCharacterController jarg1_, float jarg2);
  public final static native void btKinematicCharacterController_setMaxJumpHeight(long jarg1, btKinematicCharacterController jarg1_, float jarg2);
  public final static native void btKinematicCharacterController_setGravity(long jarg1, btKinematicCharacterController jarg1_, float jarg2);
  public final static native float btKinematicCharacterController_getGravity(long jarg1, btKinematicCharacterController jarg1_);
  public final static native void btKinematicCharacterController_setMaxSlope(long jarg1, btKinematicCharacterController jarg1_, float jarg2);
  public final static native float btKinematicCharacterController_getMaxSlope(long jarg1, btKinematicCharacterController jarg1_);
  public final static native long btKinematicCharacterController_getGhostObject(long jarg1, btKinematicCharacterController jarg1_);
  public final static native void btKinematicCharacterController_setUseGhostSweepTest(long jarg1, btKinematicCharacterController jarg1_, boolean jarg2);
  public final static native void btContactSolverInfoData_m_tau_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_tau_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_damping_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_damping_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_friction_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_friction_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_timeStep_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_timeStep_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_restitution_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_restitution_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_numIterations_set(long jarg1, btContactSolverInfoData jarg1_, int jarg2);
  public final static native int btContactSolverInfoData_m_numIterations_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_maxErrorReduction_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_maxErrorReduction_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_sor_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_sor_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_erp_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_erp_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_erp2_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_erp2_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_globalCfm_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_globalCfm_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_splitImpulse_set(long jarg1, btContactSolverInfoData jarg1_, int jarg2);
  public final static native int btContactSolverInfoData_m_splitImpulse_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_splitImpulsePenetrationThreshold_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_splitImpulsePenetrationThreshold_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_splitImpulseTurnErp_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_splitImpulseTurnErp_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_linearSlop_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_linearSlop_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_warmstartingFactor_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_warmstartingFactor_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_solverMode_set(long jarg1, btContactSolverInfoData jarg1_, int jarg2);
  public final static native int btContactSolverInfoData_m_solverMode_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_restingContactRestitutionThreshold_set(long jarg1, btContactSolverInfoData jarg1_, int jarg2);
  public final static native int btContactSolverInfoData_m_restingContactRestitutionThreshold_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_minimumSolverBatchSize_set(long jarg1, btContactSolverInfoData jarg1_, int jarg2);
  public final static native int btContactSolverInfoData_m_minimumSolverBatchSize_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_maxGyroscopicForce_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_maxGyroscopicForce_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native void btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_set(long jarg1, btContactSolverInfoData jarg1_, float jarg2);
  public final static native float btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_get(long jarg1, btContactSolverInfoData jarg1_);
  public final static native long new_btContactSolverInfoData();
  public final static native void delete_btContactSolverInfoData(long jarg1);
  public final static native long new_btContactSolverInfo();
  public final static native void delete_btContactSolverInfo(long jarg1);
  public final static native void btContactSolverInfoDoubleData_m_tau_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_tau_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_damping_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_damping_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_friction_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_friction_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_timeStep_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_timeStep_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_restitution_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_restitution_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_maxErrorReduction_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_maxErrorReduction_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_sor_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_sor_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_erp_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_erp_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_erp2_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_erp2_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_globalCfm_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_globalCfm_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_splitImpulseTurnErp_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_splitImpulseTurnErp_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_linearSlop_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_linearSlop_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_warmstartingFactor_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_warmstartingFactor_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_maxGyroscopicForce_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_maxGyroscopicForce_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_set(long jarg1, btContactSolverInfoDoubleData jarg1_, double jarg2);
  public final static native double btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_numIterations_set(long jarg1, btContactSolverInfoDoubleData jarg1_, int jarg2);
  public final static native int btContactSolverInfoDoubleData_m_numIterations_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_solverMode_set(long jarg1, btContactSolverInfoDoubleData jarg1_, int jarg2);
  public final static native int btContactSolverInfoDoubleData_m_solverMode_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_set(long jarg1, btContactSolverInfoDoubleData jarg1_, int jarg2);
  public final static native int btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_minimumSolverBatchSize_set(long jarg1, btContactSolverInfoDoubleData jarg1_, int jarg2);
  public final static native int btContactSolverInfoDoubleData_m_minimumSolverBatchSize_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_splitImpulse_set(long jarg1, btContactSolverInfoDoubleData jarg1_, int jarg2);
  public final static native int btContactSolverInfoDoubleData_m_splitImpulse_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native void btContactSolverInfoDoubleData_m_padding_set(long jarg1, btContactSolverInfoDoubleData jarg1_, String jarg2);
  public final static native String btContactSolverInfoDoubleData_m_padding_get(long jarg1, btContactSolverInfoDoubleData jarg1_);
  public final static native long new_btContactSolverInfoDoubleData();
  public final static native void delete_btContactSolverInfoDoubleData(long jarg1);
  public final static native void btContactSolverInfoFloatData_m_tau_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_tau_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_damping_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_damping_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_friction_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_friction_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_timeStep_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_timeStep_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_restitution_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_restitution_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_maxErrorReduction_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_maxErrorReduction_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_sor_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_sor_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_erp_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_erp_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_erp2_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_erp2_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_globalCfm_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_globalCfm_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_splitImpulsePenetrationThreshold_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_splitImpulsePenetrationThreshold_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_splitImpulseTurnErp_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_splitImpulseTurnErp_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_linearSlop_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_linearSlop_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_warmstartingFactor_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_warmstartingFactor_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_maxGyroscopicForce_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_maxGyroscopicForce_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_singleAxisRollingFrictionThreshold_set(long jarg1, btContactSolverInfoFloatData jarg1_, float jarg2);
  public final static native float btContactSolverInfoFloatData_m_singleAxisRollingFrictionThreshold_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_numIterations_set(long jarg1, btContactSolverInfoFloatData jarg1_, int jarg2);
  public final static native int btContactSolverInfoFloatData_m_numIterations_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_solverMode_set(long jarg1, btContactSolverInfoFloatData jarg1_, int jarg2);
  public final static native int btContactSolverInfoFloatData_m_solverMode_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_restingContactRestitutionThreshold_set(long jarg1, btContactSolverInfoFloatData jarg1_, int jarg2);
  public final static native int btContactSolverInfoFloatData_m_restingContactRestitutionThreshold_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_minimumSolverBatchSize_set(long jarg1, btContactSolverInfoFloatData jarg1_, int jarg2);
  public final static native int btContactSolverInfoFloatData_m_minimumSolverBatchSize_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_splitImpulse_set(long jarg1, btContactSolverInfoFloatData jarg1_, int jarg2);
  public final static native int btContactSolverInfoFloatData_m_splitImpulse_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native void btContactSolverInfoFloatData_m_padding_set(long jarg1, btContactSolverInfoFloatData jarg1_, String jarg2);
  public final static native String btContactSolverInfoFloatData_m_padding_get(long jarg1, btContactSolverInfoFloatData jarg1_);
  public final static native long new_btContactSolverInfoFloatData();
  public final static native void delete_btContactSolverInfoFloatData(long jarg1);
  public final static native void delete_btConstraintSolver(long jarg1);
  public final static native void btConstraintSolver_prepareSolve(long jarg1, btConstraintSolver jarg1_, int jarg2, int jarg3);
  public final static native float btConstraintSolver_solveGroup(long jarg1, btConstraintSolver jarg1_, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, btContactSolverInfo jarg8_, long jarg9, btIDebugDraw jarg9_, long jarg10, btStackAlloc jarg10_, long jarg11, btDispatcher jarg11_);
  public final static native void btConstraintSolver_allSolved(long jarg1, btConstraintSolver jarg1_, long jarg2, btContactSolverInfo jarg2_, long jarg3, btIDebugDraw jarg3_, long jarg4, btStackAlloc jarg4_);
  public final static native void btConstraintSolver_reset(long jarg1, btConstraintSolver jarg1_);
  public final static native long new_btSequentialImpulseConstraintSolver();
  public final static native void delete_btSequentialImpulseConstraintSolver(long jarg1);
  public final static native long btSequentialImpulseConstraintSolver_btRand2(long jarg1, btSequentialImpulseConstraintSolver jarg1_);
  public final static native int btSequentialImpulseConstraintSolver_btRandInt2(long jarg1, btSequentialImpulseConstraintSolver jarg1_, int jarg2);
  public final static native void btSequentialImpulseConstraintSolver_setRandSeed(long jarg1, btSequentialImpulseConstraintSolver jarg1_, long jarg2);
  public final static native long btSequentialImpulseConstraintSolver_getRandSeed(long jarg1, btSequentialImpulseConstraintSolver jarg1_);
  public final static native void btSolverBody_m_worldTransform_set(long jarg1, btSolverBody jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btSolverBody_m_worldTransform_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_deltaLinearVelocity_set(long jarg1, btSolverBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverBody_m_deltaLinearVelocity_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_deltaAngularVelocity_set(long jarg1, btSolverBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverBody_m_deltaAngularVelocity_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_angularFactor_set(long jarg1, btSolverBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverBody_m_angularFactor_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_linearFactor_set(long jarg1, btSolverBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverBody_m_linearFactor_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_invMass_set(long jarg1, btSolverBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverBody_m_invMass_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_pushVelocity_set(long jarg1, btSolverBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverBody_m_pushVelocity_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_turnVelocity_set(long jarg1, btSolverBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverBody_m_turnVelocity_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_linearVelocity_set(long jarg1, btSolverBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverBody_m_linearVelocity_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_angularVelocity_set(long jarg1, btSolverBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverBody_m_angularVelocity_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_m_originalBody_set(long jarg1, btSolverBody jarg1_, long jarg2, btRigidBody jarg2_);
  public final static native long btSolverBody_m_originalBody_get(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_setWorldTransform(long jarg1, btSolverBody jarg1_, Matrix4 jarg2);
  public final static native Matrix4 btSolverBody_getWorldTransform(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_getVelocityInLocalPointObsolete(long jarg1, btSolverBody jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btSolverBody_getAngularVelocity(long jarg1, btSolverBody jarg1_, Vector3 jarg2);
  public final static native void btSolverBody_applyImpulse(long jarg1, btSolverBody jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native void btSolverBody_internalApplyPushImpulse(long jarg1, btSolverBody jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native Vector3 btSolverBody_getDeltaLinearVelocity(long jarg1, btSolverBody jarg1_);
  public final static native Vector3 btSolverBody_getDeltaAngularVelocity(long jarg1, btSolverBody jarg1_);
  public final static native Vector3 btSolverBody_getPushVelocity(long jarg1, btSolverBody jarg1_);
  public final static native Vector3 btSolverBody_getTurnVelocity(long jarg1, btSolverBody jarg1_);
  public final static native Vector3 btSolverBody_internalGetDeltaLinearVelocity(long jarg1, btSolverBody jarg1_);
  public final static native Vector3 btSolverBody_internalGetDeltaAngularVelocity(long jarg1, btSolverBody jarg1_);
  public final static native Vector3 btSolverBody_internalGetAngularFactor(long jarg1, btSolverBody jarg1_);
  public final static native Vector3 btSolverBody_internalGetInvMass(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_internalSetInvMass(long jarg1, btSolverBody jarg1_, Vector3 jarg2);
  public final static native Vector3 btSolverBody_internalGetPushVelocity(long jarg1, btSolverBody jarg1_);
  public final static native Vector3 btSolverBody_internalGetTurnVelocity(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_internalGetVelocityInLocalPointObsolete(long jarg1, btSolverBody jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btSolverBody_internalGetAngularVelocity(long jarg1, btSolverBody jarg1_, Vector3 jarg2);
  public final static native void btSolverBody_internalApplyImpulse(long jarg1, btSolverBody jarg1_, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native void btSolverBody_writebackVelocity(long jarg1, btSolverBody jarg1_);
  public final static native void btSolverBody_writebackVelocityAndTransform(long jarg1, btSolverBody jarg1_, float jarg2, float jarg3);
  public final static native long new_btSolverBody();
  public final static native void delete_btSolverBody(long jarg1);
  public final static native long new_btSliderConstraint__SWIG_0(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Matrix4 jarg3, Matrix4 jarg4, boolean jarg5);
  public final static native long new_btSliderConstraint__SWIG_1(long jarg1, btRigidBody jarg1_, Matrix4 jarg2, boolean jarg3);
  public final static native void btSliderConstraint_getInfo1NonVirtual(long jarg1, btSliderConstraint jarg1_, long jarg2);
  public final static native void btSliderConstraint_getInfo2NonVirtual(long jarg1, btSliderConstraint jarg1_, long jarg2, btConstraintInfo2 jarg2_, Matrix4 jarg3, Matrix4 jarg4, Vector3 jarg5, Vector3 jarg6, float jarg7, float jarg8);
  public final static native long btSliderConstraint_getRigidBodyA(long jarg1, btSliderConstraint jarg1_);
  public final static native long btSliderConstraint_getRigidBodyB(long jarg1, btSliderConstraint jarg1_);
  public final static native Matrix4 btSliderConstraint_getCalculatedTransformA(long jarg1, btSliderConstraint jarg1_);
  public final static native Matrix4 btSliderConstraint_getCalculatedTransformB(long jarg1, btSliderConstraint jarg1_);
  public final static native Matrix4 btSliderConstraint_getFrameOffsetA__SWIG_0(long jarg1, btSliderConstraint jarg1_);
  public final static native Matrix4 btSliderConstraint_getFrameOffsetB__SWIG_0(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getLowerLinLimit(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setLowerLinLimit(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native float btSliderConstraint_getUpperLinLimit(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setUpperLinLimit(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native float btSliderConstraint_getLowerAngLimit(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setLowerAngLimit(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native float btSliderConstraint_getUpperAngLimit(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setUpperAngLimit(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native boolean btSliderConstraint_getUseLinearReferenceFrameA(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getSoftnessDirLin(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getRestitutionDirLin(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getDampingDirLin(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getSoftnessDirAng(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getRestitutionDirAng(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getDampingDirAng(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getSoftnessLimLin(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getRestitutionLimLin(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getDampingLimLin(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getSoftnessLimAng(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getRestitutionLimAng(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getDampingLimAng(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getSoftnessOrthoLin(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getRestitutionOrthoLin(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getDampingOrthoLin(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getSoftnessOrthoAng(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getRestitutionOrthoAng(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getDampingOrthoAng(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setSoftnessDirLin(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setRestitutionDirLin(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setDampingDirLin(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setSoftnessDirAng(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setRestitutionDirAng(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setDampingDirAng(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setSoftnessLimLin(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setRestitutionLimLin(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setDampingLimLin(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setSoftnessLimAng(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setRestitutionLimAng(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setDampingLimAng(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setSoftnessOrthoLin(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setRestitutionOrthoLin(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setDampingOrthoLin(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setSoftnessOrthoAng(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setRestitutionOrthoAng(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setDampingOrthoAng(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native void btSliderConstraint_setPoweredLinMotor(long jarg1, btSliderConstraint jarg1_, boolean jarg2);
  public final static native boolean btSliderConstraint_getPoweredLinMotor(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setTargetLinMotorVelocity(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native float btSliderConstraint_getTargetLinMotorVelocity(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setMaxLinMotorForce(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native float btSliderConstraint_getMaxLinMotorForce(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setPoweredAngMotor(long jarg1, btSliderConstraint jarg1_, boolean jarg2);
  public final static native boolean btSliderConstraint_getPoweredAngMotor(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setTargetAngMotorVelocity(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native float btSliderConstraint_getTargetAngMotorVelocity(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setMaxAngMotorForce(long jarg1, btSliderConstraint jarg1_, float jarg2);
  public final static native float btSliderConstraint_getMaxAngMotorForce(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getLinearPos(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getAngularPos(long jarg1, btSliderConstraint jarg1_);
  public final static native boolean btSliderConstraint_getSolveLinLimit(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getLinDepth(long jarg1, btSliderConstraint jarg1_);
  public final static native boolean btSliderConstraint_getSolveAngLimit(long jarg1, btSliderConstraint jarg1_);
  public final static native float btSliderConstraint_getAngDepth(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_calculateTransforms(long jarg1, btSliderConstraint jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native void btSliderConstraint_testLinLimits(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_testAngLimits(long jarg1, btSliderConstraint jarg1_);
  public final static native Vector3 btSliderConstraint_getAncorInA(long jarg1, btSliderConstraint jarg1_);
  public final static native Vector3 btSliderConstraint_getAncorInB(long jarg1, btSliderConstraint jarg1_);
  public final static native boolean btSliderConstraint_getUseFrameOffset(long jarg1, btSliderConstraint jarg1_);
  public final static native void btSliderConstraint_setUseFrameOffset(long jarg1, btSliderConstraint jarg1_, boolean jarg2);
  public final static native void btSliderConstraint_setFrames(long jarg1, btSliderConstraint jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native void btSliderConstraint_setParam__SWIG_0(long jarg1, btSliderConstraint jarg1_, int jarg2, float jarg3, int jarg4);
  public final static native void btSliderConstraint_setParam__SWIG_1(long jarg1, btSliderConstraint jarg1_, int jarg2, float jarg3);
  public final static native float btSliderConstraint_getParam__SWIG_0(long jarg1, btSliderConstraint jarg1_, int jarg2, int jarg3);
  public final static native float btSliderConstraint_getParam__SWIG_1(long jarg1, btSliderConstraint jarg1_, int jarg2);
  public final static native void delete_btSliderConstraint(long jarg1);
  public final static native void btSliderConstraintData_m_typeConstraintData_set(long jarg1, btSliderConstraintData jarg1_, long jarg2, btTypedConstraintData jarg2_);
  public final static native long btSliderConstraintData_m_typeConstraintData_get(long jarg1, btSliderConstraintData jarg1_);
  public final static native void btSliderConstraintData_m_rbAFrame_set(long jarg1, btSliderConstraintData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btSliderConstraintData_m_rbAFrame_get(long jarg1, btSliderConstraintData jarg1_);
  public final static native void btSliderConstraintData_m_rbBFrame_set(long jarg1, btSliderConstraintData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btSliderConstraintData_m_rbBFrame_get(long jarg1, btSliderConstraintData jarg1_);
  public final static native void btSliderConstraintData_m_linearUpperLimit_set(long jarg1, btSliderConstraintData jarg1_, float jarg2);
  public final static native float btSliderConstraintData_m_linearUpperLimit_get(long jarg1, btSliderConstraintData jarg1_);
  public final static native void btSliderConstraintData_m_linearLowerLimit_set(long jarg1, btSliderConstraintData jarg1_, float jarg2);
  public final static native float btSliderConstraintData_m_linearLowerLimit_get(long jarg1, btSliderConstraintData jarg1_);
  public final static native void btSliderConstraintData_m_angularUpperLimit_set(long jarg1, btSliderConstraintData jarg1_, float jarg2);
  public final static native float btSliderConstraintData_m_angularUpperLimit_get(long jarg1, btSliderConstraintData jarg1_);
  public final static native void btSliderConstraintData_m_angularLowerLimit_set(long jarg1, btSliderConstraintData jarg1_, float jarg2);
  public final static native float btSliderConstraintData_m_angularLowerLimit_get(long jarg1, btSliderConstraintData jarg1_);
  public final static native void btSliderConstraintData_m_useLinearReferenceFrameA_set(long jarg1, btSliderConstraintData jarg1_, int jarg2);
  public final static native int btSliderConstraintData_m_useLinearReferenceFrameA_get(long jarg1, btSliderConstraintData jarg1_);
  public final static native void btSliderConstraintData_m_useOffsetForConstraintFrame_set(long jarg1, btSliderConstraintData jarg1_, int jarg2);
  public final static native int btSliderConstraintData_m_useOffsetForConstraintFrame_get(long jarg1, btSliderConstraintData jarg1_);
  public final static native long new_btSliderConstraintData();
  public final static native void delete_btSliderConstraintData(long jarg1);
  public final static native long new_btConstraintSetting();
  public final static native void btConstraintSetting_m_tau_set(long jarg1, btConstraintSetting jarg1_, float jarg2);
  public final static native float btConstraintSetting_m_tau_get(long jarg1, btConstraintSetting jarg1_);
  public final static native void btConstraintSetting_m_damping_set(long jarg1, btConstraintSetting jarg1_, float jarg2);
  public final static native float btConstraintSetting_m_damping_get(long jarg1, btConstraintSetting jarg1_);
  public final static native void btConstraintSetting_m_impulseClamp_set(long jarg1, btConstraintSetting jarg1_, float jarg2);
  public final static native float btConstraintSetting_m_impulseClamp_get(long jarg1, btConstraintSetting jarg1_);
  public final static native void delete_btConstraintSetting(long jarg1);
  public final static native void btPoint2PointConstraint_m_useSolveConstraintObsolete_set(long jarg1, btPoint2PointConstraint jarg1_, boolean jarg2);
  public final static native boolean btPoint2PointConstraint_m_useSolveConstraintObsolete_get(long jarg1, btPoint2PointConstraint jarg1_);
  public final static native void btPoint2PointConstraint_m_setting_set(long jarg1, btPoint2PointConstraint jarg1_, long jarg2, btConstraintSetting jarg2_);
  public final static native long btPoint2PointConstraint_m_setting_get(long jarg1, btPoint2PointConstraint jarg1_);
  public final static native long new_btPoint2PointConstraint__SWIG_0(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Vector3 jarg3, Vector3 jarg4);
  public final static native long new_btPoint2PointConstraint__SWIG_1(long jarg1, btRigidBody jarg1_, Vector3 jarg2);
  public final static native void btPoint2PointConstraint_getInfo1NonVirtual(long jarg1, btPoint2PointConstraint jarg1_, long jarg2);
  public final static native void btPoint2PointConstraint_getInfo2NonVirtual(long jarg1, btPoint2PointConstraint jarg1_, long jarg2, btConstraintInfo2 jarg2_, Matrix4 jarg3, Matrix4 jarg4);
  public final static native void btPoint2PointConstraint_updateRHS(long jarg1, btPoint2PointConstraint jarg1_, float jarg2);
  public final static native void btPoint2PointConstraint_setPivotA(long jarg1, btPoint2PointConstraint jarg1_, Vector3 jarg2);
  public final static native void btPoint2PointConstraint_setPivotB(long jarg1, btPoint2PointConstraint jarg1_, Vector3 jarg2);
  public final static native Vector3 btPoint2PointConstraint_getPivotInA(long jarg1, btPoint2PointConstraint jarg1_);
  public final static native Vector3 btPoint2PointConstraint_getPivotInB(long jarg1, btPoint2PointConstraint jarg1_);
  public final static native void btPoint2PointConstraint_setParam__SWIG_0(long jarg1, btPoint2PointConstraint jarg1_, int jarg2, float jarg3, int jarg4);
  public final static native void btPoint2PointConstraint_setParam__SWIG_1(long jarg1, btPoint2PointConstraint jarg1_, int jarg2, float jarg3);
  public final static native float btPoint2PointConstraint_getParam__SWIG_0(long jarg1, btPoint2PointConstraint jarg1_, int jarg2, int jarg3);
  public final static native float btPoint2PointConstraint_getParam__SWIG_1(long jarg1, btPoint2PointConstraint jarg1_, int jarg2);
  public final static native void delete_btPoint2PointConstraint(long jarg1);
  public final static native void btPoint2PointConstraintFloatData_m_typeConstraintData_set(long jarg1, btPoint2PointConstraintFloatData jarg1_, long jarg2, btTypedConstraintData jarg2_);
  public final static native long btPoint2PointConstraintFloatData_m_typeConstraintData_get(long jarg1, btPoint2PointConstraintFloatData jarg1_);
  public final static native void btPoint2PointConstraintFloatData_m_pivotInA_set(long jarg1, btPoint2PointConstraintFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btPoint2PointConstraintFloatData_m_pivotInA_get(long jarg1, btPoint2PointConstraintFloatData jarg1_);
  public final static native void btPoint2PointConstraintFloatData_m_pivotInB_set(long jarg1, btPoint2PointConstraintFloatData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btPoint2PointConstraintFloatData_m_pivotInB_get(long jarg1, btPoint2PointConstraintFloatData jarg1_);
  public final static native long new_btPoint2PointConstraintFloatData();
  public final static native void delete_btPoint2PointConstraintFloatData(long jarg1);
  public final static native void btPoint2PointConstraintDoubleData_m_typeConstraintData_set(long jarg1, btPoint2PointConstraintDoubleData jarg1_, long jarg2, btTypedConstraintData jarg2_);
  public final static native long btPoint2PointConstraintDoubleData_m_typeConstraintData_get(long jarg1, btPoint2PointConstraintDoubleData jarg1_);
  public final static native void btPoint2PointConstraintDoubleData_m_pivotInA_set(long jarg1, btPoint2PointConstraintDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btPoint2PointConstraintDoubleData_m_pivotInA_get(long jarg1, btPoint2PointConstraintDoubleData jarg1_);
  public final static native void btPoint2PointConstraintDoubleData_m_pivotInB_set(long jarg1, btPoint2PointConstraintDoubleData jarg1_, long jarg2, btVector3DoubleData jarg2_);
  public final static native long btPoint2PointConstraintDoubleData_m_pivotInB_get(long jarg1, btPoint2PointConstraintDoubleData jarg1_);
  public final static native long new_btPoint2PointConstraintDoubleData();
  public final static native void delete_btPoint2PointConstraintDoubleData(long jarg1);
  public final static native long new_btJacobianEntry__SWIG_0();
  public final static native long new_btJacobianEntry__SWIG_1(Matrix3 jarg1, Matrix3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6, float jarg7, Vector3 jarg8, float jarg9);
  public final static native long new_btJacobianEntry__SWIG_2(Vector3 jarg1, Matrix3 jarg2, Matrix3 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native long new_btJacobianEntry__SWIG_3(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native long new_btJacobianEntry__SWIG_4(Matrix3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, float jarg6);
  public final static native float btJacobianEntry_getDiagonal(long jarg1, btJacobianEntry jarg1_);
  public final static native float btJacobianEntry_getNonDiagonal__SWIG_0(long jarg1, btJacobianEntry jarg1_, long jarg2, btJacobianEntry jarg2_, float jarg3);
  public final static native float btJacobianEntry_getNonDiagonal__SWIG_1(long jarg1, btJacobianEntry jarg1_, long jarg2, btJacobianEntry jarg2_, float jarg3, float jarg4);
  public final static native float btJacobianEntry_getRelativeVelocity(long jarg1, btJacobianEntry jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native void btJacobianEntry_m_linearJointAxis_set(long jarg1, btJacobianEntry jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btJacobianEntry_m_linearJointAxis_get(long jarg1, btJacobianEntry jarg1_);
  public final static native void btJacobianEntry_m_aJ_set(long jarg1, btJacobianEntry jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btJacobianEntry_m_aJ_get(long jarg1, btJacobianEntry jarg1_);
  public final static native void btJacobianEntry_m_bJ_set(long jarg1, btJacobianEntry jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btJacobianEntry_m_bJ_get(long jarg1, btJacobianEntry jarg1_);
  public final static native void btJacobianEntry_m_0MinvJt_set(long jarg1, btJacobianEntry jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btJacobianEntry_m_0MinvJt_get(long jarg1, btJacobianEntry jarg1_);
  public final static native void btJacobianEntry_m_1MinvJt_set(long jarg1, btJacobianEntry jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btJacobianEntry_m_1MinvJt_get(long jarg1, btJacobianEntry jarg1_);
  public final static native void btJacobianEntry_m_Adiag_set(long jarg1, btJacobianEntry jarg1_, float jarg2);
  public final static native float btJacobianEntry_m_Adiag_get(long jarg1, btJacobianEntry jarg1_);
  public final static native void delete_btJacobianEntry(long jarg1);
  public final static native long new_btSolve2LinearConstraint(float jarg1, float jarg2);
  public final static native void btSolve2LinearConstraint_resolveUnilateralPairConstraint(long jarg1, btSolve2LinearConstraint jarg1_, long jarg2, btRigidBody jarg2_, long jarg3, btRigidBody jarg3_, Matrix3 jarg4, Matrix3 jarg5, Vector3 jarg6, float jarg7, Vector3 jarg8, Vector3 jarg9, Vector3 jarg10, Vector3 jarg11, float jarg12, Vector3 jarg13, Vector3 jarg14, Vector3 jarg15, float jarg16, Vector3 jarg17, Vector3 jarg18, Vector3 jarg19, float jarg20, Vector3 jarg21, long jarg22, long jarg23);
  public final static native void btSolve2LinearConstraint_resolveBilateralPairConstraint(long jarg1, btSolve2LinearConstraint jarg1_, long jarg2, btRigidBody jarg2_, long jarg3, btRigidBody jarg3_, Matrix3 jarg4, Matrix3 jarg5, Vector3 jarg6, float jarg7, Vector3 jarg8, Vector3 jarg9, Vector3 jarg10, Vector3 jarg11, float jarg12, Vector3 jarg13, Vector3 jarg14, Vector3 jarg15, float jarg16, Vector3 jarg17, Vector3 jarg18, Vector3 jarg19, float jarg20, Vector3 jarg21, long jarg22, long jarg23);
  public final static native void delete_btSolve2LinearConstraint(long jarg1);
  public final static native void btRotationalLimitMotor_m_loLimit_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_loLimit_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_hiLimit_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_hiLimit_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_targetVelocity_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_targetVelocity_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_maxMotorForce_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_maxMotorForce_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_maxLimitForce_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_maxLimitForce_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_damping_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_damping_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_limitSoftness_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_limitSoftness_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_normalCFM_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_normalCFM_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_stopERP_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_stopERP_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_stopCFM_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_stopCFM_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_bounce_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_bounce_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_enableMotor_set(long jarg1, btRotationalLimitMotor jarg1_, boolean jarg2);
  public final static native boolean btRotationalLimitMotor_m_enableMotor_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_currentLimitError_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_currentLimitError_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_currentPosition_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_currentPosition_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_currentLimit_set(long jarg1, btRotationalLimitMotor jarg1_, int jarg2);
  public final static native int btRotationalLimitMotor_m_currentLimit_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native void btRotationalLimitMotor_m_accumulatedImpulse_set(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_m_accumulatedImpulse_get(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native long new_btRotationalLimitMotor__SWIG_0();
  public final static native long new_btRotationalLimitMotor__SWIG_1(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native boolean btRotationalLimitMotor_isLimited(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native boolean btRotationalLimitMotor_needApplyTorques(long jarg1, btRotationalLimitMotor jarg1_);
  public final static native int btRotationalLimitMotor_testLimitValue(long jarg1, btRotationalLimitMotor jarg1_, float jarg2);
  public final static native float btRotationalLimitMotor_solveAngularLimits(long jarg1, btRotationalLimitMotor jarg1_, float jarg2, Vector3 jarg3, float jarg4, long jarg5, btRigidBody jarg5_, long jarg6, btRigidBody jarg6_);
  public final static native void delete_btRotationalLimitMotor(long jarg1);
  public final static native void btTranslationalLimitMotor_m_lowerLimit_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_lowerLimit_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_upperLimit_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_upperLimit_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_accumulatedImpulse_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_accumulatedImpulse_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_limitSoftness_set(long jarg1, btTranslationalLimitMotor jarg1_, float jarg2);
  public final static native float btTranslationalLimitMotor_m_limitSoftness_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_damping_set(long jarg1, btTranslationalLimitMotor jarg1_, float jarg2);
  public final static native float btTranslationalLimitMotor_m_damping_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_restitution_set(long jarg1, btTranslationalLimitMotor jarg1_, float jarg2);
  public final static native float btTranslationalLimitMotor_m_restitution_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_normalCFM_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_normalCFM_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_stopERP_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_stopERP_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_stopCFM_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_stopCFM_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_enableMotor_set(long jarg1, btTranslationalLimitMotor jarg1_, boolean[] jarg2);
  public final static native boolean[] btTranslationalLimitMotor_m_enableMotor_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_targetVelocity_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_targetVelocity_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_maxMotorForce_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_maxMotorForce_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_currentLimitError_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_currentLimitError_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_currentLinearDiff_set(long jarg1, btTranslationalLimitMotor jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btTranslationalLimitMotor_m_currentLinearDiff_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native void btTranslationalLimitMotor_m_currentLimit_set(long jarg1, btTranslationalLimitMotor jarg1_, int[] jarg2);
  public final static native int[] btTranslationalLimitMotor_m_currentLimit_get(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native long new_btTranslationalLimitMotor__SWIG_0();
  public final static native long new_btTranslationalLimitMotor__SWIG_1(long jarg1, btTranslationalLimitMotor jarg1_);
  public final static native boolean btTranslationalLimitMotor_isLimited(long jarg1, btTranslationalLimitMotor jarg1_, int jarg2);
  public final static native boolean btTranslationalLimitMotor_needApplyForce(long jarg1, btTranslationalLimitMotor jarg1_, int jarg2);
  public final static native int btTranslationalLimitMotor_testLimitValue(long jarg1, btTranslationalLimitMotor jarg1_, int jarg2, float jarg3);
  public final static native float btTranslationalLimitMotor_solveLinearAxis(long jarg1, btTranslationalLimitMotor jarg1_, float jarg2, float jarg3, long jarg4, btRigidBody jarg4_, Vector3 jarg5, long jarg6, btRigidBody jarg6_, Vector3 jarg7, int jarg8, Vector3 jarg9, Vector3 jarg10);
  public final static native void delete_btTranslationalLimitMotor(long jarg1);
  public final static native void btGeneric6DofConstraint_m_useSolveConstraintObsolete_set(long jarg1, btGeneric6DofConstraint jarg1_, boolean jarg2);
  public final static native boolean btGeneric6DofConstraint_m_useSolveConstraintObsolete_get(long jarg1, btGeneric6DofConstraint jarg1_);
  public final static native long new_btGeneric6DofConstraint__SWIG_0(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Matrix4 jarg3, Matrix4 jarg4, boolean jarg5);
  public final static native long new_btGeneric6DofConstraint__SWIG_1(long jarg1, btRigidBody jarg1_, Matrix4 jarg2, boolean jarg3);
  public final static native void btGeneric6DofConstraint_calculateTransforms__SWIG_0(long jarg1, btGeneric6DofConstraint jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native void btGeneric6DofConstraint_calculateTransforms__SWIG_1(long jarg1, btGeneric6DofConstraint jarg1_);
  public final static native Matrix4 btGeneric6DofConstraint_getCalculatedTransformA(long jarg1, btGeneric6DofConstraint jarg1_);
  public final static native Matrix4 btGeneric6DofConstraint_getCalculatedTransformB(long jarg1, btGeneric6DofConstraint jarg1_);
  public final static native Matrix4 btGeneric6DofConstraint_getFrameOffsetA__SWIG_0(long jarg1, btGeneric6DofConstraint jarg1_);
  public final static native Matrix4 btGeneric6DofConstraint_getFrameOffsetB__SWIG_0(long jarg1, btGeneric6DofConstraint jarg1_);
  public final static native void btGeneric6DofConstraint_getInfo1NonVirtual(long jarg1, btGeneric6DofConstraint jarg1_, long jarg2);
  public final static native void btGeneric6DofConstraint_getInfo2NonVirtual(long jarg1, btGeneric6DofConstraint jarg1_, long jarg2, btConstraintInfo2 jarg2_, Matrix4 jarg3, Matrix4 jarg4, Vector3 jarg5, Vector3 jarg6, Vector3 jarg7, Vector3 jarg8);
  public final static native void btGeneric6DofConstraint_updateRHS(long jarg1, btGeneric6DofConstraint jarg1_, float jarg2);
  public final static native Vector3 btGeneric6DofConstraint_getAxis(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2);
  public final static native float btGeneric6DofConstraint_getAngle(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2);
  public final static native float btGeneric6DofConstraint_getRelativePivotPosition(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2);
  public final static native void btGeneric6DofConstraint_setFrames(long jarg1, btGeneric6DofConstraint jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native boolean btGeneric6DofConstraint_testAngularLimitMotor(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2);
  public final static native void btGeneric6DofConstraint_setLinearLowerLimit(long jarg1, btGeneric6DofConstraint jarg1_, Vector3 jarg2);
  public final static native void btGeneric6DofConstraint_getLinearLowerLimit(long jarg1, btGeneric6DofConstraint jarg1_, Vector3 jarg2);
  public final static native void btGeneric6DofConstraint_setLinearUpperLimit(long jarg1, btGeneric6DofConstraint jarg1_, Vector3 jarg2);
  public final static native void btGeneric6DofConstraint_getLinearUpperLimit(long jarg1, btGeneric6DofConstraint jarg1_, Vector3 jarg2);
  public final static native void btGeneric6DofConstraint_setAngularLowerLimit(long jarg1, btGeneric6DofConstraint jarg1_, Vector3 jarg2);
  public final static native void btGeneric6DofConstraint_getAngularLowerLimit(long jarg1, btGeneric6DofConstraint jarg1_, Vector3 jarg2);
  public final static native void btGeneric6DofConstraint_setAngularUpperLimit(long jarg1, btGeneric6DofConstraint jarg1_, Vector3 jarg2);
  public final static native void btGeneric6DofConstraint_getAngularUpperLimit(long jarg1, btGeneric6DofConstraint jarg1_, Vector3 jarg2);
  public final static native long btGeneric6DofConstraint_getRotationalLimitMotor(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2);
  public final static native long btGeneric6DofConstraint_getTranslationalLimitMotor(long jarg1, btGeneric6DofConstraint jarg1_);
  public final static native void btGeneric6DofConstraint_setLimit(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2, float jarg3, float jarg4);
  public final static native boolean btGeneric6DofConstraint_isLimited(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2);
  public final static native void btGeneric6DofConstraint_calcAnchorPos(long jarg1, btGeneric6DofConstraint jarg1_);
  public final static native int btGeneric6DofConstraint_get_limit_motor_info2__SWIG_0(long jarg1, btGeneric6DofConstraint jarg1_, long jarg2, btRotationalLimitMotor jarg2_, Matrix4 jarg3, Matrix4 jarg4, Vector3 jarg5, Vector3 jarg6, Vector3 jarg7, Vector3 jarg8, long jarg9, btConstraintInfo2 jarg9_, int jarg10, Vector3 jarg11, int jarg12, int jarg13);
  public final static native int btGeneric6DofConstraint_get_limit_motor_info2__SWIG_1(long jarg1, btGeneric6DofConstraint jarg1_, long jarg2, btRotationalLimitMotor jarg2_, Matrix4 jarg3, Matrix4 jarg4, Vector3 jarg5, Vector3 jarg6, Vector3 jarg7, Vector3 jarg8, long jarg9, btConstraintInfo2 jarg9_, int jarg10, Vector3 jarg11, int jarg12);
  public final static native boolean btGeneric6DofConstraint_getUseFrameOffset(long jarg1, btGeneric6DofConstraint jarg1_);
  public final static native void btGeneric6DofConstraint_setUseFrameOffset(long jarg1, btGeneric6DofConstraint jarg1_, boolean jarg2);
  public final static native void btGeneric6DofConstraint_setParam__SWIG_0(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2, float jarg3, int jarg4);
  public final static native void btGeneric6DofConstraint_setParam__SWIG_1(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2, float jarg3);
  public final static native float btGeneric6DofConstraint_getParam__SWIG_0(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2, int jarg3);
  public final static native float btGeneric6DofConstraint_getParam__SWIG_1(long jarg1, btGeneric6DofConstraint jarg1_, int jarg2);
  public final static native void btGeneric6DofConstraint_setAxis(long jarg1, btGeneric6DofConstraint jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void delete_btGeneric6DofConstraint(long jarg1);
  public final static native void btGeneric6DofConstraintData_m_typeConstraintData_set(long jarg1, btGeneric6DofConstraintData jarg1_, long jarg2, btTypedConstraintData jarg2_);
  public final static native long btGeneric6DofConstraintData_m_typeConstraintData_get(long jarg1, btGeneric6DofConstraintData jarg1_);
  public final static native void btGeneric6DofConstraintData_m_rbAFrame_set(long jarg1, btGeneric6DofConstraintData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btGeneric6DofConstraintData_m_rbAFrame_get(long jarg1, btGeneric6DofConstraintData jarg1_);
  public final static native void btGeneric6DofConstraintData_m_rbBFrame_set(long jarg1, btGeneric6DofConstraintData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btGeneric6DofConstraintData_m_rbBFrame_get(long jarg1, btGeneric6DofConstraintData jarg1_);
  public final static native void btGeneric6DofConstraintData_m_linearUpperLimit_set(long jarg1, btGeneric6DofConstraintData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btGeneric6DofConstraintData_m_linearUpperLimit_get(long jarg1, btGeneric6DofConstraintData jarg1_);
  public final static native void btGeneric6DofConstraintData_m_linearLowerLimit_set(long jarg1, btGeneric6DofConstraintData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btGeneric6DofConstraintData_m_linearLowerLimit_get(long jarg1, btGeneric6DofConstraintData jarg1_);
  public final static native void btGeneric6DofConstraintData_m_angularUpperLimit_set(long jarg1, btGeneric6DofConstraintData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btGeneric6DofConstraintData_m_angularUpperLimit_get(long jarg1, btGeneric6DofConstraintData jarg1_);
  public final static native void btGeneric6DofConstraintData_m_angularLowerLimit_set(long jarg1, btGeneric6DofConstraintData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btGeneric6DofConstraintData_m_angularLowerLimit_get(long jarg1, btGeneric6DofConstraintData jarg1_);
  public final static native void btGeneric6DofConstraintData_m_useLinearReferenceFrameA_set(long jarg1, btGeneric6DofConstraintData jarg1_, int jarg2);
  public final static native int btGeneric6DofConstraintData_m_useLinearReferenceFrameA_get(long jarg1, btGeneric6DofConstraintData jarg1_);
  public final static native void btGeneric6DofConstraintData_m_useOffsetForConstraintFrame_set(long jarg1, btGeneric6DofConstraintData jarg1_, int jarg2);
  public final static native int btGeneric6DofConstraintData_m_useOffsetForConstraintFrame_get(long jarg1, btGeneric6DofConstraintData jarg1_);
  public final static native long new_btGeneric6DofConstraintData();
  public final static native void delete_btGeneric6DofConstraintData(long jarg1);
  public final static native long new_btUniversalConstraint(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native Vector3 btUniversalConstraint_getAnchor(long jarg1, btUniversalConstraint jarg1_);
  public final static native Vector3 btUniversalConstraint_getAnchor2(long jarg1, btUniversalConstraint jarg1_);
  public final static native Vector3 btUniversalConstraint_getAxis1(long jarg1, btUniversalConstraint jarg1_);
  public final static native Vector3 btUniversalConstraint_getAxis2(long jarg1, btUniversalConstraint jarg1_);
  public final static native float btUniversalConstraint_getAngle1(long jarg1, btUniversalConstraint jarg1_);
  public final static native float btUniversalConstraint_getAngle2(long jarg1, btUniversalConstraint jarg1_);
  public final static native void btUniversalConstraint_setUpperLimit(long jarg1, btUniversalConstraint jarg1_, float jarg2, float jarg3);
  public final static native void btUniversalConstraint_setLowerLimit(long jarg1, btUniversalConstraint jarg1_, float jarg2, float jarg3);
  public final static native void btUniversalConstraint_setAxis(long jarg1, btUniversalConstraint jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void delete_btUniversalConstraint(long jarg1);
  public final static native void btContactConstraint_setContactManifold(long jarg1, btContactConstraint jarg1_, long jarg2, btPersistentManifold jarg2_);
  public final static native long btContactConstraint_getContactManifold__SWIG_0(long jarg1, btContactConstraint jarg1_);
  public final static native void delete_btContactConstraint(long jarg1);
  public final static native float resolveSingleCollision(long jarg1, btRigidBody jarg1_, long jarg2, btCollisionObject jarg2_, Vector3 jarg3, Vector3 jarg4, long jarg5, btContactSolverInfo jarg5_, float jarg6);
  public final static native void resolveSingleBilateral(long jarg1, btRigidBody jarg1_, Vector3 jarg2, long jarg3, btRigidBody jarg3_, Vector3 jarg4, float jarg5, Vector3 jarg6, long jarg7, float jarg8);
  public final static native long new_btConeTwistConstraint__SWIG_0(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Matrix4 jarg3, Matrix4 jarg4);
  public final static native long new_btConeTwistConstraint__SWIG_1(long jarg1, btRigidBody jarg1_, Matrix4 jarg2);
  public final static native void btConeTwistConstraint_getInfo1NonVirtual(long jarg1, btConeTwistConstraint jarg1_, long jarg2);
  public final static native void btConeTwistConstraint_getInfo2NonVirtual(long jarg1, btConeTwistConstraint jarg1_, long jarg2, btConstraintInfo2 jarg2_, Matrix4 jarg3, Matrix4 jarg4, Matrix3 jarg5, Matrix3 jarg6);
  public final static native void btConeTwistConstraint_updateRHS(long jarg1, btConeTwistConstraint jarg1_, float jarg2);
  public final static native long btConeTwistConstraint_getRigidBodyA(long jarg1, btConeTwistConstraint jarg1_);
  public final static native long btConeTwistConstraint_getRigidBodyB(long jarg1, btConeTwistConstraint jarg1_);
  public final static native void btConeTwistConstraint_setAngularOnly(long jarg1, btConeTwistConstraint jarg1_, boolean jarg2);
  public final static native void btConeTwistConstraint_setLimit__SWIG_0(long jarg1, btConeTwistConstraint jarg1_, int jarg2, float jarg3);
  public final static native void btConeTwistConstraint_setLimit__SWIG_1(long jarg1, btConeTwistConstraint jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);
  public final static native void btConeTwistConstraint_setLimit__SWIG_2(long jarg1, btConeTwistConstraint jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void btConeTwistConstraint_setLimit__SWIG_3(long jarg1, btConeTwistConstraint jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void btConeTwistConstraint_setLimit__SWIG_4(long jarg1, btConeTwistConstraint jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native Matrix4 btConeTwistConstraint_getAFrame(long jarg1, btConeTwistConstraint jarg1_);
  public final static native Matrix4 btConeTwistConstraint_getBFrame(long jarg1, btConeTwistConstraint jarg1_);
  public final static native int btConeTwistConstraint_getSolveTwistLimit(long jarg1, btConeTwistConstraint jarg1_);
  public final static native int btConeTwistConstraint_getSolveSwingLimit(long jarg1, btConeTwistConstraint jarg1_);
  public final static native float btConeTwistConstraint_getTwistLimitSign(long jarg1, btConeTwistConstraint jarg1_);
  public final static native void btConeTwistConstraint_calcAngleInfo(long jarg1, btConeTwistConstraint jarg1_);
  public final static native void btConeTwistConstraint_calcAngleInfo2(long jarg1, btConeTwistConstraint jarg1_, Matrix4 jarg2, Matrix4 jarg3, Matrix3 jarg4, Matrix3 jarg5);
  public final static native float btConeTwistConstraint_getSwingSpan1(long jarg1, btConeTwistConstraint jarg1_);
  public final static native float btConeTwistConstraint_getSwingSpan2(long jarg1, btConeTwistConstraint jarg1_);
  public final static native float btConeTwistConstraint_getTwistSpan(long jarg1, btConeTwistConstraint jarg1_);
  public final static native float btConeTwistConstraint_getTwistAngle(long jarg1, btConeTwistConstraint jarg1_);
  public final static native boolean btConeTwistConstraint_isPastSwingLimit(long jarg1, btConeTwistConstraint jarg1_);
  public final static native void btConeTwistConstraint_setDamping(long jarg1, btConeTwistConstraint jarg1_, float jarg2);
  public final static native void btConeTwistConstraint_enableMotor(long jarg1, btConeTwistConstraint jarg1_, boolean jarg2);
  public final static native void btConeTwistConstraint_setMaxMotorImpulse(long jarg1, btConeTwistConstraint jarg1_, float jarg2);
  public final static native void btConeTwistConstraint_setMaxMotorImpulseNormalized(long jarg1, btConeTwistConstraint jarg1_, float jarg2);
  public final static native float btConeTwistConstraint_getFixThresh(long jarg1, btConeTwistConstraint jarg1_);
  public final static native void btConeTwistConstraint_setFixThresh(long jarg1, btConeTwistConstraint jarg1_, float jarg2);
  public final static native void btConeTwistConstraint_setMotorTarget(long jarg1, btConeTwistConstraint jarg1_, Quaternion jarg2);
  public final static native void btConeTwistConstraint_setMotorTargetInConstraintSpace(long jarg1, btConeTwistConstraint jarg1_, Quaternion jarg2);
  public final static native Vector3 btConeTwistConstraint_GetPointForAngle(long jarg1, btConeTwistConstraint jarg1_, float jarg2, float jarg3);
  public final static native void btConeTwistConstraint_setParam__SWIG_0(long jarg1, btConeTwistConstraint jarg1_, int jarg2, float jarg3, int jarg4);
  public final static native void btConeTwistConstraint_setParam__SWIG_1(long jarg1, btConeTwistConstraint jarg1_, int jarg2, float jarg3);
  public final static native void btConeTwistConstraint_setFrames(long jarg1, btConeTwistConstraint jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native Matrix4 btConeTwistConstraint_getFrameOffsetA(long jarg1, btConeTwistConstraint jarg1_);
  public final static native Matrix4 btConeTwistConstraint_getFrameOffsetB(long jarg1, btConeTwistConstraint jarg1_);
  public final static native float btConeTwistConstraint_getParam__SWIG_0(long jarg1, btConeTwistConstraint jarg1_, int jarg2, int jarg3);
  public final static native float btConeTwistConstraint_getParam__SWIG_1(long jarg1, btConeTwistConstraint jarg1_, int jarg2);
  public final static native void delete_btConeTwistConstraint(long jarg1);
  public final static native void btConeTwistConstraintData_m_typeConstraintData_set(long jarg1, btConeTwistConstraintData jarg1_, long jarg2, btTypedConstraintData jarg2_);
  public final static native long btConeTwistConstraintData_m_typeConstraintData_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_rbAFrame_set(long jarg1, btConeTwistConstraintData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btConeTwistConstraintData_m_rbAFrame_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_rbBFrame_set(long jarg1, btConeTwistConstraintData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btConeTwistConstraintData_m_rbBFrame_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_swingSpan1_set(long jarg1, btConeTwistConstraintData jarg1_, float jarg2);
  public final static native float btConeTwistConstraintData_m_swingSpan1_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_swingSpan2_set(long jarg1, btConeTwistConstraintData jarg1_, float jarg2);
  public final static native float btConeTwistConstraintData_m_swingSpan2_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_twistSpan_set(long jarg1, btConeTwistConstraintData jarg1_, float jarg2);
  public final static native float btConeTwistConstraintData_m_twistSpan_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_limitSoftness_set(long jarg1, btConeTwistConstraintData jarg1_, float jarg2);
  public final static native float btConeTwistConstraintData_m_limitSoftness_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_biasFactor_set(long jarg1, btConeTwistConstraintData jarg1_, float jarg2);
  public final static native float btConeTwistConstraintData_m_biasFactor_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_relaxationFactor_set(long jarg1, btConeTwistConstraintData jarg1_, float jarg2);
  public final static native float btConeTwistConstraintData_m_relaxationFactor_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_damping_set(long jarg1, btConeTwistConstraintData jarg1_, float jarg2);
  public final static native float btConeTwistConstraintData_m_damping_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native void btConeTwistConstraintData_m_pad_set(long jarg1, btConeTwistConstraintData jarg1_, String jarg2);
  public final static native String btConeTwistConstraintData_m_pad_get(long jarg1, btConeTwistConstraintData jarg1_);
  public final static native long new_btConeTwistConstraintData();
  public final static native void delete_btConeTwistConstraintData(long jarg1);
  public final static native long new_btGeneric6DofSpringConstraint__SWIG_0(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Matrix4 jarg3, Matrix4 jarg4, boolean jarg5);
  public final static native long new_btGeneric6DofSpringConstraint__SWIG_1(long jarg1, btRigidBody jarg1_, Matrix4 jarg2, boolean jarg3);
  public final static native void btGeneric6DofSpringConstraint_enableSpring(long jarg1, btGeneric6DofSpringConstraint jarg1_, int jarg2, boolean jarg3);
  public final static native void btGeneric6DofSpringConstraint_setStiffness(long jarg1, btGeneric6DofSpringConstraint jarg1_, int jarg2, float jarg3);
  public final static native void btGeneric6DofSpringConstraint_setDamping(long jarg1, btGeneric6DofSpringConstraint jarg1_, int jarg2, float jarg3);
  public final static native void btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_0(long jarg1, btGeneric6DofSpringConstraint jarg1_);
  public final static native void btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_1(long jarg1, btGeneric6DofSpringConstraint jarg1_, int jarg2);
  public final static native void btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_2(long jarg1, btGeneric6DofSpringConstraint jarg1_, int jarg2, float jarg3);
  public final static native void btGeneric6DofSpringConstraint_setAxis(long jarg1, btGeneric6DofSpringConstraint jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void delete_btGeneric6DofSpringConstraint(long jarg1);
  public final static native void btGeneric6DofSpringConstraintData_m_6dofData_set(long jarg1, btGeneric6DofSpringConstraintData jarg1_, long jarg2, btGeneric6DofConstraintData jarg2_);
  public final static native long btGeneric6DofSpringConstraintData_m_6dofData_get(long jarg1, btGeneric6DofSpringConstraintData jarg1_);
  public final static native void btGeneric6DofSpringConstraintData_m_springEnabled_set(long jarg1, btGeneric6DofSpringConstraintData jarg1_, int[] jarg2);
  public final static native int[] btGeneric6DofSpringConstraintData_m_springEnabled_get(long jarg1, btGeneric6DofSpringConstraintData jarg1_);
  public final static native void btGeneric6DofSpringConstraintData_m_equilibriumPoint_set(long jarg1, btGeneric6DofSpringConstraintData jarg1_, float[] jarg2);
  public final static native float[] btGeneric6DofSpringConstraintData_m_equilibriumPoint_get(long jarg1, btGeneric6DofSpringConstraintData jarg1_);
  public final static native void btGeneric6DofSpringConstraintData_m_springStiffness_set(long jarg1, btGeneric6DofSpringConstraintData jarg1_, float[] jarg2);
  public final static native float[] btGeneric6DofSpringConstraintData_m_springStiffness_get(long jarg1, btGeneric6DofSpringConstraintData jarg1_);
  public final static native void btGeneric6DofSpringConstraintData_m_springDamping_set(long jarg1, btGeneric6DofSpringConstraintData jarg1_, float[] jarg2);
  public final static native float[] btGeneric6DofSpringConstraintData_m_springDamping_get(long jarg1, btGeneric6DofSpringConstraintData jarg1_);
  public final static native long new_btGeneric6DofSpringConstraintData();
  public final static native void delete_btGeneric6DofSpringConstraintData(long jarg1);
  public final static native long new_btHingeConstraint__SWIG_0(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6, boolean jarg7);
  public final static native long new_btHingeConstraint__SWIG_1(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native long new_btHingeConstraint__SWIG_2(long jarg1, btRigidBody jarg1_, Vector3 jarg2, Vector3 jarg3, boolean jarg4);
  public final static native long new_btHingeConstraint__SWIG_3(long jarg1, btRigidBody jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native long new_btHingeConstraint__SWIG_4(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Matrix4 jarg3, Matrix4 jarg4, boolean jarg5);
  public final static native long new_btHingeConstraint__SWIG_5(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Matrix4 jarg3, Matrix4 jarg4);
  public final static native long new_btHingeConstraint__SWIG_6(long jarg1, btRigidBody jarg1_, Matrix4 jarg2, boolean jarg3);
  public final static native long new_btHingeConstraint__SWIG_7(long jarg1, btRigidBody jarg1_, Matrix4 jarg2);
  public final static native void btHingeConstraint_getInfo1NonVirtual(long jarg1, btHingeConstraint jarg1_, long jarg2);
  public final static native void btHingeConstraint_getInfo2NonVirtual(long jarg1, btHingeConstraint jarg1_, long jarg2, btConstraintInfo2 jarg2_, Matrix4 jarg3, Matrix4 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native void btHingeConstraint_getInfo2Internal(long jarg1, btHingeConstraint jarg1_, long jarg2, btConstraintInfo2 jarg2_, Matrix4 jarg3, Matrix4 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native void btHingeConstraint_getInfo2InternalUsingFrameOffset(long jarg1, btHingeConstraint jarg1_, long jarg2, btConstraintInfo2 jarg2_, Matrix4 jarg3, Matrix4 jarg4, Vector3 jarg5, Vector3 jarg6);
  public final static native void btHingeConstraint_updateRHS(long jarg1, btHingeConstraint jarg1_, float jarg2);
  public final static native long btHingeConstraint_getRigidBodyA__SWIG_0(long jarg1, btHingeConstraint jarg1_);
  public final static native long btHingeConstraint_getRigidBodyB__SWIG_0(long jarg1, btHingeConstraint jarg1_);
  public final static native Matrix4 btHingeConstraint_getFrameOffsetA(long jarg1, btHingeConstraint jarg1_);
  public final static native Matrix4 btHingeConstraint_getFrameOffsetB(long jarg1, btHingeConstraint jarg1_);
  public final static native void btHingeConstraint_setFrames(long jarg1, btHingeConstraint jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native void btHingeConstraint_setAngularOnly(long jarg1, btHingeConstraint jarg1_, boolean jarg2);
  public final static native void btHingeConstraint_enableAngularMotor(long jarg1, btHingeConstraint jarg1_, boolean jarg2, float jarg3, float jarg4);
  public final static native void btHingeConstraint_enableMotor(long jarg1, btHingeConstraint jarg1_, boolean jarg2);
  public final static native void btHingeConstraint_setMaxMotorImpulse(long jarg1, btHingeConstraint jarg1_, float jarg2);
  public final static native void btHingeConstraint_setMotorTarget__SWIG_0(long jarg1, btHingeConstraint jarg1_, Quaternion jarg2, float jarg3);
  public final static native void btHingeConstraint_setMotorTarget__SWIG_1(long jarg1, btHingeConstraint jarg1_, float jarg2, float jarg3);
  public final static native void btHingeConstraint_setLimit__SWIG_0(long jarg1, btHingeConstraint jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void btHingeConstraint_setLimit__SWIG_1(long jarg1, btHingeConstraint jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void btHingeConstraint_setLimit__SWIG_2(long jarg1, btHingeConstraint jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void btHingeConstraint_setLimit__SWIG_3(long jarg1, btHingeConstraint jarg1_, float jarg2, float jarg3);
  public final static native void btHingeConstraint_setAxis(long jarg1, btHingeConstraint jarg1_, Vector3 jarg2);
  public final static native float btHingeConstraint_getLowerLimit(long jarg1, btHingeConstraint jarg1_);
  public final static native float btHingeConstraint_getUpperLimit(long jarg1, btHingeConstraint jarg1_);
  public final static native float btHingeConstraint_getHingeAngle__SWIG_0(long jarg1, btHingeConstraint jarg1_);
  public final static native float btHingeConstraint_getHingeAngle__SWIG_1(long jarg1, btHingeConstraint jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native void btHingeConstraint_testLimit(long jarg1, btHingeConstraint jarg1_, Matrix4 jarg2, Matrix4 jarg3);
  public final static native Matrix4 btHingeConstraint_getAFrame__SWIG_0(long jarg1, btHingeConstraint jarg1_);
  public final static native Matrix4 btHingeConstraint_getBFrame__SWIG_0(long jarg1, btHingeConstraint jarg1_);
  public final static native int btHingeConstraint_getSolveLimit(long jarg1, btHingeConstraint jarg1_);
  public final static native float btHingeConstraint_getLimitSign(long jarg1, btHingeConstraint jarg1_);
  public final static native boolean btHingeConstraint_getAngularOnly(long jarg1, btHingeConstraint jarg1_);
  public final static native boolean btHingeConstraint_getEnableAngularMotor(long jarg1, btHingeConstraint jarg1_);
  public final static native float btHingeConstraint_getMotorTargetVelosity(long jarg1, btHingeConstraint jarg1_);
  public final static native float btHingeConstraint_getMaxMotorImpulse(long jarg1, btHingeConstraint jarg1_);
  public final static native boolean btHingeConstraint_getUseFrameOffset(long jarg1, btHingeConstraint jarg1_);
  public final static native void btHingeConstraint_setUseFrameOffset(long jarg1, btHingeConstraint jarg1_, boolean jarg2);
  public final static native void btHingeConstraint_setParam__SWIG_0(long jarg1, btHingeConstraint jarg1_, int jarg2, float jarg3, int jarg4);
  public final static native void btHingeConstraint_setParam__SWIG_1(long jarg1, btHingeConstraint jarg1_, int jarg2, float jarg3);
  public final static native float btHingeConstraint_getParam__SWIG_0(long jarg1, btHingeConstraint jarg1_, int jarg2, int jarg3);
  public final static native float btHingeConstraint_getParam__SWIG_1(long jarg1, btHingeConstraint jarg1_, int jarg2);
  public final static native void delete_btHingeConstraint(long jarg1);
  public final static native void btHingeConstraintDoubleData_m_typeConstraintData_set(long jarg1, btHingeConstraintDoubleData jarg1_, long jarg2, btTypedConstraintData jarg2_);
  public final static native long btHingeConstraintDoubleData_m_typeConstraintData_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_rbAFrame_set(long jarg1, btHingeConstraintDoubleData jarg1_, long jarg2, btTransformDoubleData jarg2_);
  public final static native long btHingeConstraintDoubleData_m_rbAFrame_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_rbBFrame_set(long jarg1, btHingeConstraintDoubleData jarg1_, long jarg2, btTransformDoubleData jarg2_);
  public final static native long btHingeConstraintDoubleData_m_rbBFrame_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_useReferenceFrameA_set(long jarg1, btHingeConstraintDoubleData jarg1_, int jarg2);
  public final static native int btHingeConstraintDoubleData_m_useReferenceFrameA_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_angularOnly_set(long jarg1, btHingeConstraintDoubleData jarg1_, int jarg2);
  public final static native int btHingeConstraintDoubleData_m_angularOnly_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_enableAngularMotor_set(long jarg1, btHingeConstraintDoubleData jarg1_, int jarg2);
  public final static native int btHingeConstraintDoubleData_m_enableAngularMotor_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_motorTargetVelocity_set(long jarg1, btHingeConstraintDoubleData jarg1_, float jarg2);
  public final static native float btHingeConstraintDoubleData_m_motorTargetVelocity_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_maxMotorImpulse_set(long jarg1, btHingeConstraintDoubleData jarg1_, float jarg2);
  public final static native float btHingeConstraintDoubleData_m_maxMotorImpulse_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_lowerLimit_set(long jarg1, btHingeConstraintDoubleData jarg1_, float jarg2);
  public final static native float btHingeConstraintDoubleData_m_lowerLimit_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_upperLimit_set(long jarg1, btHingeConstraintDoubleData jarg1_, float jarg2);
  public final static native float btHingeConstraintDoubleData_m_upperLimit_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_limitSoftness_set(long jarg1, btHingeConstraintDoubleData jarg1_, float jarg2);
  public final static native float btHingeConstraintDoubleData_m_limitSoftness_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_biasFactor_set(long jarg1, btHingeConstraintDoubleData jarg1_, float jarg2);
  public final static native float btHingeConstraintDoubleData_m_biasFactor_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native void btHingeConstraintDoubleData_m_relaxationFactor_set(long jarg1, btHingeConstraintDoubleData jarg1_, float jarg2);
  public final static native float btHingeConstraintDoubleData_m_relaxationFactor_get(long jarg1, btHingeConstraintDoubleData jarg1_);
  public final static native long new_btHingeConstraintDoubleData();
  public final static native void delete_btHingeConstraintDoubleData(long jarg1);
  public final static native void btHingeConstraintFloatData_m_typeConstraintData_set(long jarg1, btHingeConstraintFloatData jarg1_, long jarg2, btTypedConstraintData jarg2_);
  public final static native long btHingeConstraintFloatData_m_typeConstraintData_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_rbAFrame_set(long jarg1, btHingeConstraintFloatData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btHingeConstraintFloatData_m_rbAFrame_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_rbBFrame_set(long jarg1, btHingeConstraintFloatData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long btHingeConstraintFloatData_m_rbBFrame_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_useReferenceFrameA_set(long jarg1, btHingeConstraintFloatData jarg1_, int jarg2);
  public final static native int btHingeConstraintFloatData_m_useReferenceFrameA_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_angularOnly_set(long jarg1, btHingeConstraintFloatData jarg1_, int jarg2);
  public final static native int btHingeConstraintFloatData_m_angularOnly_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_enableAngularMotor_set(long jarg1, btHingeConstraintFloatData jarg1_, int jarg2);
  public final static native int btHingeConstraintFloatData_m_enableAngularMotor_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_motorTargetVelocity_set(long jarg1, btHingeConstraintFloatData jarg1_, float jarg2);
  public final static native float btHingeConstraintFloatData_m_motorTargetVelocity_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_maxMotorImpulse_set(long jarg1, btHingeConstraintFloatData jarg1_, float jarg2);
  public final static native float btHingeConstraintFloatData_m_maxMotorImpulse_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_lowerLimit_set(long jarg1, btHingeConstraintFloatData jarg1_, float jarg2);
  public final static native float btHingeConstraintFloatData_m_lowerLimit_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_upperLimit_set(long jarg1, btHingeConstraintFloatData jarg1_, float jarg2);
  public final static native float btHingeConstraintFloatData_m_upperLimit_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_limitSoftness_set(long jarg1, btHingeConstraintFloatData jarg1_, float jarg2);
  public final static native float btHingeConstraintFloatData_m_limitSoftness_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_biasFactor_set(long jarg1, btHingeConstraintFloatData jarg1_, float jarg2);
  public final static native float btHingeConstraintFloatData_m_biasFactor_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native void btHingeConstraintFloatData_m_relaxationFactor_set(long jarg1, btHingeConstraintFloatData jarg1_, float jarg2);
  public final static native float btHingeConstraintFloatData_m_relaxationFactor_get(long jarg1, btHingeConstraintFloatData jarg1_);
  public final static native long new_btHingeConstraintFloatData();
  public final static native void delete_btHingeConstraintFloatData(long jarg1);
  public final static native void btSolverConstraint_m_relpos1CrossNormal_set(long jarg1, btSolverConstraint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverConstraint_m_relpos1CrossNormal_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_contactNormal_set(long jarg1, btSolverConstraint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverConstraint_m_contactNormal_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_relpos2CrossNormal_set(long jarg1, btSolverConstraint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverConstraint_m_relpos2CrossNormal_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_angularComponentA_set(long jarg1, btSolverConstraint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverConstraint_m_angularComponentA_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_angularComponentB_set(long jarg1, btSolverConstraint jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSolverConstraint_m_angularComponentB_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_appliedPushImpulse_set(long jarg1, btSolverConstraint jarg1_, float jarg2);
  public final static native float btSolverConstraint_m_appliedPushImpulse_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_appliedImpulse_set(long jarg1, btSolverConstraint jarg1_, float jarg2);
  public final static native float btSolverConstraint_m_appliedImpulse_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_friction_set(long jarg1, btSolverConstraint jarg1_, float jarg2);
  public final static native float btSolverConstraint_m_friction_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_jacDiagABInv_set(long jarg1, btSolverConstraint jarg1_, float jarg2);
  public final static native float btSolverConstraint_m_jacDiagABInv_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_rhs_set(long jarg1, btSolverConstraint jarg1_, float jarg2);
  public final static native float btSolverConstraint_m_rhs_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_cfm_set(long jarg1, btSolverConstraint jarg1_, float jarg2);
  public final static native float btSolverConstraint_m_cfm_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_lowerLimit_set(long jarg1, btSolverConstraint jarg1_, float jarg2);
  public final static native float btSolverConstraint_m_lowerLimit_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_upperLimit_set(long jarg1, btSolverConstraint jarg1_, float jarg2);
  public final static native float btSolverConstraint_m_upperLimit_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_rhsPenetration_set(long jarg1, btSolverConstraint jarg1_, float jarg2);
  public final static native float btSolverConstraint_m_rhsPenetration_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_overrideNumSolverIterations_set(long jarg1, btSolverConstraint jarg1_, int jarg2);
  public final static native int btSolverConstraint_m_overrideNumSolverIterations_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_frictionIndex_set(long jarg1, btSolverConstraint jarg1_, int jarg2);
  public final static native int btSolverConstraint_m_frictionIndex_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_solverBodyIdA_set(long jarg1, btSolverConstraint jarg1_, int jarg2);
  public final static native int btSolverConstraint_m_solverBodyIdA_get(long jarg1, btSolverConstraint jarg1_);
  public final static native void btSolverConstraint_m_solverBodyIdB_set(long jarg1, btSolverConstraint jarg1_, int jarg2);
  public final static native int btSolverConstraint_m_solverBodyIdB_get(long jarg1, btSolverConstraint jarg1_);
  public final static native long new_btSolverConstraint();
  public final static native void delete_btSolverConstraint(long jarg1);
  public final static native long new_btHinge2Constraint(long jarg1, btRigidBody jarg1_, long jarg2, btRigidBody jarg2_, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5);
  public final static native Vector3 btHinge2Constraint_getAnchor(long jarg1, btHinge2Constraint jarg1_);
  public final static native Vector3 btHinge2Constraint_getAnchor2(long jarg1, btHinge2Constraint jarg1_);
  public final static native Vector3 btHinge2Constraint_getAxis1(long jarg1, btHinge2Constraint jarg1_);
  public final static native Vector3 btHinge2Constraint_getAxis2(long jarg1, btHinge2Constraint jarg1_);
  public final static native float btHinge2Constraint_getAngle1(long jarg1, btHinge2Constraint jarg1_);
  public final static native float btHinge2Constraint_getAngle2(long jarg1, btHinge2Constraint jarg1_);
  public final static native void btHinge2Constraint_setUpperLimit(long jarg1, btHinge2Constraint jarg1_, float jarg2);
  public final static native void btHinge2Constraint_setLowerLimit(long jarg1, btHinge2Constraint jarg1_, float jarg2);
  public final static native void delete_btHinge2Constraint(long jarg1);
  public final static native void delete_btVehicleRaycaster(long jarg1);
  public final static native long btVehicleRaycaster_castRay(long jarg1, btVehicleRaycaster jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4);
  public final static native void btWheelInfoConstructionInfo_m_chassisConnectionCS_set(long jarg1, btWheelInfoConstructionInfo jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btWheelInfoConstructionInfo_m_chassisConnectionCS_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_wheelDirectionCS_set(long jarg1, btWheelInfoConstructionInfo jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btWheelInfoConstructionInfo_m_wheelDirectionCS_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_wheelAxleCS_set(long jarg1, btWheelInfoConstructionInfo jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btWheelInfoConstructionInfo_m_wheelAxleCS_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_suspensionRestLength_set(long jarg1, btWheelInfoConstructionInfo jarg1_, float jarg2);
  public final static native float btWheelInfoConstructionInfo_m_suspensionRestLength_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_maxSuspensionTravelCm_set(long jarg1, btWheelInfoConstructionInfo jarg1_, float jarg2);
  public final static native float btWheelInfoConstructionInfo_m_maxSuspensionTravelCm_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_wheelRadius_set(long jarg1, btWheelInfoConstructionInfo jarg1_, float jarg2);
  public final static native float btWheelInfoConstructionInfo_m_wheelRadius_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_suspensionStiffness_set(long jarg1, btWheelInfoConstructionInfo jarg1_, float jarg2);
  public final static native float btWheelInfoConstructionInfo_m_suspensionStiffness_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_wheelsDampingCompression_set(long jarg1, btWheelInfoConstructionInfo jarg1_, float jarg2);
  public final static native float btWheelInfoConstructionInfo_m_wheelsDampingCompression_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_wheelsDampingRelaxation_set(long jarg1, btWheelInfoConstructionInfo jarg1_, float jarg2);
  public final static native float btWheelInfoConstructionInfo_m_wheelsDampingRelaxation_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_frictionSlip_set(long jarg1, btWheelInfoConstructionInfo jarg1_, float jarg2);
  public final static native float btWheelInfoConstructionInfo_m_frictionSlip_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_maxSuspensionForce_set(long jarg1, btWheelInfoConstructionInfo jarg1_, float jarg2);
  public final static native float btWheelInfoConstructionInfo_m_maxSuspensionForce_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfoConstructionInfo_m_bIsFrontWheel_set(long jarg1, btWheelInfoConstructionInfo jarg1_, boolean jarg2);
  public final static native boolean btWheelInfoConstructionInfo_m_bIsFrontWheel_get(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native long new_btWheelInfoConstructionInfo();
  public final static native void delete_btWheelInfoConstructionInfo(long jarg1);
  public final static native void btWheelInfo_m_raycastInfo_set(long jarg1, btWheelInfo jarg1_, long jarg2);
  public final static native long btWheelInfo_m_raycastInfo_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_worldTransform_set(long jarg1, btWheelInfo jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btWheelInfo_m_worldTransform_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_chassisConnectionPointCS_set(long jarg1, btWheelInfo jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btWheelInfo_m_chassisConnectionPointCS_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_wheelDirectionCS_set(long jarg1, btWheelInfo jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btWheelInfo_m_wheelDirectionCS_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_wheelAxleCS_set(long jarg1, btWheelInfo jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btWheelInfo_m_wheelAxleCS_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_suspensionRestLength1_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_suspensionRestLength1_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_maxSuspensionTravelCm_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_maxSuspensionTravelCm_get(long jarg1, btWheelInfo jarg1_);
  public final static native float btWheelInfo_getSuspensionRestLength(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_wheelsRadius_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_wheelsRadius_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_suspensionStiffness_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_suspensionStiffness_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_wheelsDampingCompression_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_wheelsDampingCompression_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_wheelsDampingRelaxation_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_wheelsDampingRelaxation_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_frictionSlip_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_frictionSlip_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_steering_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_steering_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_rotation_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_rotation_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_deltaRotation_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_deltaRotation_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_rollInfluence_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_rollInfluence_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_maxSuspensionForce_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_maxSuspensionForce_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_engineForce_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_engineForce_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_brake_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_brake_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_bIsFrontWheel_set(long jarg1, btWheelInfo jarg1_, boolean jarg2);
  public final static native boolean btWheelInfo_m_bIsFrontWheel_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_clientInfo_set(long jarg1, btWheelInfo jarg1_, long jarg2);
  public final static native long btWheelInfo_m_clientInfo_get(long jarg1, btWheelInfo jarg1_);
  public final static native long new_btWheelInfo__SWIG_0();
  public final static native long new_btWheelInfo__SWIG_1(long jarg1, btWheelInfoConstructionInfo jarg1_);
  public final static native void btWheelInfo_updateWheel(long jarg1, btWheelInfo jarg1_, long jarg2, btRigidBody jarg2_, long jarg3);
  public final static native void btWheelInfo_m_clippedInvContactDotSuspension_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_clippedInvContactDotSuspension_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_suspensionRelativeVelocity_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_suspensionRelativeVelocity_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_wheelsSuspensionForce_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_wheelsSuspensionForce_get(long jarg1, btWheelInfo jarg1_);
  public final static native void btWheelInfo_m_skidInfo_set(long jarg1, btWheelInfo jarg1_, float jarg2);
  public final static native float btWheelInfo_m_skidInfo_get(long jarg1, btWheelInfo jarg1_);
  public final static native void delete_btWheelInfo(long jarg1);
  public final static native long new_btVehicleTuning();
  public final static native void btVehicleTuning_m_suspensionStiffness_set(long jarg1, btVehicleTuning jarg1_, float jarg2);
  public final static native float btVehicleTuning_m_suspensionStiffness_get(long jarg1, btVehicleTuning jarg1_);
  public final static native void btVehicleTuning_m_suspensionCompression_set(long jarg1, btVehicleTuning jarg1_, float jarg2);
  public final static native float btVehicleTuning_m_suspensionCompression_get(long jarg1, btVehicleTuning jarg1_);
  public final static native void btVehicleTuning_m_suspensionDamping_set(long jarg1, btVehicleTuning jarg1_, float jarg2);
  public final static native float btVehicleTuning_m_suspensionDamping_get(long jarg1, btVehicleTuning jarg1_);
  public final static native void btVehicleTuning_m_maxSuspensionTravelCm_set(long jarg1, btVehicleTuning jarg1_, float jarg2);
  public final static native float btVehicleTuning_m_maxSuspensionTravelCm_get(long jarg1, btVehicleTuning jarg1_);
  public final static native void btVehicleTuning_m_frictionSlip_set(long jarg1, btVehicleTuning jarg1_, float jarg2);
  public final static native float btVehicleTuning_m_frictionSlip_get(long jarg1, btVehicleTuning jarg1_);
  public final static native void btVehicleTuning_m_maxSuspensionForce_set(long jarg1, btVehicleTuning jarg1_, float jarg2);
  public final static native float btVehicleTuning_m_maxSuspensionForce_get(long jarg1, btVehicleTuning jarg1_);
  public final static native void delete_btVehicleTuning(long jarg1);
  public final static native long new_btRaycastVehicle(long jarg1, btVehicleTuning jarg1_, long jarg2, btRigidBody jarg2_, long jarg3, btVehicleRaycaster jarg3_);
  public final static native void delete_btRaycastVehicle(long jarg1);
  public final static native Matrix4 btRaycastVehicle_getChassisWorldTransform(long jarg1, btRaycastVehicle jarg1_);
  public final static native float btRaycastVehicle_rayCast(long jarg1, btRaycastVehicle jarg1_, long jarg2, btWheelInfo jarg2_);
  public final static native void btRaycastVehicle_updateVehicle(long jarg1, btRaycastVehicle jarg1_, float jarg2);
  public final static native void btRaycastVehicle_resetSuspension(long jarg1, btRaycastVehicle jarg1_);
  public final static native float btRaycastVehicle_getSteeringValue(long jarg1, btRaycastVehicle jarg1_, int jarg2);
  public final static native void btRaycastVehicle_setSteeringValue(long jarg1, btRaycastVehicle jarg1_, float jarg2, int jarg3);
  public final static native void btRaycastVehicle_applyEngineForce(long jarg1, btRaycastVehicle jarg1_, float jarg2, int jarg3);
  public final static native Matrix4 btRaycastVehicle_getWheelTransformWS(long jarg1, btRaycastVehicle jarg1_, int jarg2);
  public final static native void btRaycastVehicle_updateWheelTransform__SWIG_0(long jarg1, btRaycastVehicle jarg1_, int jarg2, boolean jarg3);
  public final static native void btRaycastVehicle_updateWheelTransform__SWIG_1(long jarg1, btRaycastVehicle jarg1_, int jarg2);
  public final static native long btRaycastVehicle_addWheel(long jarg1, btRaycastVehicle jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, float jarg5, float jarg6, long jarg7, btVehicleTuning jarg7_, boolean jarg8);
  public final static native int btRaycastVehicle_getNumWheels(long jarg1, btRaycastVehicle jarg1_);
  public final static native void btRaycastVehicle_m_wheelInfo_set(long jarg1, btRaycastVehicle jarg1_, long jarg2);
  public final static native long btRaycastVehicle_m_wheelInfo_get(long jarg1, btRaycastVehicle jarg1_);
  public final static native long btRaycastVehicle_getWheelInfo__SWIG_0(long jarg1, btRaycastVehicle jarg1_, int jarg2);
  public final static native void btRaycastVehicle_updateWheelTransformsWS__SWIG_0(long jarg1, btRaycastVehicle jarg1_, long jarg2, btWheelInfo jarg2_, boolean jarg3);
  public final static native void btRaycastVehicle_updateWheelTransformsWS__SWIG_1(long jarg1, btRaycastVehicle jarg1_, long jarg2, btWheelInfo jarg2_);
  public final static native void btRaycastVehicle_setBrake(long jarg1, btRaycastVehicle jarg1_, float jarg2, int jarg3);
  public final static native void btRaycastVehicle_setPitchControl(long jarg1, btRaycastVehicle jarg1_, float jarg2);
  public final static native void btRaycastVehicle_updateSuspension(long jarg1, btRaycastVehicle jarg1_, float jarg2);
  public final static native void btRaycastVehicle_updateFriction(long jarg1, btRaycastVehicle jarg1_, float jarg2);
  public final static native long btRaycastVehicle_getRigidBody__SWIG_0(long jarg1, btRaycastVehicle jarg1_);
  public final static native int btRaycastVehicle_getRightAxis(long jarg1, btRaycastVehicle jarg1_);
  public final static native int btRaycastVehicle_getUpAxis(long jarg1, btRaycastVehicle jarg1_);
  public final static native int btRaycastVehicle_getForwardAxis(long jarg1, btRaycastVehicle jarg1_);
  public final static native Vector3 btRaycastVehicle_getForwardVector(long jarg1, btRaycastVehicle jarg1_);
  public final static native float btRaycastVehicle_getCurrentSpeedKmHour(long jarg1, btRaycastVehicle jarg1_);
  public final static native void btRaycastVehicle_setCoordinateSystem(long jarg1, btRaycastVehicle jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int btRaycastVehicle_getUserConstraintType(long jarg1, btRaycastVehicle jarg1_);
  public final static native void btRaycastVehicle_setUserConstraintType(long jarg1, btRaycastVehicle jarg1_, int jarg2);
  public final static native void btRaycastVehicle_setUserConstraintId(long jarg1, btRaycastVehicle jarg1_, int jarg2);
  public final static native int btRaycastVehicle_getUserConstraintId(long jarg1, btRaycastVehicle jarg1_);
  public final static native long new_btDefaultVehicleRaycaster(long jarg1, btDynamicsWorld jarg1_);
  public final static native void delete_btDefaultVehicleRaycaster(long jarg1);
  public final static native void delete_btSoftBodySolver(long jarg1);
  public final static native int btSoftBodySolver_getSolverType(long jarg1, btSoftBodySolver jarg1_);
  public final static native boolean btSoftBodySolver_checkInitialized(long jarg1, btSoftBodySolver jarg1_);
  public final static native void btSoftBodySolver_optimize__SWIG_0(long jarg1, btSoftBodySolver jarg1_, long jarg2, boolean jarg3);
  public final static native void btSoftBodySolver_optimize__SWIG_1(long jarg1, btSoftBodySolver jarg1_, long jarg2);
  public final static native void btSoftBodySolver_copyBackToSoftBodies__SWIG_0(long jarg1, btSoftBodySolver jarg1_, boolean jarg2);
  public final static native void btSoftBodySolver_copyBackToSoftBodies__SWIG_1(long jarg1, btSoftBodySolver jarg1_);
  public final static native void btSoftBodySolver_predictMotion(long jarg1, btSoftBodySolver jarg1_, float jarg2);
  public final static native void btSoftBodySolver_solveConstraints(long jarg1, btSoftBodySolver jarg1_, float jarg2);
  public final static native void btSoftBodySolver_updateSoftBodies(long jarg1, btSoftBodySolver jarg1_);
  public final static native void btSoftBodySolver_processCollision__SWIG_0(long jarg1, btSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
  public final static native void btSoftBodySolver_processCollision__SWIG_1(long jarg1, btSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btSoftBody jarg3_);
  public final static native void btSoftBodySolver_setNumberOfPositionIterations(long jarg1, btSoftBodySolver jarg1_, int jarg2);
  public final static native int btSoftBodySolver_getNumberOfPositionIterations(long jarg1, btSoftBodySolver jarg1_);
  public final static native void btSoftBodySolver_setNumberOfVelocityIterations(long jarg1, btSoftBodySolver jarg1_, int jarg2);
  public final static native int btSoftBodySolver_getNumberOfVelocityIterations(long jarg1, btSoftBodySolver jarg1_);
  public final static native float btSoftBodySolver_getTimeScale(long jarg1, btSoftBodySolver jarg1_);
  public final static native void delete_btSoftBodySolverOutput(long jarg1);
  public final static native void btSoftBodySolverOutput_copySoftBodyToVertexBuffer(long jarg1, btSoftBodySolverOutput jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btVertexBufferDescriptor jarg3_);
  public final static native long new_btDefaultSoftBodySolver();
  public final static native void delete_btDefaultSoftBodySolver(long jarg1);
  public final static native void btDefaultSoftBodySolver_optimize__SWIG_0(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, boolean jarg3);
  public final static native void btDefaultSoftBodySolver_optimize__SWIG_1(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2);
  public final static native void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_0(long jarg1, btDefaultSoftBodySolver jarg1_, boolean jarg2);
  public final static native void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_1(long jarg1, btDefaultSoftBodySolver jarg1_);
  public final static native void btDefaultSoftBodySolver_copySoftBodyToVertexBuffer(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btVertexBufferDescriptor jarg3_);
  public final static native void btDefaultSoftBodySolver_processCollision__SWIG_0(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
  public final static native void btDefaultSoftBodySolver_processCollision__SWIG_1(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btSoftBody jarg3_);
  public final static native void sCti_m_colObj_set(long jarg1, sCti jarg1_, long jarg2, btCollisionObject jarg2_);
  public final static native long sCti_m_colObj_get(long jarg1, sCti jarg1_);
  public final static native void sCti_m_normal_set(long jarg1, sCti jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long sCti_m_normal_get(long jarg1, sCti jarg1_);
  public final static native void sCti_m_offset_set(long jarg1, sCti jarg1_, float jarg2);
  public final static native float sCti_m_offset_get(long jarg1, sCti jarg1_);
  public final static native long new_sCti();
  public final static native void delete_sCti(long jarg1);
  public final static native void sMedium_m_velocity_set(long jarg1, sMedium jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long sMedium_m_velocity_get(long jarg1, sMedium jarg1_);
  public final static native void sMedium_m_pressure_set(long jarg1, sMedium jarg1_, float jarg2);
  public final static native float sMedium_m_pressure_get(long jarg1, sMedium jarg1_);
  public final static native void sMedium_m_density_set(long jarg1, sMedium jarg1_, float jarg2);
  public final static native float sMedium_m_density_get(long jarg1, sMedium jarg1_);
  public final static native long new_sMedium();
  public final static native void delete_sMedium(long jarg1);
  public final static native void Element_m_tag_set(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_m_tag_get(long jarg1, Element jarg1_);
  public final static native long new_Element();
  public final static native void delete_Element(long jarg1);
  public final static native void Material_m_kLST_set(long jarg1, Material jarg1_, float jarg2);
  public final static native float Material_m_kLST_get(long jarg1, Material jarg1_);
  public final static native void Material_m_kAST_set(long jarg1, Material jarg1_, float jarg2);
  public final static native float Material_m_kAST_get(long jarg1, Material jarg1_);
  public final static native void Material_m_kVST_set(long jarg1, Material jarg1_, float jarg2);
  public final static native float Material_m_kVST_get(long jarg1, Material jarg1_);
  public final static native void Material_m_flags_set(long jarg1, Material jarg1_, int jarg2);
  public final static native int Material_m_flags_get(long jarg1, Material jarg1_);
  public final static native long new_Material();
  public final static native void delete_Material(long jarg1);
  public final static native void Feature_m_material_set(long jarg1, Feature jarg1_, long jarg2, Material jarg2_);
  public final static native long Feature_m_material_get(long jarg1, Feature jarg1_);
  public final static native long new_Feature();
  public final static native void delete_Feature(long jarg1);
  public final static native void Node_m_x_set(long jarg1, Node jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long Node_m_x_get(long jarg1, Node jarg1_);
  public final static native void Node_m_q_set(long jarg1, Node jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long Node_m_q_get(long jarg1, Node jarg1_);
  public final static native void Node_m_v_set(long jarg1, Node jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long Node_m_v_get(long jarg1, Node jarg1_);
  public final static native void Node_m_f_set(long jarg1, Node jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long Node_m_f_get(long jarg1, Node jarg1_);
  public final static native void Node_m_n_set(long jarg1, Node jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long Node_m_n_get(long jarg1, Node jarg1_);
  public final static native void Node_m_im_set(long jarg1, Node jarg1_, float jarg2);
  public final static native float Node_m_im_get(long jarg1, Node jarg1_);
  public final static native void Node_m_area_set(long jarg1, Node jarg1_, float jarg2);
  public final static native float Node_m_area_get(long jarg1, Node jarg1_);
  public final static native void Node_m_leaf_set(long jarg1, Node jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long Node_m_leaf_get(long jarg1, Node jarg1_);
  public final static native void Node_m_battach_set(long jarg1, Node jarg1_, int jarg2);
  public final static native int Node_m_battach_get(long jarg1, Node jarg1_);
  public final static native long new_Node();
  public final static native void delete_Node(long jarg1);
  public final static native void Link_m_n_set(long jarg1, Link jarg1_, long jarg2);
  public final static native long Link_m_n_get(long jarg1, Link jarg1_);
  public final static native void Link_m_rl_set(long jarg1, Link jarg1_, float jarg2);
  public final static native float Link_m_rl_get(long jarg1, Link jarg1_);
  public final static native void Link_m_bbending_set(long jarg1, Link jarg1_, int jarg2);
  public final static native int Link_m_bbending_get(long jarg1, Link jarg1_);
  public final static native void Link_m_c0_set(long jarg1, Link jarg1_, float jarg2);
  public final static native float Link_m_c0_get(long jarg1, Link jarg1_);
  public final static native void Link_m_c1_set(long jarg1, Link jarg1_, float jarg2);
  public final static native float Link_m_c1_get(long jarg1, Link jarg1_);
  public final static native void Link_m_c2_set(long jarg1, Link jarg1_, float jarg2);
  public final static native float Link_m_c2_get(long jarg1, Link jarg1_);
  public final static native void Link_m_c3_set(long jarg1, Link jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long Link_m_c3_get(long jarg1, Link jarg1_);
  public final static native long new_Link();
  public final static native void delete_Link(long jarg1);
  public final static native void Face_m_n_set(long jarg1, Face jarg1_, long jarg2);
  public final static native long Face_m_n_get(long jarg1, Face jarg1_);
  public final static native void Face_m_normal_set(long jarg1, Face jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long Face_m_normal_get(long jarg1, Face jarg1_);
  public final static native void Face_m_ra_set(long jarg1, Face jarg1_, float jarg2);
  public final static native float Face_m_ra_get(long jarg1, Face jarg1_);
  public final static native void Face_m_leaf_set(long jarg1, Face jarg1_, long jarg2, btDbvtNode jarg2_);
  public final static native long Face_m_leaf_get(long jarg1, Face jarg1_);
  public final static native long new_Face();
  public final static native void delete_Face(long jarg1);
  public final static native void btSparseSdf3_cells_set(long jarg1, btSparseSdf3 jarg1_, long jarg2);
  public final static native long btSparseSdf3_cells_get(long jarg1, btSparseSdf3 jarg1_);
  public final static native void btSparseSdf3_voxelsz_set(long jarg1, btSparseSdf3 jarg1_, float jarg2);
  public final static native float btSparseSdf3_voxelsz_get(long jarg1, btSparseSdf3 jarg1_);
  public final static native void btSparseSdf3_puid_set(long jarg1, btSparseSdf3 jarg1_, int jarg2);
  public final static native int btSparseSdf3_puid_get(long jarg1, btSparseSdf3 jarg1_);
  public final static native void btSparseSdf3_ncells_set(long jarg1, btSparseSdf3 jarg1_, int jarg2);
  public final static native int btSparseSdf3_ncells_get(long jarg1, btSparseSdf3 jarg1_);
  public final static native void btSparseSdf3_nprobes_set(long jarg1, btSparseSdf3 jarg1_, int jarg2);
  public final static native int btSparseSdf3_nprobes_get(long jarg1, btSparseSdf3 jarg1_);
  public final static native void btSparseSdf3_nqueries_set(long jarg1, btSparseSdf3 jarg1_, int jarg2);
  public final static native int btSparseSdf3_nqueries_get(long jarg1, btSparseSdf3 jarg1_);
  public final static native void btSparseSdf3_Initialize__SWIG_0(long jarg1, btSparseSdf3 jarg1_, int jarg2);
  public final static native void btSparseSdf3_Initialize__SWIG_1(long jarg1, btSparseSdf3 jarg1_);
  public final static native void btSparseSdf3_Reset(long jarg1, btSparseSdf3 jarg1_);
  public final static native void btSparseSdf3_GarbageCollect__SWIG_0(long jarg1, btSparseSdf3 jarg1_, int jarg2);
  public final static native void btSparseSdf3_GarbageCollect__SWIG_1(long jarg1, btSparseSdf3 jarg1_);
  public final static native int btSparseSdf3_RemoveReferences(long jarg1, btSparseSdf3 jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native float btSparseSdf3_Evaluate(long jarg1, btSparseSdf3 jarg1_, Vector3 jarg2, long jarg3, btCollisionShape jarg3_, Vector3 jarg4, float jarg5);
  public final static native void btSparseSdf3_BuildCell(long jarg1, btSparseSdf3 jarg1_, long jarg2);
  public final static native float btSparseSdf3_DistanceToShape(Vector3 jarg1, long jarg2, btCollisionShape jarg2_);
  public final static native long btSparseSdf3_Decompose(float jarg1);
  public final static native float btSparseSdf3_Lerp(float jarg1, float jarg2, float jarg3);
  public final static native long btSparseSdf3_Hash(int jarg1, int jarg2, int jarg3, long jarg4, btCollisionShape jarg4_);
  public final static native long new_btSparseSdf3();
  public final static native void delete_btSparseSdf3(long jarg1);
  public final static native void btSoftBodyWorldInfo_air_density_set(long jarg1, btSoftBodyWorldInfo jarg1_, float jarg2);
  public final static native float btSoftBodyWorldInfo_air_density_get(long jarg1, btSoftBodyWorldInfo jarg1_);
  public final static native void btSoftBodyWorldInfo_water_density_set(long jarg1, btSoftBodyWorldInfo jarg1_, float jarg2);
  public final static native float btSoftBodyWorldInfo_water_density_get(long jarg1, btSoftBodyWorldInfo jarg1_);
  public final static native void btSoftBodyWorldInfo_water_offset_set(long jarg1, btSoftBodyWorldInfo jarg1_, float jarg2);
  public final static native float btSoftBodyWorldInfo_water_offset_get(long jarg1, btSoftBodyWorldInfo jarg1_);
  public final static native void btSoftBodyWorldInfo_water_normal_set(long jarg1, btSoftBodyWorldInfo jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSoftBodyWorldInfo_water_normal_get(long jarg1, btSoftBodyWorldInfo jarg1_);
  public final static native void btSoftBodyWorldInfo_m_broadphase_set(long jarg1, btSoftBodyWorldInfo jarg1_, long jarg2, btBroadphaseInterface jarg2_);
  public final static native long btSoftBodyWorldInfo_m_broadphase_get(long jarg1, btSoftBodyWorldInfo jarg1_);
  public final static native void btSoftBodyWorldInfo_m_dispatcher_set(long jarg1, btSoftBodyWorldInfo jarg1_, long jarg2, btDispatcher jarg2_);
  public final static native long btSoftBodyWorldInfo_m_dispatcher_get(long jarg1, btSoftBodyWorldInfo jarg1_);
  public final static native void btSoftBodyWorldInfo_m_gravity_set(long jarg1, btSoftBodyWorldInfo jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSoftBodyWorldInfo_m_gravity_get(long jarg1, btSoftBodyWorldInfo jarg1_);
  public final static native void btSoftBodyWorldInfo_m_sparsesdf_set(long jarg1, btSoftBodyWorldInfo jarg1_, long jarg2, btSparseSdf3 jarg2_);
  public final static native long btSoftBodyWorldInfo_m_sparsesdf_get(long jarg1, btSoftBodyWorldInfo jarg1_);
  public final static native long new_btSoftBodyWorldInfo();
  public final static native void delete_btSoftBodyWorldInfo(long jarg1);
  public final static native void btSoftBody_m_collisionDisabledObjects_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_collisionDisabledObjects_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_softBodySolver_set(long jarg1, btSoftBody jarg1_, long jarg2, btSoftBodySolver jarg2_);
  public final static native long btSoftBody_m_softBodySolver_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_cfg_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_cfg_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_sst_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_sst_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_pose_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_pose_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_tag_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_tag_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_worldInfo_set(long jarg1, btSoftBody jarg1_, long jarg2, btSoftBodyWorldInfo jarg2_);
  public final static native long btSoftBody_m_worldInfo_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_notes_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_notes_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_nodes_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_nodes_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_links_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_links_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_faces_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_faces_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_tetras_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_tetras_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_anchors_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_anchors_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_rcontacts_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_rcontacts_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_scontacts_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_scontacts_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_joints_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_joints_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_materials_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_materials_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_timeacc_set(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native float btSoftBody_m_timeacc_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_bounds_set(long jarg1, btSoftBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSoftBody_m_bounds_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_bUpdateRtCst_set(long jarg1, btSoftBody jarg1_, boolean jarg2);
  public final static native boolean btSoftBody_m_bUpdateRtCst_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_ndbvt_set(long jarg1, btSoftBody jarg1_, long jarg2, btDbvt jarg2_);
  public final static native long btSoftBody_m_ndbvt_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_fdbvt_set(long jarg1, btSoftBody jarg1_, long jarg2, btDbvt jarg2_);
  public final static native long btSoftBody_m_fdbvt_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_cdbvt_set(long jarg1, btSoftBody jarg1_, long jarg2, btDbvt jarg2_);
  public final static native long btSoftBody_m_cdbvt_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_clusters_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_clusters_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_clusterConnectivity_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_clusterConnectivity_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_initialWorldTransform_set(long jarg1, btSoftBody jarg1_, long jarg2, btTransform jarg2_);
  public final static native long btSoftBody_m_initialWorldTransform_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_windVelocity_set(long jarg1, btSoftBody jarg1_, long jarg2, btVector3 jarg2_);
  public final static native long btSoftBody_m_windVelocity_get(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_m_restLengthScale_set(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native float btSoftBody_m_restLengthScale_get(long jarg1, btSoftBody jarg1_);
  public final static native long new_btSoftBody__SWIG_0(long jarg1, btSoftBodyWorldInfo jarg1_, int jarg2, long jarg3, btVector3 jarg3_, java.nio.FloatBuffer jarg4);
  public final static native long new_btSoftBody__SWIG_1(long jarg1, btSoftBodyWorldInfo jarg1_);
  public final static native void btSoftBody_initDefaults(long jarg1, btSoftBody jarg1_);
  public final static native void delete_btSoftBody(long jarg1);
  public final static native void btSoftBody_m_userIndexMapping_set(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native long btSoftBody_m_userIndexMapping_get(long jarg1, btSoftBody jarg1_);
  public final static native long btSoftBody_getWorldInfo(long jarg1, btSoftBody jarg1_);
  public final static native boolean btSoftBody_checkLink__SWIG_0(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3);
  public final static native boolean btSoftBody_checkLink__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, Node jarg2_, long jarg3, Node jarg3_);
  public final static native boolean btSoftBody_checkFace(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native long btSoftBody_appendMaterial(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_appendNote__SWIG_0(long jarg1, btSoftBody jarg1_, String jarg2, Vector3 jarg3, long jarg4, btVector4 jarg4_, long jarg5, Node jarg5_, long jarg6, Node jarg6_, long jarg7, Node jarg7_, long jarg8, Node jarg8_);
  public final static native void btSoftBody_appendNote__SWIG_1(long jarg1, btSoftBody jarg1_, String jarg2, Vector3 jarg3, long jarg4, btVector4 jarg4_, long jarg5, Node jarg5_, long jarg6, Node jarg6_, long jarg7, Node jarg7_);
  public final static native void btSoftBody_appendNote__SWIG_2(long jarg1, btSoftBody jarg1_, String jarg2, Vector3 jarg3, long jarg4, btVector4 jarg4_, long jarg5, Node jarg5_, long jarg6, Node jarg6_);
  public final static native void btSoftBody_appendNote__SWIG_3(long jarg1, btSoftBody jarg1_, String jarg2, Vector3 jarg3, long jarg4, btVector4 jarg4_, long jarg5, Node jarg5_);
  public final static native void btSoftBody_appendNote__SWIG_4(long jarg1, btSoftBody jarg1_, String jarg2, Vector3 jarg3, long jarg4, btVector4 jarg4_);
  public final static native void btSoftBody_appendNote__SWIG_5(long jarg1, btSoftBody jarg1_, String jarg2, Vector3 jarg3);
  public final static native void btSoftBody_appendNote__SWIG_6(long jarg1, btSoftBody jarg1_, String jarg2, Vector3 jarg3, long jarg4, Node jarg4_);
  public final static native void btSoftBody_appendNote__SWIG_7(long jarg1, btSoftBody jarg1_, String jarg2, Vector3 jarg3, long jarg4, Link jarg4_);
  public final static native void btSoftBody_appendNote__SWIG_8(long jarg1, btSoftBody jarg1_, String jarg2, Vector3 jarg3, long jarg4, Face jarg4_);
  public final static native void btSoftBody_appendNode(long jarg1, btSoftBody jarg1_, Vector3 jarg2, float jarg3);
  public final static native void btSoftBody_appendLink__SWIG_0(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, Material jarg3_);
  public final static native void btSoftBody_appendLink__SWIG_1(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_appendLink__SWIG_2(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_appendLink__SWIG_3(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3, long jarg4, Material jarg4_, boolean jarg5);
  public final static native void btSoftBody_appendLink__SWIG_4(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3, long jarg4, Material jarg4_);
  public final static native void btSoftBody_appendLink__SWIG_5(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3);
  public final static native void btSoftBody_appendLink__SWIG_6(long jarg1, btSoftBody jarg1_, long jarg2, Node jarg2_, long jarg3, Node jarg3_, long jarg4, Material jarg4_, boolean jarg5);
  public final static native void btSoftBody_appendLink__SWIG_7(long jarg1, btSoftBody jarg1_, long jarg2, Node jarg2_, long jarg3, Node jarg3_, long jarg4, Material jarg4_);
  public final static native void btSoftBody_appendLink__SWIG_8(long jarg1, btSoftBody jarg1_, long jarg2, Node jarg2_, long jarg3, Node jarg3_);
  public final static native void btSoftBody_appendFace__SWIG_0(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, Material jarg3_);
  public final static native void btSoftBody_appendFace__SWIG_1(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_appendFace__SWIG_2(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_appendFace__SWIG_3(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, Material jarg5_);
  public final static native void btSoftBody_appendFace__SWIG_4(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void btSoftBody_appendTetra__SWIG_0(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, Material jarg3_);
  public final static native void btSoftBody_appendTetra__SWIG_1(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, Material jarg6_);
  public final static native void btSoftBody_appendTetra__SWIG_2(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void btSoftBody_appendAnchor__SWIG_0(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, btRigidBody jarg3_, boolean jarg4, float jarg5);
  public final static native void btSoftBody_appendAnchor__SWIG_1(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, btRigidBody jarg3_, boolean jarg4);
  public final static native void btSoftBody_appendAnchor__SWIG_2(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, btRigidBody jarg3_);
  public final static native void btSoftBody_appendAnchor__SWIG_3(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, btRigidBody jarg3_, Vector3 jarg4, boolean jarg5, float jarg6);
  public final static native void btSoftBody_appendAnchor__SWIG_4(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, btRigidBody jarg3_, Vector3 jarg4, boolean jarg5);
  public final static native void btSoftBody_appendAnchor__SWIG_5(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, btRigidBody jarg3_, Vector3 jarg4);
  public final static native void btSoftBody_appendLinearJoint__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void btSoftBody_appendLinearJoint__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, long jarg3);
  public final static native void btSoftBody_appendLinearJoint__SWIG_2(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native void btSoftBody_appendLinearJoint__SWIG_3(long jarg1, btSoftBody jarg1_, long jarg2, long jarg3, btSoftBody jarg3_);
  public final static native void btSoftBody_appendAngularJoint__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void btSoftBody_appendAngularJoint__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, long jarg3);
  public final static native void btSoftBody_appendAngularJoint__SWIG_2(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native void btSoftBody_appendAngularJoint__SWIG_3(long jarg1, btSoftBody jarg1_, long jarg2, long jarg3, btSoftBody jarg3_);
  public final static native void btSoftBody_addForce__SWIG_0(long jarg1, btSoftBody jarg1_, Vector3 jarg2);
  public final static native void btSoftBody_addForce__SWIG_1(long jarg1, btSoftBody jarg1_, Vector3 jarg2, int jarg3);
  public final static native void btSoftBody_addAeroForceToNode(long jarg1, btSoftBody jarg1_, Vector3 jarg2, int jarg3);
  public final static native void btSoftBody_addAeroForceToFace(long jarg1, btSoftBody jarg1_, Vector3 jarg2, int jarg3);
  public final static native void btSoftBody_addVelocity__SWIG_0(long jarg1, btSoftBody jarg1_, Vector3 jarg2);
  public final static native void btSoftBody_setVelocity(long jarg1, btSoftBody jarg1_, Vector3 jarg2);
  public final static native void btSoftBody_addVelocity__SWIG_1(long jarg1, btSoftBody jarg1_, Vector3 jarg2, int jarg3);
  public final static native void btSoftBody_setMass(long jarg1, btSoftBody jarg1_, int jarg2, float jarg3);
  public final static native float btSoftBody_getMass(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native float btSoftBody_getTotalMass(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_setTotalMass__SWIG_0(long jarg1, btSoftBody jarg1_, float jarg2, boolean jarg3);
  public final static native void btSoftBody_setTotalMass__SWIG_1(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setTotalDensity(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setVolumeMass(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setVolumeDensity(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_transform(long jarg1, btSoftBody jarg1_, Matrix4 jarg2);
  public final static native void btSoftBody_translate(long jarg1, btSoftBody jarg1_, Vector3 jarg2);
  public final static native void btSoftBody_rotate(long jarg1, btSoftBody jarg1_, Quaternion jarg2);
  public final static native void btSoftBody_scale(long jarg1, btSoftBody jarg1_, Vector3 jarg2);
  public final static native float btSoftBody_getRestLengthScale(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_setRestLengthScale(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setPose(long jarg1, btSoftBody jarg1_, boolean jarg2, boolean jarg3);
  public final static native void btSoftBody_resetLinkRestLengths(long jarg1, btSoftBody jarg1_);
  public final static native float btSoftBody_getVolume(long jarg1, btSoftBody jarg1_);
  public final static native int btSoftBody_clusterCount(long jarg1, btSoftBody jarg1_);
  public final static native Vector3 btSoftBody_clusterCom__SWIG_0(long jarg1);
  public final static native Vector3 btSoftBody_clusterCom__SWIG_1(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native Vector3 btSoftBody_clusterVelocity(long jarg1, Vector3 jarg2);
  public final static native void btSoftBody_clusterVImpulse(long jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native void btSoftBody_clusterDImpulse(long jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native void btSoftBody_clusterImpulse(long jarg1, Vector3 jarg2, long jarg3);
  public final static native void btSoftBody_clusterVAImpulse(long jarg1, Vector3 jarg2);
  public final static native void btSoftBody_clusterDAImpulse(long jarg1, Vector3 jarg2);
  public final static native void btSoftBody_clusterAImpulse(long jarg1, long jarg2);
  public final static native void btSoftBody_clusterDCImpulse(long jarg1, Vector3 jarg2);
  public final static native int btSoftBody_generateBendingConstraints__SWIG_0(long jarg1, btSoftBody jarg1_, int jarg2, long jarg3, Material jarg3_);
  public final static native int btSoftBody_generateBendingConstraints__SWIG_1(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_randomizeConstraints(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_releaseCluster(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_releaseClusters(long jarg1, btSoftBody jarg1_);
  public final static native int btSoftBody_generateClusters__SWIG_0(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3);
  public final static native int btSoftBody_generateClusters__SWIG_1(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_refine(long jarg1, btSoftBody jarg1_, long jarg2, float jarg3, boolean jarg4);
  public final static native boolean btSoftBody_cutLink__SWIG_0(long jarg1, btSoftBody jarg1_, int jarg2, int jarg3, float jarg4);
  public final static native boolean btSoftBody_cutLink__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, Node jarg2_, long jarg3, Node jarg3_, float jarg4);
  public final static native boolean btSoftBody_rayTest__SWIG_0(long jarg1, btSoftBody jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4);
  public final static native void btSoftBody_setSolver(long jarg1, btSoftBody jarg1_, long jarg2);
  public final static native void btSoftBody_predictMotion(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_solveConstraints(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_staticSolve(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_solveCommonConstraints(long jarg1, int jarg2, int jarg3);
  public final static native void btSoftBody_solveClusters__SWIG_0(long jarg1);
  public final static native void btSoftBody_integrateMotion(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_defaultCollisionHandler__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
  public final static native void btSoftBody_defaultCollisionHandler__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, btSoftBody jarg2_);
  public final static native void btSoftBody_setWindVelocity(long jarg1, btSoftBody jarg1_, Vector3 jarg2);
  public final static native Vector3 btSoftBody_getWindVelocity(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_setSoftBodySolver(long jarg1, btSoftBody jarg1_, long jarg2, btSoftBodySolver jarg2_);
  public final static native long btSoftBody_getSoftBodySolver__SWIG_0(long jarg1, btSoftBody jarg1_);
  public final static native long btSoftBody_upcast__SWIG_0(long jarg1, btCollisionObject jarg1_);
  public final static native void btSoftBody_getAabb(long jarg1, btSoftBody jarg1_, Vector3 jarg2, Vector3 jarg3);
  public final static native void btSoftBody_pointersToIndices(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_indicesToPointers__SWIG_0(long jarg1, btSoftBody jarg1_, java.nio.IntBuffer jarg2);
  public final static native void btSoftBody_indicesToPointers__SWIG_1(long jarg1, btSoftBody jarg1_);
  public final static native int btSoftBody_rayTest__SWIG_1(long jarg1, btSoftBody jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, long jarg5, long jarg6, boolean jarg7);
  public final static native void btSoftBody_initializeFaceTree(long jarg1, btSoftBody jarg1_);
  public final static native Vector3 btSoftBody_evaluateCom(long jarg1, btSoftBody jarg1_);
  public final static native boolean btSoftBody_checkContact(long jarg1, btSoftBody jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, Vector3 jarg3, float jarg4, long jarg5, sCti jarg5_);
  public final static native void btSoftBody_updateNormals(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_updateBounds(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_updatePose(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_updateConstants(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_updateLinkConstants(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_updateArea__SWIG_0(long jarg1, btSoftBody jarg1_, boolean jarg2);
  public final static native void btSoftBody_updateArea__SWIG_1(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_initializeClusters(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_updateClusters(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_cleanupClusters(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_prepareClusters(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_solveClusters__SWIG_1(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_applyClusters(long jarg1, btSoftBody jarg1_, boolean jarg2);
  public final static native void btSoftBody_dampClusters(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_applyForces(long jarg1, btSoftBody jarg1_);
  public final static native void btSoftBody_PSolve_Anchors(long jarg1, btSoftBody jarg1_, float jarg2, float jarg3);
  public final static native void btSoftBody_PSolve_RContacts(long jarg1, btSoftBody jarg1_, float jarg2, float jarg3);
  public final static native void btSoftBody_PSolve_SContacts(long jarg1, btSoftBody jarg1_, float jarg2, float jarg3);
  public final static native void btSoftBody_PSolve_Links(long jarg1, btSoftBody jarg1_, float jarg2, float jarg3);
  public final static native void btSoftBody_VSolve_Links(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native long btSoftBody_getSolver__SWIG_0(long jarg1);
  public final static native long btSoftBody_getSolver__SWIG_1(long jarg1);
  public final static native long new_btSoftBody__SWIG_2(long jarg1, btSoftBodyWorldInfo jarg1_, java.nio.FloatBuffer jarg2, int jarg3, int jarg4, int jarg5, java.nio.ShortBuffer jarg6, int jarg7);
  public final static native int btSoftBody_getNodeCount(long jarg1, btSoftBody jarg1_);
  public final static native long btSoftBody_getNode(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_getVertices(long jarg1, btSoftBody jarg1_, java.nio.FloatBuffer jarg2, int jarg3, int jarg4, int jarg5);
  public final static native int btSoftBody_getFaceCount(long jarg1, btSoftBody jarg1_);
  public final static native long btSoftBody_getFace(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_getIndices(long jarg1, btSoftBody jarg1_, java.nio.ShortBuffer jarg2, int jarg3);
  public final static native void btSoftBody_setConfig_kVCF(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kDP(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kDG(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kLF(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kPR(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kVC(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kDF(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kMT(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kCHR(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kKHR(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kSHR(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kAHR(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kSRHR_CL(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kSKHR_CL(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kSSHR_CL(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kSR_SPLT_CL(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kSK_SPLT_CL(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_kSS_SPLT_CL(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_maxvolume(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_ktimescale(long jarg1, btSoftBody jarg1_, float jarg2);
  public final static native void btSoftBody_setConfig_viterations(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_setConfig_piterations(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_setConfig_diterations(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_setConfig_citerations(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btSoftBody_setConfig_collisions(long jarg1, btSoftBody jarg1_, int jarg2);
  public final static native void btTriIndex_m_PartIdTriangleIndex_set(long jarg1, btTriIndex jarg1_, int jarg2);
  public final static native int btTriIndex_m_PartIdTriangleIndex_get(long jarg1, btTriIndex jarg1_);
  public final static native void btTriIndex_m_childShape_set(long jarg1, btTriIndex jarg1_, long jarg2, btCollisionShape jarg2_);
  public final static native long btTriIndex_m_childShape_get(long jarg1, btTriIndex jarg1_);
  public final static native long new_btTriIndex(int jarg1, int jarg2, long jarg3, btCollisionShape jarg3_);
  public final static native int btTriIndex_getTriangleIndex(long jarg1, btTriIndex jarg1_);
  public final static native int btTriIndex_getPartId(long jarg1, btTriIndex jarg1_);
  public final static native int btTriIndex_getUid(long jarg1, btTriIndex jarg1_);
  public final static native void delete_btTriIndex(long jarg1);
  public final static native void btSoftBodyTriangleCallback_m_triangleCount_set(long jarg1, btSoftBodyTriangleCallback jarg1_, int jarg2);
  public final static native int btSoftBodyTriangleCallback_m_triangleCount_get(long jarg1, btSoftBodyTriangleCallback jarg1_);
  public final static native long new_btSoftBodyTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
  public final static native void btSoftBodyTriangleCallback_setTimeStepAndCounters(long jarg1, btSoftBodyTriangleCallback jarg1_, float jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
  public final static native void delete_btSoftBodyTriangleCallback(long jarg1);
  public final static native void btSoftBodyTriangleCallback_clearCache(long jarg1, btSoftBodyTriangleCallback jarg1_);
  public final static native Vector3 btSoftBodyTriangleCallback_getAabbMin(long jarg1, btSoftBodyTriangleCallback jarg1_);
  public final static native Vector3 btSoftBodyTriangleCallback_getAabbMax(long jarg1, btSoftBodyTriangleCallback jarg1_);
  public final static native long new_btSoftBodyConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
  public final static native void delete_btSoftBodyConcaveCollisionAlgorithm(long jarg1);
  public final static native void btSoftBodyConcaveCollisionAlgorithm_clearCache(long jarg1, btSoftBodyConcaveCollisionAlgorithm jarg1_);
  public final static native void SoftBodyMaterialData_m_linearStiffness_set(long jarg1, SoftBodyMaterialData jarg1_, float jarg2);
  public final static native float SoftBodyMaterialData_m_linearStiffness_get(long jarg1, SoftBodyMaterialData jarg1_);
  public final static native void SoftBodyMaterialData_m_angularStiffness_set(long jarg1, SoftBodyMaterialData jarg1_, float jarg2);
  public final static native float SoftBodyMaterialData_m_angularStiffness_get(long jarg1, SoftBodyMaterialData jarg1_);
  public final static native void SoftBodyMaterialData_m_volumeStiffness_set(long jarg1, SoftBodyMaterialData jarg1_, float jarg2);
  public final static native float SoftBodyMaterialData_m_volumeStiffness_get(long jarg1, SoftBodyMaterialData jarg1_);
  public final static native void SoftBodyMaterialData_m_flags_set(long jarg1, SoftBodyMaterialData jarg1_, int jarg2);
  public final static native int SoftBodyMaterialData_m_flags_get(long jarg1, SoftBodyMaterialData jarg1_);
  public final static native long new_SoftBodyMaterialData();
  public final static native void delete_SoftBodyMaterialData(long jarg1);
  public final static native void SoftBodyNodeData_m_material_set(long jarg1, SoftBodyNodeData jarg1_, long jarg2, SoftBodyMaterialData jarg2_);
  public final static native long SoftBodyNodeData_m_material_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native void SoftBodyNodeData_m_position_set(long jarg1, SoftBodyNodeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyNodeData_m_position_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native void SoftBodyNodeData_m_previousPosition_set(long jarg1, SoftBodyNodeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyNodeData_m_previousPosition_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native void SoftBodyNodeData_m_velocity_set(long jarg1, SoftBodyNodeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyNodeData_m_velocity_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native void SoftBodyNodeData_m_accumulatedForce_set(long jarg1, SoftBodyNodeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyNodeData_m_accumulatedForce_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native void SoftBodyNodeData_m_normal_set(long jarg1, SoftBodyNodeData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyNodeData_m_normal_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native void SoftBodyNodeData_m_inverseMass_set(long jarg1, SoftBodyNodeData jarg1_, float jarg2);
  public final static native float SoftBodyNodeData_m_inverseMass_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native void SoftBodyNodeData_m_area_set(long jarg1, SoftBodyNodeData jarg1_, float jarg2);
  public final static native float SoftBodyNodeData_m_area_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native void SoftBodyNodeData_m_attach_set(long jarg1, SoftBodyNodeData jarg1_, int jarg2);
  public final static native int SoftBodyNodeData_m_attach_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native void SoftBodyNodeData_m_pad_set(long jarg1, SoftBodyNodeData jarg1_, int jarg2);
  public final static native int SoftBodyNodeData_m_pad_get(long jarg1, SoftBodyNodeData jarg1_);
  public final static native long new_SoftBodyNodeData();
  public final static native void delete_SoftBodyNodeData(long jarg1);
  public final static native void SoftBodyLinkData_m_material_set(long jarg1, SoftBodyLinkData jarg1_, long jarg2, SoftBodyMaterialData jarg2_);
  public final static native long SoftBodyLinkData_m_material_get(long jarg1, SoftBodyLinkData jarg1_);
  public final static native void SoftBodyLinkData_m_nodeIndices_set(long jarg1, SoftBodyLinkData jarg1_, int[] jarg2);
  public final static native int[] SoftBodyLinkData_m_nodeIndices_get(long jarg1, SoftBodyLinkData jarg1_);
  public final static native void SoftBodyLinkData_m_restLength_set(long jarg1, SoftBodyLinkData jarg1_, float jarg2);
  public final static native float SoftBodyLinkData_m_restLength_get(long jarg1, SoftBodyLinkData jarg1_);
  public final static native void SoftBodyLinkData_m_bbending_set(long jarg1, SoftBodyLinkData jarg1_, int jarg2);
  public final static native int SoftBodyLinkData_m_bbending_get(long jarg1, SoftBodyLinkData jarg1_);
  public final static native long new_SoftBodyLinkData();
  public final static native void delete_SoftBodyLinkData(long jarg1);
  public final static native void SoftBodyFaceData_m_normal_set(long jarg1, SoftBodyFaceData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyFaceData_m_normal_get(long jarg1, SoftBodyFaceData jarg1_);
  public final static native void SoftBodyFaceData_m_material_set(long jarg1, SoftBodyFaceData jarg1_, long jarg2, SoftBodyMaterialData jarg2_);
  public final static native long SoftBodyFaceData_m_material_get(long jarg1, SoftBodyFaceData jarg1_);
  public final static native void SoftBodyFaceData_m_nodeIndices_set(long jarg1, SoftBodyFaceData jarg1_, int[] jarg2);
  public final static native int[] SoftBodyFaceData_m_nodeIndices_get(long jarg1, SoftBodyFaceData jarg1_);
  public final static native void SoftBodyFaceData_m_restArea_set(long jarg1, SoftBodyFaceData jarg1_, float jarg2);
  public final static native float SoftBodyFaceData_m_restArea_get(long jarg1, SoftBodyFaceData jarg1_);
  public final static native long new_SoftBodyFaceData();
  public final static native void delete_SoftBodyFaceData(long jarg1);
  public final static native void SoftBodyTetraData_m_c0_set(long jarg1, SoftBodyTetraData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyTetraData_m_c0_get(long jarg1, SoftBodyTetraData jarg1_);
  public final static native void SoftBodyTetraData_m_material_set(long jarg1, SoftBodyTetraData jarg1_, long jarg2, SoftBodyMaterialData jarg2_);
  public final static native long SoftBodyTetraData_m_material_get(long jarg1, SoftBodyTetraData jarg1_);
  public final static native void SoftBodyTetraData_m_nodeIndices_set(long jarg1, SoftBodyTetraData jarg1_, int[] jarg2);
  public final static native int[] SoftBodyTetraData_m_nodeIndices_get(long jarg1, SoftBodyTetraData jarg1_);
  public final static native void SoftBodyTetraData_m_restVolume_set(long jarg1, SoftBodyTetraData jarg1_, float jarg2);
  public final static native float SoftBodyTetraData_m_restVolume_get(long jarg1, SoftBodyTetraData jarg1_);
  public final static native void SoftBodyTetraData_m_c1_set(long jarg1, SoftBodyTetraData jarg1_, float jarg2);
  public final static native float SoftBodyTetraData_m_c1_get(long jarg1, SoftBodyTetraData jarg1_);
  public final static native void SoftBodyTetraData_m_c2_set(long jarg1, SoftBodyTetraData jarg1_, float jarg2);
  public final static native float SoftBodyTetraData_m_c2_get(long jarg1, SoftBodyTetraData jarg1_);
  public final static native void SoftBodyTetraData_m_pad_set(long jarg1, SoftBodyTetraData jarg1_, int jarg2);
  public final static native int SoftBodyTetraData_m_pad_get(long jarg1, SoftBodyTetraData jarg1_);
  public final static native long new_SoftBodyTetraData();
  public final static native void delete_SoftBodyTetraData(long jarg1);
  public final static native void SoftRigidAnchorData_m_c0_set(long jarg1, SoftRigidAnchorData jarg1_, long jarg2);
  public final static native long SoftRigidAnchorData_m_c0_get(long jarg1, SoftRigidAnchorData jarg1_);
  public final static native void SoftRigidAnchorData_m_c1_set(long jarg1, SoftRigidAnchorData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftRigidAnchorData_m_c1_get(long jarg1, SoftRigidAnchorData jarg1_);
  public final static native void SoftRigidAnchorData_m_localFrame_set(long jarg1, SoftRigidAnchorData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftRigidAnchorData_m_localFrame_get(long jarg1, SoftRigidAnchorData jarg1_);
  public final static native void SoftRigidAnchorData_m_rigidBody_set(long jarg1, SoftRigidAnchorData jarg1_, long jarg2, btRigidBodyFloatData jarg2_);
  public final static native long SoftRigidAnchorData_m_rigidBody_get(long jarg1, SoftRigidAnchorData jarg1_);
  public final static native void SoftRigidAnchorData_m_nodeIndex_set(long jarg1, SoftRigidAnchorData jarg1_, int jarg2);
  public final static native int SoftRigidAnchorData_m_nodeIndex_get(long jarg1, SoftRigidAnchorData jarg1_);
  public final static native void SoftRigidAnchorData_m_c2_set(long jarg1, SoftRigidAnchorData jarg1_, float jarg2);
  public final static native float SoftRigidAnchorData_m_c2_get(long jarg1, SoftRigidAnchorData jarg1_);
  public final static native long new_SoftRigidAnchorData();
  public final static native void delete_SoftRigidAnchorData(long jarg1);
  public final static native void SoftBodyConfigData_m_aeroModel_set(long jarg1, SoftBodyConfigData jarg1_, int jarg2);
  public final static native int SoftBodyConfigData_m_aeroModel_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_baumgarte_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_baumgarte_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_damping_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_damping_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_drag_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_drag_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_lift_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_lift_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_pressure_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_pressure_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_volume_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_volume_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_dynamicFriction_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_dynamicFriction_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_poseMatch_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_poseMatch_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_rigidContactHardness_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_rigidContactHardness_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_kineticContactHardness_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_kineticContactHardness_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_softContactHardness_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_softContactHardness_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_anchorHardness_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_anchorHardness_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_softRigidClusterHardness_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_softRigidClusterHardness_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_softKineticClusterHardness_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_softKineticClusterHardness_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_softSoftClusterHardness_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_softSoftClusterHardness_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_softRigidClusterImpulseSplit_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_softRigidClusterImpulseSplit_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_softKineticClusterImpulseSplit_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_softKineticClusterImpulseSplit_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_softSoftClusterImpulseSplit_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_softSoftClusterImpulseSplit_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_maxVolume_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_maxVolume_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_timeScale_set(long jarg1, SoftBodyConfigData jarg1_, float jarg2);
  public final static native float SoftBodyConfigData_m_timeScale_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_velocityIterations_set(long jarg1, SoftBodyConfigData jarg1_, int jarg2);
  public final static native int SoftBodyConfigData_m_velocityIterations_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_positionIterations_set(long jarg1, SoftBodyConfigData jarg1_, int jarg2);
  public final static native int SoftBodyConfigData_m_positionIterations_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_driftIterations_set(long jarg1, SoftBodyConfigData jarg1_, int jarg2);
  public final static native int SoftBodyConfigData_m_driftIterations_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_clusterIterations_set(long jarg1, SoftBodyConfigData jarg1_, int jarg2);
  public final static native int SoftBodyConfigData_m_clusterIterations_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native void SoftBodyConfigData_m_collisionFlags_set(long jarg1, SoftBodyConfigData jarg1_, int jarg2);
  public final static native int SoftBodyConfigData_m_collisionFlags_get(long jarg1, SoftBodyConfigData jarg1_);
  public final static native long new_SoftBodyConfigData();
  public final static native void delete_SoftBodyConfigData(long jarg1);
  public final static native void SoftBodyPoseData_m_rot_set(long jarg1, SoftBodyPoseData jarg1_, long jarg2);
  public final static native long SoftBodyPoseData_m_rot_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_scale_set(long jarg1, SoftBodyPoseData jarg1_, long jarg2);
  public final static native long SoftBodyPoseData_m_scale_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_aqq_set(long jarg1, SoftBodyPoseData jarg1_, long jarg2);
  public final static native long SoftBodyPoseData_m_aqq_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_com_set(long jarg1, SoftBodyPoseData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyPoseData_m_com_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_positions_set(long jarg1, SoftBodyPoseData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyPoseData_m_positions_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_weights_set(long jarg1, SoftBodyPoseData jarg1_, java.nio.FloatBuffer jarg2);
  public final static native java.nio.FloatBuffer SoftBodyPoseData_m_weights_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_numPositions_set(long jarg1, SoftBodyPoseData jarg1_, int jarg2);
  public final static native int SoftBodyPoseData_m_numPositions_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_numWeigts_set(long jarg1, SoftBodyPoseData jarg1_, int jarg2);
  public final static native int SoftBodyPoseData_m_numWeigts_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_bvolume_set(long jarg1, SoftBodyPoseData jarg1_, int jarg2);
  public final static native int SoftBodyPoseData_m_bvolume_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_bframe_set(long jarg1, SoftBodyPoseData jarg1_, int jarg2);
  public final static native int SoftBodyPoseData_m_bframe_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_restVolume_set(long jarg1, SoftBodyPoseData jarg1_, float jarg2);
  public final static native float SoftBodyPoseData_m_restVolume_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native void SoftBodyPoseData_m_pad_set(long jarg1, SoftBodyPoseData jarg1_, int jarg2);
  public final static native int SoftBodyPoseData_m_pad_get(long jarg1, SoftBodyPoseData jarg1_);
  public final static native long new_SoftBodyPoseData();
  public final static native void delete_SoftBodyPoseData(long jarg1);
  public final static native void SoftBodyClusterData_m_framexform_set(long jarg1, SoftBodyClusterData jarg1_, long jarg2, btTransformFloatData jarg2_);
  public final static native long SoftBodyClusterData_m_framexform_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_locii_set(long jarg1, SoftBodyClusterData jarg1_, long jarg2);
  public final static native long SoftBodyClusterData_m_locii_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_invwi_set(long jarg1, SoftBodyClusterData jarg1_, long jarg2);
  public final static native long SoftBodyClusterData_m_invwi_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_com_set(long jarg1, SoftBodyClusterData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyClusterData_m_com_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_vimpulses_set(long jarg1, SoftBodyClusterData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyClusterData_m_vimpulses_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_dimpulses_set(long jarg1, SoftBodyClusterData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyClusterData_m_dimpulses_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_lv_set(long jarg1, SoftBodyClusterData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyClusterData_m_lv_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_av_set(long jarg1, SoftBodyClusterData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyClusterData_m_av_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_framerefs_set(long jarg1, SoftBodyClusterData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long SoftBodyClusterData_m_framerefs_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_nodeIndices_set(long jarg1, SoftBodyClusterData jarg1_, java.nio.IntBuffer jarg2);
  public final static native java.nio.IntBuffer SoftBodyClusterData_m_nodeIndices_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_masses_set(long jarg1, SoftBodyClusterData jarg1_, java.nio.FloatBuffer jarg2);
  public final static native java.nio.FloatBuffer SoftBodyClusterData_m_masses_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_numFrameRefs_set(long jarg1, SoftBodyClusterData jarg1_, int jarg2);
  public final static native int SoftBodyClusterData_m_numFrameRefs_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_numNodes_set(long jarg1, SoftBodyClusterData jarg1_, int jarg2);
  public final static native int SoftBodyClusterData_m_numNodes_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_numMasses_set(long jarg1, SoftBodyClusterData jarg1_, int jarg2);
  public final static native int SoftBodyClusterData_m_numMasses_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_idmass_set(long jarg1, SoftBodyClusterData jarg1_, float jarg2);
  public final static native float SoftBodyClusterData_m_idmass_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_imass_set(long jarg1, SoftBodyClusterData jarg1_, float jarg2);
  public final static native float SoftBodyClusterData_m_imass_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_nvimpulses_set(long jarg1, SoftBodyClusterData jarg1_, int jarg2);
  public final static native int SoftBodyClusterData_m_nvimpulses_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_ndimpulses_set(long jarg1, SoftBodyClusterData jarg1_, int jarg2);
  public final static native int SoftBodyClusterData_m_ndimpulses_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_ndamping_set(long jarg1, SoftBodyClusterData jarg1_, float jarg2);
  public final static native float SoftBodyClusterData_m_ndamping_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_ldamping_set(long jarg1, SoftBodyClusterData jarg1_, float jarg2);
  public final static native float SoftBodyClusterData_m_ldamping_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_adamping_set(long jarg1, SoftBodyClusterData jarg1_, float jarg2);
  public final static native float SoftBodyClusterData_m_adamping_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_matching_set(long jarg1, SoftBodyClusterData jarg1_, float jarg2);
  public final static native float SoftBodyClusterData_m_matching_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_maxSelfCollisionImpulse_set(long jarg1, SoftBodyClusterData jarg1_, float jarg2);
  public final static native float SoftBodyClusterData_m_maxSelfCollisionImpulse_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_selfCollisionImpulseFactor_set(long jarg1, SoftBodyClusterData jarg1_, float jarg2);
  public final static native float SoftBodyClusterData_m_selfCollisionImpulseFactor_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_containsAnchor_set(long jarg1, SoftBodyClusterData jarg1_, int jarg2);
  public final static native int SoftBodyClusterData_m_containsAnchor_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_collide_set(long jarg1, SoftBodyClusterData jarg1_, int jarg2);
  public final static native int SoftBodyClusterData_m_collide_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native void SoftBodyClusterData_m_clusterIndex_set(long jarg1, SoftBodyClusterData jarg1_, int jarg2);
  public final static native int SoftBodyClusterData_m_clusterIndex_get(long jarg1, SoftBodyClusterData jarg1_);
  public final static native long new_SoftBodyClusterData();
  public final static native void delete_SoftBodyClusterData(long jarg1);
  public final static native void btSoftBodyJointData_m_bodyA_set(long jarg1, btSoftBodyJointData jarg1_, long jarg2);
  public final static native long btSoftBodyJointData_m_bodyA_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_bodyB_set(long jarg1, btSoftBodyJointData jarg1_, long jarg2);
  public final static native long btSoftBodyJointData_m_bodyB_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_refs_set(long jarg1, btSoftBodyJointData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btSoftBodyJointData_m_refs_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_cfm_set(long jarg1, btSoftBodyJointData jarg1_, float jarg2);
  public final static native float btSoftBodyJointData_m_cfm_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_erp_set(long jarg1, btSoftBodyJointData jarg1_, float jarg2);
  public final static native float btSoftBodyJointData_m_erp_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_split_set(long jarg1, btSoftBodyJointData jarg1_, float jarg2);
  public final static native float btSoftBodyJointData_m_split_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_delete_set(long jarg1, btSoftBodyJointData jarg1_, int jarg2);
  public final static native int btSoftBodyJointData_m_delete_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_relPosition_set(long jarg1, btSoftBodyJointData jarg1_, long jarg2, btVector3FloatData jarg2_);
  public final static native long btSoftBodyJointData_m_relPosition_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_bodyAtype_set(long jarg1, btSoftBodyJointData jarg1_, int jarg2);
  public final static native int btSoftBodyJointData_m_bodyAtype_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_bodyBtype_set(long jarg1, btSoftBodyJointData jarg1_, int jarg2);
  public final static native int btSoftBodyJointData_m_bodyBtype_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_jointType_set(long jarg1, btSoftBodyJointData jarg1_, int jarg2);
  public final static native int btSoftBodyJointData_m_jointType_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native void btSoftBodyJointData_m_pad_set(long jarg1, btSoftBodyJointData jarg1_, int jarg2);
  public final static native int btSoftBodyJointData_m_pad_get(long jarg1, btSoftBodyJointData jarg1_);
  public final static native long new_btSoftBodyJointData();
  public final static native void delete_btSoftBodyJointData(long jarg1);
  public final static native void btSoftBodyFloatData_m_collisionObjectData_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, btCollisionObjectFloatData jarg2_);
  public final static native long btSoftBodyFloatData_m_collisionObjectData_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_pose_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, SoftBodyPoseData jarg2_);
  public final static native long btSoftBodyFloatData_m_pose_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_materials_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2);
  public final static native long btSoftBodyFloatData_m_materials_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_nodes_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, SoftBodyNodeData jarg2_);
  public final static native long btSoftBodyFloatData_m_nodes_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_links_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, SoftBodyLinkData jarg2_);
  public final static native long btSoftBodyFloatData_m_links_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_faces_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, SoftBodyFaceData jarg2_);
  public final static native long btSoftBodyFloatData_m_faces_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_tetrahedra_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, SoftBodyTetraData jarg2_);
  public final static native long btSoftBodyFloatData_m_tetrahedra_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_anchors_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, SoftRigidAnchorData jarg2_);
  public final static native long btSoftBodyFloatData_m_anchors_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_clusters_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, SoftBodyClusterData jarg2_);
  public final static native long btSoftBodyFloatData_m_clusters_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_joints_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, btSoftBodyJointData jarg2_);
  public final static native long btSoftBodyFloatData_m_joints_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_numMaterials_set(long jarg1, btSoftBodyFloatData jarg1_, int jarg2);
  public final static native int btSoftBodyFloatData_m_numMaterials_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_numNodes_set(long jarg1, btSoftBodyFloatData jarg1_, int jarg2);
  public final static native int btSoftBodyFloatData_m_numNodes_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_numLinks_set(long jarg1, btSoftBodyFloatData jarg1_, int jarg2);
  public final static native int btSoftBodyFloatData_m_numLinks_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_numFaces_set(long jarg1, btSoftBodyFloatData jarg1_, int jarg2);
  public final static native int btSoftBodyFloatData_m_numFaces_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_numTetrahedra_set(long jarg1, btSoftBodyFloatData jarg1_, int jarg2);
  public final static native int btSoftBodyFloatData_m_numTetrahedra_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_numAnchors_set(long jarg1, btSoftBodyFloatData jarg1_, int jarg2);
  public final static native int btSoftBodyFloatData_m_numAnchors_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_numClusters_set(long jarg1, btSoftBodyFloatData jarg1_, int jarg2);
  public final static native int btSoftBodyFloatData_m_numClusters_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_numJoints_set(long jarg1, btSoftBodyFloatData jarg1_, int jarg2);
  public final static native int btSoftBodyFloatData_m_numJoints_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native void btSoftBodyFloatData_m_config_set(long jarg1, btSoftBodyFloatData jarg1_, long jarg2, SoftBodyConfigData jarg2_);
  public final static native long btSoftBodyFloatData_m_config_get(long jarg1, btSoftBodyFloatData jarg1_);
  public final static native long new_btSoftBodyFloatData();
  public final static native void delete_btSoftBodyFloatData(long jarg1);
  public final static native long new_fDrawFlags();
  public final static native void delete_fDrawFlags(long jarg1);
  public final static native void btSoftBodyHelpers_Draw__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_, int jarg3);
  public final static native void btSoftBodyHelpers_Draw__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native void btSoftBodyHelpers_DrawInfos(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native void btSoftBodyHelpers_DrawNodeTree__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_, int jarg3, int jarg4);
  public final static native void btSoftBodyHelpers_DrawNodeTree__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_, int jarg3);
  public final static native void btSoftBodyHelpers_DrawNodeTree__SWIG_2(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native void btSoftBodyHelpers_DrawFaceTree__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_, int jarg3, int jarg4);
  public final static native void btSoftBodyHelpers_DrawFaceTree__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_, int jarg3);
  public final static native void btSoftBodyHelpers_DrawFaceTree__SWIG_2(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native void btSoftBodyHelpers_DrawClusterTree__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_, int jarg3, int jarg4);
  public final static native void btSoftBodyHelpers_DrawClusterTree__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_, int jarg3);
  public final static native void btSoftBodyHelpers_DrawClusterTree__SWIG_2(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native void btSoftBodyHelpers_DrawFrame(long jarg1, btSoftBody jarg1_, long jarg2, btIDebugDraw jarg2_);
  public final static native long btSoftBodyHelpers_CreateRope(long jarg1, btSoftBodyWorldInfo jarg1_, Vector3 jarg2, Vector3 jarg3, int jarg4, int jarg5);
  public final static native long btSoftBodyHelpers_CreatePatch(long jarg1, btSoftBodyWorldInfo jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, int jarg6, int jarg7, int jarg8, boolean jarg9);
  public final static native long btSoftBodyHelpers_CreatePatchUV__SWIG_0(long jarg1, btSoftBodyWorldInfo jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, int jarg6, int jarg7, int jarg8, boolean jarg9, java.nio.FloatBuffer jarg10);
  public final static native long btSoftBodyHelpers_CreatePatchUV__SWIG_1(long jarg1, btSoftBodyWorldInfo jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5, int jarg6, int jarg7, int jarg8, boolean jarg9);
  public final static native float btSoftBodyHelpers_CalculateUV(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long btSoftBodyHelpers_CreateEllipsoid(long jarg1, btSoftBodyWorldInfo jarg1_, Vector3 jarg2, Vector3 jarg3, int jarg4);
  public final static native long btSoftBodyHelpers_CreateFromTriMesh__SWIG_0(long jarg1, btSoftBodyWorldInfo jarg1_, java.nio.FloatBuffer jarg2, java.nio.IntBuffer jarg3, int jarg4, boolean jarg5);
  public final static native long btSoftBodyHelpers_CreateFromTriMesh__SWIG_1(long jarg1, btSoftBodyWorldInfo jarg1_, java.nio.FloatBuffer jarg2, java.nio.IntBuffer jarg3, int jarg4);
  public final static native long btSoftBodyHelpers_CreateFromConvexHull__SWIG_0(long jarg1, btSoftBodyWorldInfo jarg1_, long jarg2, btVector3 jarg2_, int jarg3, boolean jarg4);
  public final static native long btSoftBodyHelpers_CreateFromConvexHull__SWIG_1(long jarg1, btSoftBodyWorldInfo jarg1_, long jarg2, btVector3 jarg2_, int jarg3);
  public final static native long btSoftBodyHelpers_CreateFromTetGenData(long jarg1, btSoftBodyWorldInfo jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5, boolean jarg6, boolean jarg7);
  public final static native long new_btSoftBodyHelpers();
  public final static native void delete_btSoftBodyHelpers(long jarg1);
  public final static native void btSoftBodyCollisionShape_m_body_set(long jarg1, btSoftBodyCollisionShape jarg1_, long jarg2, btSoftBody jarg2_);
  public final static native long btSoftBodyCollisionShape_m_body_get(long jarg1, btSoftBodyCollisionShape jarg1_);
  public final static native long new_btSoftBodyCollisionShape(long jarg1, btSoftBody jarg1_);
  public final static native void delete_btSoftBodyCollisionShape(long jarg1);
  public final static native void btSoftClusterCollisionShape_m_cluster_set(long jarg1, btSoftClusterCollisionShape jarg1_, long jarg2);
  public final static native long btSoftClusterCollisionShape_m_cluster_get(long jarg1, btSoftClusterCollisionShape jarg1_);
  public final static native long new_btSoftClusterCollisionShape(long jarg1);
  public final static native int btSoftClusterCollisionShape_getShapeType(long jarg1, btSoftClusterCollisionShape jarg1_);
  public final static native void delete_btSoftClusterCollisionShape(long jarg1);
  public final static native Matrix3 Lerp(Matrix3 jarg1, Matrix3 jarg2, float jarg3);
  public final static native Vector3 Clamp(Vector3 jarg1, float jarg2);
  public final static native float ClusterMetric(Vector3 jarg1, Vector3 jarg2);
  public final static native Matrix3 ScaleAlongAxis(Vector3 jarg1, float jarg2);
  public final static native Matrix3 Cross(Vector3 jarg1);
  public final static native Matrix3 Diagonal(float jarg1);
  public final static native Matrix3 Add(Matrix3 jarg1, Matrix3 jarg2);
  public final static native Matrix3 Sub(Matrix3 jarg1, Matrix3 jarg2);
  public final static native Matrix3 Mul(Matrix3 jarg1, float jarg2);
  public final static native void Orthogonalize(Matrix3 jarg1);
  public final static native Matrix3 MassMatrix(float jarg1, Matrix3 jarg2, Vector3 jarg3);
  public final static native Matrix3 ImpulseMatrix__SWIG_0(float jarg1, float jarg2, float jarg3, Matrix3 jarg4, Vector3 jarg5);
  public final static native Matrix3 ImpulseMatrix__SWIG_1(float jarg1, Matrix3 jarg2, Vector3 jarg3, float jarg4, Matrix3 jarg5, Vector3 jarg6);
  public final static native Matrix3 AngularImpulseMatrix(Matrix3 jarg1, Matrix3 jarg2);
  public final static native Vector3 ProjectOnAxis(Vector3 jarg1, Vector3 jarg2);
  public final static native Vector3 ProjectOnPlane(Vector3 jarg1, Vector3 jarg2);
  public final static native void ProjectOrigin__SWIG_0(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, long jarg4);
  public final static native void ProjectOrigin__SWIG_1(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5);
  public final static native Vector3 BaryCoord(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native float ImplicitSolve__SWIG_0(long jarg1, Vector3 jarg2, Vector3 jarg3, float jarg4, int jarg5);
  public final static native float ImplicitSolve__SWIG_1(long jarg1, Vector3 jarg2, Vector3 jarg3, float jarg4);
  public final static native Vector3 NormalizeAny(Vector3 jarg1);
  public final static native long VolumeOf__SWIG_0(long jarg1, Face jarg1_, float jarg2);
  public final static native Vector3 CenterOf(long jarg1, Face jarg1_);
  public final static native float AreaOf(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3);
  public final static native float VolumeOf__SWIG_1(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);
  public final static native void EvaluateMedium(long jarg1, btSoftBodyWorldInfo jarg1_, Vector3 jarg2, long jarg3, sMedium jarg3_);
  public final static native void ApplyClampedForce(long jarg1, Node jarg1_, Vector3 jarg2, float jarg3);
  public final static native int MatchEdge(long jarg1, Node jarg1_, long jarg2, Node jarg2_, long jarg3, Node jarg3_, long jarg4, Node jarg4_);
  public final static native int btEigen_system__SWIG_0(Matrix3 jarg1, long jarg2, long jarg3, btVector3 jarg3_);
  public final static native int btEigen_system__SWIG_1(Matrix3 jarg1, long jarg2);
  public final static native long new_btEigen();
  public final static native void delete_btEigen(long jarg1);
  public final static native int PolarDecompose(Matrix3 jarg1, Matrix3 jarg2, Matrix3 jarg3);
  public final static native long new_btSoftColliders();
  public final static native void delete_btSoftColliders(long jarg1);
  public final static native long new_btSoftBodyRigidBodyCollisionConfiguration__SWIG_0(long jarg1, btDefaultCollisionConstructionInfo jarg1_);
  public final static native long new_btSoftBodyRigidBodyCollisionConfiguration__SWIG_1();
  public final static native void delete_btSoftBodyRigidBodyCollisionConfiguration(long jarg1);
  public final static native void delete_btVertexBufferDescriptor(long jarg1);
  public final static native boolean btVertexBufferDescriptor_hasVertexPositions(long jarg1, btVertexBufferDescriptor jarg1_);
  public final static native boolean btVertexBufferDescriptor_hasNormals(long jarg1, btVertexBufferDescriptor jarg1_);
  public final static native int btVertexBufferDescriptor_getBufferType(long jarg1, btVertexBufferDescriptor jarg1_);
  public final static native int btVertexBufferDescriptor_getVertexOffset(long jarg1, btVertexBufferDescriptor jarg1_);
  public final static native int btVertexBufferDescriptor_getVertexStride(long jarg1, btVertexBufferDescriptor jarg1_);
  public final static native int btVertexBufferDescriptor_getNormalOffset(long jarg1, btVertexBufferDescriptor jarg1_);
  public final static native int btVertexBufferDescriptor_getNormalStride(long jarg1, btVertexBufferDescriptor jarg1_);
  public final static native long new_btCPUVertexBufferDescriptor__SWIG_0(java.nio.FloatBuffer jarg1, int jarg2, int jarg3);
  public final static native long new_btCPUVertexBufferDescriptor__SWIG_1(java.nio.FloatBuffer jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void delete_btCPUVertexBufferDescriptor(long jarg1);
  public final static native java.nio.FloatBuffer btCPUVertexBufferDescriptor_getBasePointer(long jarg1, btCPUVertexBufferDescriptor jarg1_);
  public final static native long new_btSoftRigidCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
  public final static native void delete_btSoftRigidCollisionAlgorithm(long jarg1);
  public final static native long new_btSoftRigidDynamicsWorld__SWIG_0(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btConstraintSolver jarg3_, long jarg4, btCollisionConfiguration jarg4_, long jarg5, btSoftBodySolver jarg5_);
  public final static native long new_btSoftRigidDynamicsWorld__SWIG_1(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btConstraintSolver jarg3_, long jarg4, btCollisionConfiguration jarg4_);
  public final static native void delete_btSoftRigidDynamicsWorld(long jarg1);
  public final static native void btSoftRigidDynamicsWorld_addSoftBody__SWIG_0(long jarg1, btSoftRigidDynamicsWorld jarg1_, long jarg2, btSoftBody jarg2_, short jarg3, short jarg4);
  public final static native void btSoftRigidDynamicsWorld_addSoftBody__SWIG_1(long jarg1, btSoftRigidDynamicsWorld jarg1_, long jarg2, btSoftBody jarg2_, short jarg3);
  public final static native void btSoftRigidDynamicsWorld_addSoftBody__SWIG_2(long jarg1, btSoftRigidDynamicsWorld jarg1_, long jarg2, btSoftBody jarg2_);
  public final static native void btSoftRigidDynamicsWorld_removeSoftBody(long jarg1, btSoftRigidDynamicsWorld jarg1_, long jarg2, btSoftBody jarg2_);
  public final static native int btSoftRigidDynamicsWorld_getDrawFlags(long jarg1, btSoftRigidDynamicsWorld jarg1_);
  public final static native void btSoftRigidDynamicsWorld_setDrawFlags(long jarg1, btSoftRigidDynamicsWorld jarg1_, int jarg2);
  public final static native long btSoftRigidDynamicsWorld_getWorldInfo__SWIG_0(long jarg1, btSoftRigidDynamicsWorld jarg1_);
  public final static native long btSoftRigidDynamicsWorld_getSoftBodyArray__SWIG_0(long jarg1, btSoftRigidDynamicsWorld jarg1_);
  public final static native void btSoftRigidDynamicsWorld_rayTestSingle(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionShape jarg4_, Matrix4 jarg5, long jarg6, RayResultCallback jarg6_);
  public final static native long new_btSoftSoftCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
  public final static native long new_btSoftSoftCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
  public final static native void delete_btSoftSoftCollisionAlgorithm(long jarg1);
  public final static native long btVector4_SWIGUpcast(long jarg1);
  public final static native long GrahamVector3_SWIGUpcast(long jarg1);
  public final static native long btDefaultMotionState_SWIGUpcast(long jarg1);
  public final static native long btBroadphaseRayCallback_SWIGUpcast(long jarg1);
  public final static native long btDbvtProxy_SWIGUpcast(long jarg1);
  public final static native long btDbvtBroadphase_SWIGUpcast(long jarg1);
  public final static native long btSimpleBroadphaseProxy_SWIGUpcast(long jarg1);
  public final static native long btSimpleBroadphase_SWIGUpcast(long jarg1);
  public final static native long btMultiSapBroadphase_SWIGUpcast(long jarg1);
  public final static native long btAxisSweep3InternalShort_SWIGUpcast(long jarg1);
  public final static native long btAxisSweep3InternalInt_SWIGUpcast(long jarg1);
  public final static native long btAxisSweep3_SWIGUpcast(long jarg1);
  public final static native long bt32BitAxisSweep3_SWIGUpcast(long jarg1);
  public final static native long btOverlappingPairCache_SWIGUpcast(long jarg1);
  public final static native long btHashedOverlappingPairCache_SWIGUpcast(long jarg1);
  public final static native long btSortedOverlappingPairCache_SWIGUpcast(long jarg1);
  public final static native long btNullPairCache_SWIGUpcast(long jarg1);
  public final static native long btConvexShape_SWIGUpcast(long jarg1);
  public final static native long btConvexInternalShape_SWIGUpcast(long jarg1);
  public final static native long btConvexInternalAabbCachingShape_SWIGUpcast(long jarg1);
  public final static native long btPolyhedralConvexShape_SWIGUpcast(long jarg1);
  public final static native long btPolyhedralConvexAabbCachingShape_SWIGUpcast(long jarg1);
  public final static native long btConcaveShape_SWIGUpcast(long jarg1);
  public final static native long btStaticPlaneShape_SWIGUpcast(long jarg1);
  public final static native long btHeightfieldTerrainShape_SWIGUpcast(long jarg1);
  public final static native long btTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btBvhTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btBoxShape_SWIGUpcast(long jarg1);
  public final static native long btCapsuleShape_SWIGUpcast(long jarg1);
  public final static native long btCapsuleShapeX_SWIGUpcast(long jarg1);
  public final static native long btCapsuleShapeZ_SWIGUpcast(long jarg1);
  public final static native long btBox2dShape_SWIGUpcast(long jarg1);
  public final static native long btTriangleShape_SWIGUpcast(long jarg1);
  public final static native long btSphereShape_SWIGUpcast(long jarg1);
  public final static native long btMinkowskiSumShape_SWIGUpcast(long jarg1);
  public final static native long btOptimizedBvh_SWIGUpcast(long jarg1);
  public final static native long btTriangleBuffer_SWIGUpcast(long jarg1);
  public final static native long btTriangleIndexVertexArray_SWIGUpcast(long jarg1);
  public final static native long btScaledBvhTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btConvexHullShape_SWIGUpcast(long jarg1);
  public final static native long btTriangleIndexVertexMaterialArray_SWIGUpcast(long jarg1);
  public final static native long btCylinderShape_SWIGUpcast(long jarg1);
  public final static native long btCylinderShapeX_SWIGUpcast(long jarg1);
  public final static native long btCylinderShapeZ_SWIGUpcast(long jarg1);
  public final static native long btTriangleMesh_SWIGUpcast(long jarg1);
  public final static native long btConeShape_SWIGUpcast(long jarg1);
  public final static native long btConeShapeX_SWIGUpcast(long jarg1);
  public final static native long btConeShapeZ_SWIGUpcast(long jarg1);
  public final static native long btConvexTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btEmptyShape_SWIGUpcast(long jarg1);
  public final static native long btMultimaterialTriangleMeshShape_SWIGUpcast(long jarg1);
  public final static native long btBU_Simplex1to4_SWIGUpcast(long jarg1);
  public final static native long btUniformScalingShape_SWIGUpcast(long jarg1);
  public final static native long btCompoundShape_SWIGUpcast(long jarg1);
  public final static native long btConvexPointCloudShape_SWIGUpcast(long jarg1);
  public final static native long btConvex2dShape_SWIGUpcast(long jarg1);
  public final static native long btEmptyAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btActivatingCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btConvexTriangleCallback_SWIGUpcast(long jarg1);
  public final static native long btConvexConcaveCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btConvexPlaneCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btDefaultCollisionConfiguration_SWIGUpcast(long jarg1);
  public final static native long btSphereSphereCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btBoxBoxCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btBox2dBox2dCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btSphereTriangleCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btGhostObject_SWIGUpcast(long jarg1);
  public final static native long btPairCachingGhostObject_SWIGUpcast(long jarg1);
  public final static native long btGhostPairCallback_SWIGUpcast(long jarg1);
  public final static native long ClosestRayResultCallback_SWIGUpcast(long jarg1);
  public final static native long AllHitsRayResultCallback_SWIGUpcast(long jarg1);
  public final static native long ClosestConvexResultCallback_SWIGUpcast(long jarg1);
  public final static native long ClosestNotMeConvexResultCallback_SWIGUpcast(long jarg1);
  public final static native long ClosestNotMeRayResultCallback_SWIGUpcast(long jarg1);
  public final static native long btConvex2dConvex2dAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btSphereBoxCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btCollisionDispatcher_SWIGUpcast(long jarg1);
  public final static native long btConvexConvexAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btCompoundCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btSubsimplexConvexCast_SWIGUpcast(long jarg1);
  public final static native long btPersistentManifold_SWIGUpcast(long jarg1);
  public final static native long btMinkowskiPenetrationDepthSolver_SWIGUpcast(long jarg1);
  public final static native long btGjkConvexCast_SWIGUpcast(long jarg1);
  public final static native long btContinuousConvexCollision_SWIGUpcast(long jarg1);
  public final static native long btTriangleRaycastCallback_SWIGUpcast(long jarg1);
  public final static native long btTriangleConvexcastCallback_SWIGUpcast(long jarg1);
  public final static native long btGjkEpaPenetrationDepthSolver_SWIGUpcast(long jarg1);
  public final static native long btMultiSphereShape_SWIGUpcast(long jarg1);
  public final static native long btRigidBody_SWIGUpcast(long jarg1);
  public final static native long btTypedConstraint_SWIGUpcast(long jarg1);
  public final static native long btDynamicsWorld_SWIGUpcast(long jarg1);
  public final static native long btSimpleDynamicsWorld_SWIGUpcast(long jarg1);
  public final static native long btDiscreteDynamicsWorld_SWIGUpcast(long jarg1);
  public final static native long btCharacterControllerInterface_SWIGUpcast(long jarg1);
  public final static native long btKinematicCharacterController_SWIGUpcast(long jarg1);
  public final static native long btContactSolverInfo_SWIGUpcast(long jarg1);
  public final static native long btSequentialImpulseConstraintSolver_SWIGUpcast(long jarg1);
  public final static native long btSliderConstraint_SWIGUpcast(long jarg1);
  public final static native long btPoint2PointConstraint_SWIGUpcast(long jarg1);
  public final static native long btGeneric6DofConstraint_SWIGUpcast(long jarg1);
  public final static native long btUniversalConstraint_SWIGUpcast(long jarg1);
  public final static native long btContactConstraint_SWIGUpcast(long jarg1);
  public final static native long btConeTwistConstraint_SWIGUpcast(long jarg1);
  public final static native long btGeneric6DofSpringConstraint_SWIGUpcast(long jarg1);
  public final static native long btHingeConstraint_SWIGUpcast(long jarg1);
  public final static native long btHinge2Constraint_SWIGUpcast(long jarg1);
  public final static native long btRaycastVehicle_SWIGUpcast(long jarg1);
  public final static native long btDefaultVehicleRaycaster_SWIGUpcast(long jarg1);
  public final static native long btDefaultSoftBodySolver_SWIGUpcast(long jarg1);
  public final static native long Material_SWIGUpcast(long jarg1);
  public final static native long Feature_SWIGUpcast(long jarg1);
  public final static native long Node_SWIGUpcast(long jarg1);
  public final static native long Link_SWIGUpcast(long jarg1);
  public final static native long Face_SWIGUpcast(long jarg1);
  public final static native long btSoftBody_SWIGUpcast(long jarg1);
  public final static native long btSoftBodyTriangleCallback_SWIGUpcast(long jarg1);
  public final static native long btSoftBodyConcaveCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btSoftBodyCollisionShape_SWIGUpcast(long jarg1);
  public final static native long btSoftClusterCollisionShape_SWIGUpcast(long jarg1);
  public final static native long btSoftBodyRigidBodyCollisionConfiguration_SWIGUpcast(long jarg1);
  public final static native long btCPUVertexBufferDescriptor_SWIGUpcast(long jarg1);
  public final static native long btSoftRigidCollisionAlgorithm_SWIGUpcast(long jarg1);
  public final static native long btSoftRigidDynamicsWorld_SWIGUpcast(long jarg1);
  public final static native long btSoftSoftCollisionAlgorithm_SWIGUpcast(long jarg1);

  public static void SwigDirector_btIDebugDraw_drawLine__SWIG_0(btIDebugDraw self, long from, long to, long color) {
    self.drawLine(new btVector3(from, false), new btVector3(to, false), new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawLine__SWIG_1(btIDebugDraw self, long from, long to, long fromColor, long toColor) {
    self.drawLine(new btVector3(from, false), new btVector3(to, false), new btVector3(fromColor, false), new btVector3(toColor, false));
  }
  public static void SwigDirector_btIDebugDraw_drawSphere__SWIG_0(btIDebugDraw self, float radius, long transform, long color) {
    self.drawSphere(radius, new btTransform(transform, false), new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawSphere__SWIG_1(btIDebugDraw self, long p, float radius, long color) {
    self.drawSphere(new btVector3(p, false), radius, new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawTriangle__SWIG_0(btIDebugDraw self, long v0, long v1, long v2, long arg3, long arg4, long arg5, long color, float alpha) {
    self.drawTriangle(new btVector3(v0, false), new btVector3(v1, false), new btVector3(v2, false), new btVector3(arg3, false), new btVector3(arg4, false), new btVector3(arg5, false), new btVector3(color, false), alpha);
  }
  public static void SwigDirector_btIDebugDraw_drawTriangle__SWIG_1(btIDebugDraw self, long v0, long v1, long v2, long color, float arg4) {
    self.drawTriangle(new btVector3(v0, false), new btVector3(v1, false), new btVector3(v2, false), new btVector3(color, false), arg4);
  }
  public static void SwigDirector_btIDebugDraw_drawContactPoint(btIDebugDraw self, long PointOnB, long normalOnB, float distance, int lifeTime, long color) {
    self.drawContactPoint(new btVector3(PointOnB, false), new btVector3(normalOnB, false), distance, lifeTime, new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_reportErrorWarning(btIDebugDraw self, String warningString) {
    self.reportErrorWarning(warningString);
  }
  public static void SwigDirector_btIDebugDraw_draw3dText(btIDebugDraw self, long location, String textString) {
    self.draw3dText(new btVector3(location, false), textString);
  }
  public static void SwigDirector_btIDebugDraw_setDebugMode(btIDebugDraw self, int debugMode) {
    self.setDebugMode(debugMode);
  }
  public static int SwigDirector_btIDebugDraw_getDebugMode(btIDebugDraw self) {
    return self.getDebugMode();
  }
  public static void SwigDirector_btIDebugDraw_drawAabb(btIDebugDraw self, long from, long to, long color) {
    self.drawAabb(new btVector3(from, false), new btVector3(to, false), new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawTransform(btIDebugDraw self, long transform, float orthoLen) {
    self.drawTransform(new btTransform(transform, false), orthoLen);
  }
  public static void SwigDirector_btIDebugDraw_drawArc__SWIG_0(btIDebugDraw self, long center, long normal, long axis, float radiusA, float radiusB, float minAngle, float maxAngle, long color, boolean drawSect, float stepDegrees) {
    self.drawArc(new btVector3(center, false), new btVector3(normal, false), new btVector3(axis, false), radiusA, radiusB, minAngle, maxAngle, new btVector3(color, false), drawSect, stepDegrees);
  }
  public static void SwigDirector_btIDebugDraw_drawArc__SWIG_1(btIDebugDraw self, long center, long normal, long axis, float radiusA, float radiusB, float minAngle, float maxAngle, long color, boolean drawSect) {
    self.drawArc(new btVector3(center, false), new btVector3(normal, false), new btVector3(axis, false), radiusA, radiusB, minAngle, maxAngle, new btVector3(color, false), drawSect);
  }
  public static void SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_0(btIDebugDraw self, long center, long up, long axis, float radius, float minTh, float maxTh, float minPs, float maxPs, long color, float stepDegrees) {
    self.drawSpherePatch(new btVector3(center, false), new btVector3(up, false), new btVector3(axis, false), radius, minTh, maxTh, minPs, maxPs, new btVector3(color, false), stepDegrees);
  }
  public static void SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_1(btIDebugDraw self, long center, long up, long axis, float radius, float minTh, float maxTh, float minPs, float maxPs, long color) {
    self.drawSpherePatch(new btVector3(center, false), new btVector3(up, false), new btVector3(axis, false), radius, minTh, maxTh, minPs, maxPs, new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawBox__SWIG_0(btIDebugDraw self, long bbMin, long bbMax, long color) {
    self.drawBox(new btVector3(bbMin, false), new btVector3(bbMax, false), new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawBox__SWIG_1(btIDebugDraw self, long bbMin, long bbMax, long trans, long color) {
    self.drawBox(new btVector3(bbMin, false), new btVector3(bbMax, false), new btTransform(trans, false), new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawCapsule(btIDebugDraw self, float radius, float halfHeight, int upAxis, long transform, long color) {
    self.drawCapsule(radius, halfHeight, upAxis, new btTransform(transform, false), new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawCylinder(btIDebugDraw self, float radius, float halfHeight, int upAxis, long transform, long color) {
    self.drawCylinder(radius, halfHeight, upAxis, new btTransform(transform, false), new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawCone(btIDebugDraw self, float radius, float height, int upAxis, long transform, long color) {
    self.drawCone(radius, height, upAxis, new btTransform(transform, false), new btVector3(color, false));
  }
  public static void SwigDirector_btIDebugDraw_drawPlane(btIDebugDraw self, long planeNormal, float planeConst, long transform, long color) {
    self.drawPlane(new btVector3(planeNormal, false), planeConst, new btTransform(transform, false), new btVector3(color, false));
  }
  public static void SwigDirector_btMotionState_getWorldTransform(btMotionState self, Matrix4 worldTrans) {
    self.getWorldTransform(worldTrans);
  }
  public static void SwigDirector_btMotionState_setWorldTransform(btMotionState self, Matrix4 worldTrans) {
    self.setWorldTransform(worldTrans);
  }
  public static boolean SwigDirector_RayResultCallback_needsCollision(RayResultCallback self, long proxy0) {
    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_RayResultCallback_addSingleResult(RayResultCallback self, long rayResult, boolean normalInWorldSpace) {
    return self.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_ClosestRayResultCallback_needsCollision(ClosestRayResultCallback self, long proxy0) {
    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_ClosestRayResultCallback_addSingleResult(ClosestRayResultCallback self, long rayResult, boolean normalInWorldSpace) {
    return self.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_AllHitsRayResultCallback_needsCollision(AllHitsRayResultCallback self, long proxy0) {
    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_AllHitsRayResultCallback_addSingleResult(AllHitsRayResultCallback self, long rayResult, boolean normalInWorldSpace) {
    return self.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_ConvexResultCallback_needsCollision(ConvexResultCallback self, long proxy0) {
    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_ConvexResultCallback_addSingleResult(ConvexResultCallback self, long convexResult, boolean normalInWorldSpace) {
    return self.addSingleResult(new LocalConvexResult(convexResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_ClosestConvexResultCallback_needsCollision(ClosestConvexResultCallback self, long proxy0) {
    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_ClosestConvexResultCallback_addSingleResult(ClosestConvexResultCallback self, long convexResult, boolean normalInWorldSpace) {
    return self.addSingleResult(new LocalConvexResult(convexResult, false), normalInWorldSpace);
  }
  public static boolean SwigDirector_ContactResultCallback_needsCollision(ContactResultCallback self, long proxy0) {
    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
  }
  public static float SwigDirector_ContactResultCallback_addSingleResult(ContactResultCallback self, long cp, long colObj0Wrap, int partId0, int index0, long colObj1Wrap, int partId1, int index1) {
    return self.addSingleResult(new btManifoldPoint(cp, false), (colObj0Wrap == 0) ? null : new btCollisionObjectWrapper(colObj0Wrap, false), partId0, index0, (colObj1Wrap == 0) ? null : new btCollisionObjectWrapper(colObj1Wrap, false), partId1, index1);
  }
  public static boolean SwigDirector_ContactAddedListenerByWrapper_onContactAdded(ContactAddedListenerByWrapper self, btManifoldPoint cp, long colObj0Wrap, int partId0, int index0, boolean match0, long colObj1Wrap, int partId1, int index1, boolean match1) {
    return self.onContactAdded(cp, (colObj0Wrap == 0) ? null : new btCollisionObjectWrapper(colObj0Wrap, false), partId0, index0, match0, (colObj1Wrap == 0) ? null : new btCollisionObjectWrapper(colObj1Wrap, false), partId1, index1, match1);
  }
  public static boolean SwigDirector_ContactAddedListenerByObject_onContactAdded(ContactAddedListenerByObject self, btManifoldPoint cp, long colObj0, int partId0, int index0, boolean match0, long colObj1, int partId1, int index1, boolean match1) {
    return self.onContactAdded(cp, btCollisionObject.getInstance(colObj0, false), partId0, index0, match0, btCollisionObject.getInstance(colObj1, false), partId1, index1, match1);
  }
  public static boolean SwigDirector_ContactAddedListenerByValue_onContactAdded(ContactAddedListenerByValue self, btManifoldPoint cp, int userValue0, int partId0, int index0, boolean match0, int userValue1, int partId1, int index1, boolean match1) {
    return self.onContactAdded(cp, userValue0, partId0, index0, match0, userValue1, partId1, index1, match1);
  }
  public static void SwigDirector_ContactProcessedListenerByObject_onContactProcessed(ContactProcessedListenerByObject self, btManifoldPoint cp, long colObj0, boolean match0, long colObj1, boolean match1) {
    self.onContactProcessed(cp, btCollisionObject.getInstance(colObj0, false), match0, btCollisionObject.getInstance(colObj1, false), match1);
  }
  public static void SwigDirector_ContactProcessedListenerByValue_onContactProcessed(ContactProcessedListenerByValue self, btManifoldPoint cp, int userValue0, boolean match0, int userValue1, boolean match1) {
    self.onContactProcessed(cp, userValue0, match0, userValue1, match1);
  }
  public static void SwigDirector_ContactDestroyedListener_onContactDestroyed(ContactDestroyedListener self, int manifoldPointUserValue) {
    self.onContactDestroyed(manifoldPointUserValue);
  }
  public static void SwigDirector_InternalTickCallback_onInternalTick(InternalTickCallback self, long dynamicsWorld, float timeStep) {
    self.onInternalTick((dynamicsWorld == 0) ? null : new btDynamicsWorld(dynamicsWorld, false), timeStep);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
