/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btTransform {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected btTransform(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(btTransform obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_btTransform(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public btTransform() {
    this(gdxBulletJNI.new_btTransform__SWIG_0(), true);
  }

  public btTransform(Quaternion q, Vector3 c) {
    this(gdxBulletJNI.new_btTransform__SWIG_1(q, c), true);
  }

  public btTransform(Quaternion q) {
    this(gdxBulletJNI.new_btTransform__SWIG_2(q), true);
  }

  public btTransform(Matrix3 b, Vector3 c) {
    this(gdxBulletJNI.new_btTransform__SWIG_3(b, c), true);
  }

  public btTransform(Matrix3 b) {
    this(gdxBulletJNI.new_btTransform__SWIG_4(b), true);
  }

  public btTransform(Matrix4 other) {
    this(gdxBulletJNI.new_btTransform__SWIG_5(other), true);
  }

  public void mult(Matrix4 t1, Matrix4 t2) {
    gdxBulletJNI.btTransform_mult(swigCPtr, this, t1, t2);
  }

  public Matrix3 getBasis() {
	return gdxBulletJNI.btTransform_getBasis__SWIG_0(swigCPtr, this);
}

  public Vector3 getOrigin() {
	return gdxBulletJNI.btTransform_getOrigin__SWIG_0(swigCPtr, this);
}

  public Quaternion getRotation() {
	return gdxBulletJNI.btTransform_getRotation(swigCPtr, this);
}

  public void setFromOpenGLMatrix(float[] m) {
    gdxBulletJNI.btTransform_setFromOpenGLMatrix(swigCPtr, this, m);
  }

  public void getOpenGLMatrix(float[] m) {
    gdxBulletJNI.btTransform_getOpenGLMatrix(swigCPtr, this, m);
  }

  public void setOrigin(Vector3 origin) {
    gdxBulletJNI.btTransform_setOrigin(swigCPtr, this, origin);
  }

  public Vector3 invXform(Vector3 inVec) {
	return gdxBulletJNI.btTransform_invXform(swigCPtr, this, inVec);
}

  public void setBasis(Matrix3 basis) {
    gdxBulletJNI.btTransform_setBasis(swigCPtr, this, basis);
  }

  public void setRotation(Quaternion q) {
    gdxBulletJNI.btTransform_setRotation(swigCPtr, this, q);
  }

  public void setIdentity() {
    gdxBulletJNI.btTransform_setIdentity(swigCPtr, this);
  }

  public Matrix4 inverse() {
	return gdxBulletJNI.btTransform_inverse(swigCPtr, this);
}

  public Matrix4 inverseTimes(Matrix4 t) {
	return gdxBulletJNI.btTransform_inverseTimes(swigCPtr, this, t);
}

  public static Matrix4 getIdentity() {
	return gdxBulletJNI.btTransform_getIdentity();
}

  public void serialize(btTransformFloatData dataOut) {
    gdxBulletJNI.btTransform_serialize(swigCPtr, this, btTransformFloatData.getCPtr(dataOut), dataOut);
  }

  public void serializeFloat(btTransformFloatData dataOut) {
    gdxBulletJNI.btTransform_serializeFloat(swigCPtr, this, btTransformFloatData.getCPtr(dataOut), dataOut);
  }

  public void deSerialize(btTransformFloatData dataIn) {
    gdxBulletJNI.btTransform_deSerialize(swigCPtr, this, btTransformFloatData.getCPtr(dataIn), dataIn);
  }

  public void deSerializeDouble(btTransformDoubleData dataIn) {
    gdxBulletJNI.btTransform_deSerializeDouble(swigCPtr, this, btTransformDoubleData.getCPtr(dataIn), dataIn);
  }

  public void deSerializeFloat(btTransformFloatData dataIn) {
    gdxBulletJNI.btTransform_deSerializeFloat(swigCPtr, this, btTransformFloatData.getCPtr(dataIn), dataIn);
  }

}
