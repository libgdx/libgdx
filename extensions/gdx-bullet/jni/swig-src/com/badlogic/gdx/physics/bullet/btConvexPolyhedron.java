/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btConvexPolyhedron {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected btConvexPolyhedron(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(btConvexPolyhedron obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_btConvexPolyhedron(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public btConvexPolyhedron() {
    this(gdxBulletJNI.new_btConvexPolyhedron(), true);
  }

  public void setM_vertices(SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t value) {
    gdxBulletJNI.btConvexPolyhedron_m_vertices_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t.getCPtr(value));
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t getM_vertices() {
    long cPtr = gdxBulletJNI.btConvexPolyhedron_m_vertices_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t(cPtr, false);
  }

  public void setM_faces(SWIGTYPE_p_btAlignedObjectArrayT_btFace_t value) {
    gdxBulletJNI.btConvexPolyhedron_m_faces_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btFace_t.getCPtr(value));
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btFace_t getM_faces() {
    long cPtr = gdxBulletJNI.btConvexPolyhedron_m_faces_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btFace_t(cPtr, false);
  }

  public void setM_uniqueEdges(SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t value) {
    gdxBulletJNI.btConvexPolyhedron_m_uniqueEdges_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t.getCPtr(value));
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t getM_uniqueEdges() {
    long cPtr = gdxBulletJNI.btConvexPolyhedron_m_uniqueEdges_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t(cPtr, false);
  }

  public void setM_localCenter(btVector3 value) {
    gdxBulletJNI.btConvexPolyhedron_m_localCenter_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getM_localCenter() {
    long cPtr = gdxBulletJNI.btConvexPolyhedron_m_localCenter_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setM_extents(btVector3 value) {
    gdxBulletJNI.btConvexPolyhedron_m_extents_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getM_extents() {
    long cPtr = gdxBulletJNI.btConvexPolyhedron_m_extents_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setM_radius(float value) {
    gdxBulletJNI.btConvexPolyhedron_m_radius_set(swigCPtr, this, value);
  }

  public float getM_radius() {
    return gdxBulletJNI.btConvexPolyhedron_m_radius_get(swigCPtr, this);
  }

  public void setMC(btVector3 value) {
    gdxBulletJNI.btConvexPolyhedron_mC_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getMC() {
    long cPtr = gdxBulletJNI.btConvexPolyhedron_mC_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setME(btVector3 value) {
    gdxBulletJNI.btConvexPolyhedron_mE_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getME() {
    long cPtr = gdxBulletJNI.btConvexPolyhedron_mE_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void initialize() {
    gdxBulletJNI.btConvexPolyhedron_initialize(swigCPtr, this);
  }

  public boolean testContainment() {
    return gdxBulletJNI.btConvexPolyhedron_testContainment(swigCPtr, this);
  }

  public void project(Matrix4 trans, Vector3 dir, SWIGTYPE_p_float minProj, SWIGTYPE_p_float maxProj, Vector3 witnesPtMin, Vector3 witnesPtMax) {
    gdxBulletJNI.btConvexPolyhedron_project(swigCPtr, this, trans, dir, SWIGTYPE_p_float.getCPtr(minProj), SWIGTYPE_p_float.getCPtr(maxProj), witnesPtMin, witnesPtMax);
  }

}
