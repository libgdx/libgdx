/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btVehicleTuning {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected btVehicleTuning(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(btVehicleTuning obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_btVehicleTuning(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public btVehicleTuning() {
    this(gdxBulletJNI.new_btVehicleTuning(), true);
  }

  public void setM_suspensionStiffness(float value) {
    gdxBulletJNI.btVehicleTuning_m_suspensionStiffness_set(swigCPtr, this, value);
  }

  public float getM_suspensionStiffness() {
    return gdxBulletJNI.btVehicleTuning_m_suspensionStiffness_get(swigCPtr, this);
  }

  public void setM_suspensionCompression(float value) {
    gdxBulletJNI.btVehicleTuning_m_suspensionCompression_set(swigCPtr, this, value);
  }

  public float getM_suspensionCompression() {
    return gdxBulletJNI.btVehicleTuning_m_suspensionCompression_get(swigCPtr, this);
  }

  public void setM_suspensionDamping(float value) {
    gdxBulletJNI.btVehicleTuning_m_suspensionDamping_set(swigCPtr, this, value);
  }

  public float getM_suspensionDamping() {
    return gdxBulletJNI.btVehicleTuning_m_suspensionDamping_get(swigCPtr, this);
  }

  public void setM_maxSuspensionTravelCm(float value) {
    gdxBulletJNI.btVehicleTuning_m_maxSuspensionTravelCm_set(swigCPtr, this, value);
  }

  public float getM_maxSuspensionTravelCm() {
    return gdxBulletJNI.btVehicleTuning_m_maxSuspensionTravelCm_get(swigCPtr, this);
  }

  public void setM_frictionSlip(float value) {
    gdxBulletJNI.btVehicleTuning_m_frictionSlip_set(swigCPtr, this, value);
  }

  public float getM_frictionSlip() {
    return gdxBulletJNI.btVehicleTuning_m_frictionSlip_get(swigCPtr, this);
  }

  public void setM_maxSuspensionForce(float value) {
    gdxBulletJNI.btVehicleTuning_m_maxSuspensionForce_set(swigCPtr, this, value);
  }

  public float getM_maxSuspensionForce() {
    return gdxBulletJNI.btVehicleTuning_m_maxSuspensionForce_get(swigCPtr, this);
  }

}
