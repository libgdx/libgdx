/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btConeTwistConstraintData extends BulletBase {
	private long swigCPtr;
	
	protected btConeTwistConstraintData(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, cPtr, cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	protected btConeTwistConstraintData(long cPtr, boolean cMemoryOwn) {
		this("btConeTwistConstraintData", cPtr, cMemoryOwn);
		construct();
	}
	
	public static long getCPtr(btConeTwistConstraintData obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				gdxBulletJNI.delete_btConeTwistConstraintData(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

  public void setTypeConstraintData(btTypedConstraintData value) {
    gdxBulletJNI.btConeTwistConstraintData_typeConstraintData_set(swigCPtr, this, btTypedConstraintData.getCPtr(value), value);
  }

  public btTypedConstraintData getTypeConstraintData() {
    long cPtr = gdxBulletJNI.btConeTwistConstraintData_typeConstraintData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btTypedConstraintData(cPtr, false);
  }

  public void setRbAFrame(btTransformFloatData value) {
    gdxBulletJNI.btConeTwistConstraintData_rbAFrame_set(swigCPtr, this, btTransformFloatData.getCPtr(value), value);
  }

  public btTransformFloatData getRbAFrame() {
    long cPtr = gdxBulletJNI.btConeTwistConstraintData_rbAFrame_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btTransformFloatData(cPtr, false);
  }

  public void setRbBFrame(btTransformFloatData value) {
    gdxBulletJNI.btConeTwistConstraintData_rbBFrame_set(swigCPtr, this, btTransformFloatData.getCPtr(value), value);
  }

  public btTransformFloatData getRbBFrame() {
    long cPtr = gdxBulletJNI.btConeTwistConstraintData_rbBFrame_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btTransformFloatData(cPtr, false);
  }

  public void setSwingSpan1(float value) {
    gdxBulletJNI.btConeTwistConstraintData_swingSpan1_set(swigCPtr, this, value);
  }

  public float getSwingSpan1() {
    return gdxBulletJNI.btConeTwistConstraintData_swingSpan1_get(swigCPtr, this);
  }

  public void setSwingSpan2(float value) {
    gdxBulletJNI.btConeTwistConstraintData_swingSpan2_set(swigCPtr, this, value);
  }

  public float getSwingSpan2() {
    return gdxBulletJNI.btConeTwistConstraintData_swingSpan2_get(swigCPtr, this);
  }

  public void setTwistSpan(float value) {
    gdxBulletJNI.btConeTwistConstraintData_twistSpan_set(swigCPtr, this, value);
  }

  public float getTwistSpan() {
    return gdxBulletJNI.btConeTwistConstraintData_twistSpan_get(swigCPtr, this);
  }

  public void setLimitSoftness(float value) {
    gdxBulletJNI.btConeTwistConstraintData_limitSoftness_set(swigCPtr, this, value);
  }

  public float getLimitSoftness() {
    return gdxBulletJNI.btConeTwistConstraintData_limitSoftness_get(swigCPtr, this);
  }

  public void setBiasFactor(float value) {
    gdxBulletJNI.btConeTwistConstraintData_biasFactor_set(swigCPtr, this, value);
  }

  public float getBiasFactor() {
    return gdxBulletJNI.btConeTwistConstraintData_biasFactor_get(swigCPtr, this);
  }

  public void setRelaxationFactor(float value) {
    gdxBulletJNI.btConeTwistConstraintData_relaxationFactor_set(swigCPtr, this, value);
  }

  public float getRelaxationFactor() {
    return gdxBulletJNI.btConeTwistConstraintData_relaxationFactor_get(swigCPtr, this);
  }

  public void setDamping(float value) {
    gdxBulletJNI.btConeTwistConstraintData_damping_set(swigCPtr, this, value);
  }

  public float getDamping() {
    return gdxBulletJNI.btConeTwistConstraintData_damping_get(swigCPtr, this);
  }

  public void setPad(String value) {
    gdxBulletJNI.btConeTwistConstraintData_pad_set(swigCPtr, this, value);
  }

  public String getPad() {
    return gdxBulletJNI.btConeTwistConstraintData_pad_get(swigCPtr, this);
  }

  public btConeTwistConstraintData() {
    this(gdxBulletJNI.new_btConeTwistConstraintData(), true);
  }

}
