/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class AllHitsRayResultCallback extends RayResultCallback {
	private long swigCPtr;
	
	protected AllHitsRayResultCallback(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, gdxBulletJNI.AllHitsRayResultCallback_SWIGUpcast(cPtr), cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	protected AllHitsRayResultCallback(long cPtr, boolean cMemoryOwn) {
		this("AllHitsRayResultCallback", cPtr, cMemoryOwn);
		construct();
	}
	
	@Override
	protected void reset(long cPtr, boolean cMemoryOwn) {
		if (!destroyed)
			destroy();
		super.reset(gdxBulletJNI.AllHitsRayResultCallback_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);
	}
	
	public static long getCPtr(AllHitsRayResultCallback obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				gdxBulletJNI.delete_AllHitsRayResultCallback(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    gdxBulletJNI.AllHitsRayResultCallback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    gdxBulletJNI.AllHitsRayResultCallback_change_ownership(this, swigCPtr, true);
  }

  public AllHitsRayResultCallback(Vector3 rayFromWorld, Vector3 rayToWorld) {
    this(gdxBulletJNI.new_AllHitsRayResultCallback(rayFromWorld, rayToWorld), true);
    gdxBulletJNI.AllHitsRayResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void setCollisionObjects(SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t value) {
    gdxBulletJNI.AllHitsRayResultCallback_collisionObjects_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t.getCPtr(value));
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t getCollisionObjects() {
    long cPtr = gdxBulletJNI.AllHitsRayResultCallback_collisionObjects_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t(cPtr, false);
  }

  public void setRayFromWorld(btVector3 value) {
    gdxBulletJNI.AllHitsRayResultCallback_rayFromWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getRayFromWorld() {
    long cPtr = gdxBulletJNI.AllHitsRayResultCallback_rayFromWorld_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setRayToWorld(btVector3 value) {
    gdxBulletJNI.AllHitsRayResultCallback_rayToWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getRayToWorld() {
    long cPtr = gdxBulletJNI.AllHitsRayResultCallback_rayToWorld_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setHitNormalWorld(SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t value) {
    gdxBulletJNI.AllHitsRayResultCallback_hitNormalWorld_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t.getCPtr(value));
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t getHitNormalWorld() {
    long cPtr = gdxBulletJNI.AllHitsRayResultCallback_hitNormalWorld_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t(cPtr, false);
  }

  public void setHitPointWorld(SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t value) {
    gdxBulletJNI.AllHitsRayResultCallback_hitPointWorld_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t.getCPtr(value));
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t getHitPointWorld() {
    long cPtr = gdxBulletJNI.AllHitsRayResultCallback_hitPointWorld_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btVector3_t(cPtr, false);
  }

  public void setHitFractions(SWIGTYPE_p_btAlignedObjectArrayT_float_t value) {
    gdxBulletJNI.AllHitsRayResultCallback_hitFractions_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_float_t.getCPtr(value));
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_float_t getHitFractions() {
    long cPtr = gdxBulletJNI.AllHitsRayResultCallback_hitFractions_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_float_t(cPtr, false);
  }

  public float addSingleResult(LocalRayResult rayResult, boolean normalInWorldSpace) {
    return (getClass() == AllHitsRayResultCallback.class) ? gdxBulletJNI.AllHitsRayResultCallback_addSingleResult(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace) : gdxBulletJNI.AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace);
  }

}
