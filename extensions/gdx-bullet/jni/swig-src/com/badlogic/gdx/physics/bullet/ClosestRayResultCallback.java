/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;

public class ClosestRayResultCallback extends RayResultCallback {
  private long swigCPtr;

  protected ClosestRayResultCallback(long cPtr, boolean cMemoryOwn) {
    super(gdxBulletJNI.ClosestRayResultCallback_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ClosestRayResultCallback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_ClosestRayResultCallback(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ClosestRayResultCallback(Vector3 rayFromWorld, Vector3 rayToWorld) {
    this(gdxBulletJNI.new_ClosestRayResultCallback(rayFromWorld, rayToWorld), true);
  }

  public void setM_rayFromWorld(btVector3 value) {
    gdxBulletJNI.ClosestRayResultCallback_m_rayFromWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getM_rayFromWorld() {
    long cPtr = gdxBulletJNI.ClosestRayResultCallback_m_rayFromWorld_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setM_rayToWorld(btVector3 value) {
    gdxBulletJNI.ClosestRayResultCallback_m_rayToWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getM_rayToWorld() {
    long cPtr = gdxBulletJNI.ClosestRayResultCallback_m_rayToWorld_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setM_hitNormalWorld(btVector3 value) {
    gdxBulletJNI.ClosestRayResultCallback_m_hitNormalWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getM_hitNormalWorld() {
    long cPtr = gdxBulletJNI.ClosestRayResultCallback_m_hitNormalWorld_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setM_hitPointWorld(btVector3 value) {
    gdxBulletJNI.ClosestRayResultCallback_m_hitPointWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getM_hitPointWorld() {
    long cPtr = gdxBulletJNI.ClosestRayResultCallback_m_hitPointWorld_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

}
