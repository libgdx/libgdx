/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btDefaultCollisionConstructionInfo {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected btDefaultCollisionConstructionInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(btDefaultCollisionConstructionInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_btDefaultCollisionConstructionInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setM_stackAlloc(btStackAlloc value) {
    gdxBulletJNI.btDefaultCollisionConstructionInfo_m_stackAlloc_set(swigCPtr, this, btStackAlloc.getCPtr(value), value);
  }

  public btStackAlloc getM_stackAlloc() {
    long cPtr = gdxBulletJNI.btDefaultCollisionConstructionInfo_m_stackAlloc_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btStackAlloc(cPtr, false);
  }

  public void setM_persistentManifoldPool(btPoolAllocator value) {
    gdxBulletJNI.btDefaultCollisionConstructionInfo_m_persistentManifoldPool_set(swigCPtr, this, btPoolAllocator.getCPtr(value), value);
  }

  public btPoolAllocator getM_persistentManifoldPool() {
    long cPtr = gdxBulletJNI.btDefaultCollisionConstructionInfo_m_persistentManifoldPool_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btPoolAllocator(cPtr, false);
  }

  public void setM_collisionAlgorithmPool(btPoolAllocator value) {
    gdxBulletJNI.btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_set(swigCPtr, this, btPoolAllocator.getCPtr(value), value);
  }

  public btPoolAllocator getM_collisionAlgorithmPool() {
    long cPtr = gdxBulletJNI.btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btPoolAllocator(cPtr, false);
  }

  public void setM_defaultMaxPersistentManifoldPoolSize(int value) {
    gdxBulletJNI.btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_set(swigCPtr, this, value);
  }

  public int getM_defaultMaxPersistentManifoldPoolSize() {
    return gdxBulletJNI.btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_get(swigCPtr, this);
  }

  public void setM_defaultMaxCollisionAlgorithmPoolSize(int value) {
    gdxBulletJNI.btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_set(swigCPtr, this, value);
  }

  public int getM_defaultMaxCollisionAlgorithmPoolSize() {
    return gdxBulletJNI.btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_get(swigCPtr, this);
  }

  public void setM_customCollisionAlgorithmMaxElementSize(int value) {
    gdxBulletJNI.btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_set(swigCPtr, this, value);
  }

  public int getM_customCollisionAlgorithmMaxElementSize() {
    return gdxBulletJNI.btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_get(swigCPtr, this);
  }

  public void setM_defaultStackAllocatorSize(int value) {
    gdxBulletJNI.btDefaultCollisionConstructionInfo_m_defaultStackAllocatorSize_set(swigCPtr, this, value);
  }

  public int getM_defaultStackAllocatorSize() {
    return gdxBulletJNI.btDefaultCollisionConstructionInfo_m_defaultStackAllocatorSize_get(swigCPtr, this);
  }

  public void setM_useEpaPenetrationAlgorithm(int value) {
    gdxBulletJNI.btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_set(swigCPtr, this, value);
  }

  public int getM_useEpaPenetrationAlgorithm() {
    return gdxBulletJNI.btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_get(swigCPtr, this);
  }

  public btDefaultCollisionConstructionInfo() {
    this(gdxBulletJNI.new_btDefaultCollisionConstructionInfo(), true);
  }

}
