/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class SoftBodyNodeData extends BulletBase {
	private long swigCPtr;
	
	protected SoftBodyNodeData(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, cPtr, cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	protected SoftBodyNodeData(long cPtr, boolean cMemoryOwn) {
		this("SoftBodyNodeData", cPtr, cMemoryOwn);
		construct();
	}
	
	@Override
	protected void reset(long cPtr, boolean cMemoryOwn) {
		if (!destroyed)
			destroy();
		super.reset(swigCPtr = cPtr, cMemoryOwn);
	}
	
	public static long getCPtr(SoftBodyNodeData obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				gdxBulletJNI.delete_SoftBodyNodeData(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

  public void setMaterial(SoftBodyMaterialData value) {
    gdxBulletJNI.SoftBodyNodeData_material_set(swigCPtr, this, SoftBodyMaterialData.getCPtr(value), value);
  }

  public SoftBodyMaterialData getMaterial() {
    long cPtr = gdxBulletJNI.SoftBodyNodeData_material_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SoftBodyMaterialData(cPtr, false);
  }

  public void setPosition(btVector3FloatData value) {
    gdxBulletJNI.SoftBodyNodeData_position_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);
  }

  public btVector3FloatData getPosition() {
    long cPtr = gdxBulletJNI.SoftBodyNodeData_position_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);
  }

  public void setPreviousPosition(btVector3FloatData value) {
    gdxBulletJNI.SoftBodyNodeData_previousPosition_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);
  }

  public btVector3FloatData getPreviousPosition() {
    long cPtr = gdxBulletJNI.SoftBodyNodeData_previousPosition_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);
  }

  public void setVelocity(btVector3FloatData value) {
    gdxBulletJNI.SoftBodyNodeData_velocity_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);
  }

  public btVector3FloatData getVelocity() {
    long cPtr = gdxBulletJNI.SoftBodyNodeData_velocity_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);
  }

  public void setAccumulatedForce(btVector3FloatData value) {
    gdxBulletJNI.SoftBodyNodeData_accumulatedForce_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);
  }

  public btVector3FloatData getAccumulatedForce() {
    long cPtr = gdxBulletJNI.SoftBodyNodeData_accumulatedForce_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);
  }

  public void setNormal(btVector3FloatData value) {
    gdxBulletJNI.SoftBodyNodeData_normal_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);
  }

  public btVector3FloatData getNormal() {
    long cPtr = gdxBulletJNI.SoftBodyNodeData_normal_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);
  }

  public void setInverseMass(float value) {
    gdxBulletJNI.SoftBodyNodeData_inverseMass_set(swigCPtr, this, value);
  }

  public float getInverseMass() {
    return gdxBulletJNI.SoftBodyNodeData_inverseMass_get(swigCPtr, this);
  }

  public void setArea(float value) {
    gdxBulletJNI.SoftBodyNodeData_area_set(swigCPtr, this, value);
  }

  public float getArea() {
    return gdxBulletJNI.SoftBodyNodeData_area_get(swigCPtr, this);
  }

  public void setAttach(int value) {
    gdxBulletJNI.SoftBodyNodeData_attach_set(swigCPtr, this, value);
  }

  public int getAttach() {
    return gdxBulletJNI.SoftBodyNodeData_attach_get(swigCPtr, this);
  }

  public void setPad(int value) {
    gdxBulletJNI.SoftBodyNodeData_pad_set(swigCPtr, this, value);
  }

  public int getPad() {
    return gdxBulletJNI.SoftBodyNodeData_pad_get(swigCPtr, this);
  }

  public SoftBodyNodeData() {
    this(gdxBulletJNI.new_SoftBodyNodeData(), true);
  }

}
