/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btBroadphaseProxy {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected btBroadphaseProxy(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(btBroadphaseProxy obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_btBroadphaseProxy(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setM_clientObject(SWIGTYPE_p_void value) {
    gdxBulletJNI.btBroadphaseProxy_m_clientObject_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getM_clientObject() {
    long cPtr = gdxBulletJNI.btBroadphaseProxy_m_clientObject_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setM_collisionFilterGroup(short value) {
    gdxBulletJNI.btBroadphaseProxy_m_collisionFilterGroup_set(swigCPtr, this, value);
  }

  public short getM_collisionFilterGroup() {
    return gdxBulletJNI.btBroadphaseProxy_m_collisionFilterGroup_get(swigCPtr, this);
  }

  public void setM_collisionFilterMask(short value) {
    gdxBulletJNI.btBroadphaseProxy_m_collisionFilterMask_set(swigCPtr, this, value);
  }

  public short getM_collisionFilterMask() {
    return gdxBulletJNI.btBroadphaseProxy_m_collisionFilterMask_get(swigCPtr, this);
  }

  public void setM_multiSapParentProxy(SWIGTYPE_p_void value) {
    gdxBulletJNI.btBroadphaseProxy_m_multiSapParentProxy_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getM_multiSapParentProxy() {
    long cPtr = gdxBulletJNI.btBroadphaseProxy_m_multiSapParentProxy_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setM_uniqueId(int value) {
    gdxBulletJNI.btBroadphaseProxy_m_uniqueId_set(swigCPtr, this, value);
  }

  public int getM_uniqueId() {
    return gdxBulletJNI.btBroadphaseProxy_m_uniqueId_get(swigCPtr, this);
  }

  public void setM_aabbMin(btVector3 value) {
    gdxBulletJNI.btBroadphaseProxy_m_aabbMin_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getM_aabbMin() {
    long cPtr = gdxBulletJNI.btBroadphaseProxy_m_aabbMin_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setM_aabbMax(btVector3 value) {
    gdxBulletJNI.btBroadphaseProxy_m_aabbMax_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getM_aabbMax() {
    long cPtr = gdxBulletJNI.btBroadphaseProxy_m_aabbMax_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public int getUid() {
    return gdxBulletJNI.btBroadphaseProxy_getUid(swigCPtr, this);
  }

  public btBroadphaseProxy() {
    this(gdxBulletJNI.new_btBroadphaseProxy__SWIG_0(), true);
  }

  public btBroadphaseProxy(Vector3 aabbMin, Vector3 aabbMax, SWIGTYPE_p_void userPtr, short collisionFilterGroup, short collisionFilterMask, SWIGTYPE_p_void multiSapParentProxy) {
    this(gdxBulletJNI.new_btBroadphaseProxy__SWIG_1(aabbMin, aabbMax, SWIGTYPE_p_void.getCPtr(userPtr), collisionFilterGroup, collisionFilterMask, SWIGTYPE_p_void.getCPtr(multiSapParentProxy)), true);
  }

  public btBroadphaseProxy(Vector3 aabbMin, Vector3 aabbMax, SWIGTYPE_p_void userPtr, short collisionFilterGroup, short collisionFilterMask) {
    this(gdxBulletJNI.new_btBroadphaseProxy__SWIG_2(aabbMin, aabbMax, SWIGTYPE_p_void.getCPtr(userPtr), collisionFilterGroup, collisionFilterMask), true);
  }

  public static boolean isPolyhedral(int proxyType) {
    return gdxBulletJNI.btBroadphaseProxy_isPolyhedral(proxyType);
  }

  public static boolean isConvex(int proxyType) {
    return gdxBulletJNI.btBroadphaseProxy_isConvex(proxyType);
  }

  public static boolean isNonMoving(int proxyType) {
    return gdxBulletJNI.btBroadphaseProxy_isNonMoving(proxyType);
  }

  public static boolean isConcave(int proxyType) {
    return gdxBulletJNI.btBroadphaseProxy_isConcave(proxyType);
  }

  public static boolean isCompound(int proxyType) {
    return gdxBulletJNI.btBroadphaseProxy_isCompound(proxyType);
  }

  public static boolean isSoftBody(int proxyType) {
    return gdxBulletJNI.btBroadphaseProxy_isSoftBody(proxyType);
  }

  public static boolean isInfinite(int proxyType) {
    return gdxBulletJNI.btBroadphaseProxy_isInfinite(proxyType);
  }

  public static boolean isConvex2d(int proxyType) {
    return gdxBulletJNI.btBroadphaseProxy_isConvex2d(proxyType);
  }

  public final static class CollisionFilterGroups {
    public final static int DefaultFilter = 1;
    public final static int StaticFilter = 2;
    public final static int KinematicFilter = 4;
    public final static int DebrisFilter = 8;
    public final static int SensorTrigger = 16;
    public final static int CharacterFilter = 32;
    public final static int AllFilter = -1;
  }

}
