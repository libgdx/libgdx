/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btDbvtAabbMm {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected btDbvtAabbMm(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(btDbvtAabbMm obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_btDbvtAabbMm(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Vector3 Center() {
	return gdxBulletJNI.btDbvtAabbMm_Center(swigCPtr, this);
}

  public Vector3 Lengths() {
	return gdxBulletJNI.btDbvtAabbMm_Lengths(swigCPtr, this);
}

  public Vector3 Extents() {
	return gdxBulletJNI.btDbvtAabbMm_Extents(swigCPtr, this);
}

  public Vector3 Mins() {
	return gdxBulletJNI.btDbvtAabbMm_Mins(swigCPtr, this);
}

  public Vector3 Maxs() {
	return gdxBulletJNI.btDbvtAabbMm_Maxs(swigCPtr, this);
}

  public static btDbvtAabbMm FromCE(Vector3 c, Vector3 e) {
    return new btDbvtAabbMm(gdxBulletJNI.btDbvtAabbMm_FromCE(c, e), true);
  }

  public static btDbvtAabbMm FromCR(Vector3 c, float r) {
    return new btDbvtAabbMm(gdxBulletJNI.btDbvtAabbMm_FromCR(c, r), true);
  }

  public static btDbvtAabbMm FromMM(Vector3 mi, Vector3 mx) {
    return new btDbvtAabbMm(gdxBulletJNI.btDbvtAabbMm_FromMM(mi, mx), true);
  }

  public static btDbvtAabbMm FromPoints(btVector3 pts, int n) {
    return new btDbvtAabbMm(gdxBulletJNI.btDbvtAabbMm_FromPoints__SWIG_0(btVector3.getCPtr(pts), pts, n), true);
  }

  public static btDbvtAabbMm FromPoints(SWIGTYPE_p_p_btVector3 ppts, int n) {
    return new btDbvtAabbMm(gdxBulletJNI.btDbvtAabbMm_FromPoints__SWIG_1(SWIGTYPE_p_p_btVector3.getCPtr(ppts), n), true);
  }

  public void Expand(Vector3 e) {
    gdxBulletJNI.btDbvtAabbMm_Expand(swigCPtr, this, e);
  }

  public void SignedExpand(Vector3 e) {
    gdxBulletJNI.btDbvtAabbMm_SignedExpand(swigCPtr, this, e);
  }

  public boolean Contain(btDbvtAabbMm a) {
    return gdxBulletJNI.btDbvtAabbMm_Contain(swigCPtr, this, btDbvtAabbMm.getCPtr(a), a);
  }

  public int Classify(Vector3 n, float o, int s) {
    return gdxBulletJNI.btDbvtAabbMm_Classify(swigCPtr, this, n, o, s);
  }

  public float ProjectMinimum(Vector3 v, long signs) {
    return gdxBulletJNI.btDbvtAabbMm_ProjectMinimum(swigCPtr, this, v, signs);
  }

  public Vector3 tMins() {
	return gdxBulletJNI.btDbvtAabbMm_tMins(swigCPtr, this);
}

  public Vector3 tMaxs() {
	return gdxBulletJNI.btDbvtAabbMm_tMaxs(swigCPtr, this);
}

  public btDbvtAabbMm() {
    this(gdxBulletJNI.new_btDbvtAabbMm(), true);
  }

}
