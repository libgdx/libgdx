/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btQuantizedBvhFloatData {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected btQuantizedBvhFloatData(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(btQuantizedBvhFloatData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_btQuantizedBvhFloatData(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setM_bvhAabbMin(btVector3FloatData value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_bvhAabbMin_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);
  }

  public btVector3FloatData getM_bvhAabbMin() {
    long cPtr = gdxBulletJNI.btQuantizedBvhFloatData_m_bvhAabbMin_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);
  }

  public void setM_bvhAabbMax(btVector3FloatData value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_bvhAabbMax_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);
  }

  public btVector3FloatData getM_bvhAabbMax() {
    long cPtr = gdxBulletJNI.btQuantizedBvhFloatData_m_bvhAabbMax_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);
  }

  public void setM_bvhQuantization(btVector3FloatData value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_bvhQuantization_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);
  }

  public btVector3FloatData getM_bvhQuantization() {
    long cPtr = gdxBulletJNI.btQuantizedBvhFloatData_m_bvhQuantization_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);
  }

  public void setM_curNodeIndex(int value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_curNodeIndex_set(swigCPtr, this, value);
  }

  public int getM_curNodeIndex() {
    return gdxBulletJNI.btQuantizedBvhFloatData_m_curNodeIndex_get(swigCPtr, this);
  }

  public void setM_useQuantization(int value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_useQuantization_set(swigCPtr, this, value);
  }

  public int getM_useQuantization() {
    return gdxBulletJNI.btQuantizedBvhFloatData_m_useQuantization_get(swigCPtr, this);
  }

  public void setM_numContiguousLeafNodes(int value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_numContiguousLeafNodes_set(swigCPtr, this, value);
  }

  public int getM_numContiguousLeafNodes() {
    return gdxBulletJNI.btQuantizedBvhFloatData_m_numContiguousLeafNodes_get(swigCPtr, this);
  }

  public void setM_numQuantizedContiguousNodes(int value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_set(swigCPtr, this, value);
  }

  public int getM_numQuantizedContiguousNodes() {
    return gdxBulletJNI.btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_get(swigCPtr, this);
  }

  public void setM_contiguousNodesPtr(btOptimizedBvhNodeFloatData value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_contiguousNodesPtr_set(swigCPtr, this, btOptimizedBvhNodeFloatData.getCPtr(value), value);
  }

  public btOptimizedBvhNodeFloatData getM_contiguousNodesPtr() {
    long cPtr = gdxBulletJNI.btQuantizedBvhFloatData_m_contiguousNodesPtr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btOptimizedBvhNodeFloatData(cPtr, false);
  }

  public void setM_quantizedContiguousNodesPtr(btQuantizedBvhNodeData value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_set(swigCPtr, this, btQuantizedBvhNodeData.getCPtr(value), value);
  }

  public btQuantizedBvhNodeData getM_quantizedContiguousNodesPtr() {
    long cPtr = gdxBulletJNI.btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btQuantizedBvhNodeData(cPtr, false);
  }

  public void setM_subTreeInfoPtr(btBvhSubtreeInfoData value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_subTreeInfoPtr_set(swigCPtr, this, btBvhSubtreeInfoData.getCPtr(value), value);
  }

  public btBvhSubtreeInfoData getM_subTreeInfoPtr() {
    long cPtr = gdxBulletJNI.btQuantizedBvhFloatData_m_subTreeInfoPtr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btBvhSubtreeInfoData(cPtr, false);
  }

  public void setM_traversalMode(int value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_traversalMode_set(swigCPtr, this, value);
  }

  public int getM_traversalMode() {
    return gdxBulletJNI.btQuantizedBvhFloatData_m_traversalMode_get(swigCPtr, this);
  }

  public void setM_numSubtreeHeaders(int value) {
    gdxBulletJNI.btQuantizedBvhFloatData_m_numSubtreeHeaders_set(swigCPtr, this, value);
  }

  public int getM_numSubtreeHeaders() {
    return gdxBulletJNI.btQuantizedBvhFloatData_m_numSubtreeHeaders_get(swigCPtr, this);
  }

  public btQuantizedBvhFloatData() {
    this(gdxBulletJNI.new_btQuantizedBvhFloatData(), true);
  }

}
