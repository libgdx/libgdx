/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btQuantizedBvhDoubleData extends BulletBase {
	private long swigCPtr;
	
	protected btQuantizedBvhDoubleData(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, cPtr, cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	protected btQuantizedBvhDoubleData(long cPtr, boolean cMemoryOwn) {
		this("btQuantizedBvhDoubleData", cPtr, cMemoryOwn);
		construct();
	}
	
	public static long getCPtr(btQuantizedBvhDoubleData obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				gdxBulletJNI.delete_btQuantizedBvhDoubleData(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

  public void setBvhAabbMin(btVector3DoubleData value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_bvhAabbMin_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);
  }

  public btVector3DoubleData getBvhAabbMin() {
    long cPtr = gdxBulletJNI.btQuantizedBvhDoubleData_bvhAabbMin_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);
  }

  public void setBvhAabbMax(btVector3DoubleData value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_bvhAabbMax_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);
  }

  public btVector3DoubleData getBvhAabbMax() {
    long cPtr = gdxBulletJNI.btQuantizedBvhDoubleData_bvhAabbMax_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);
  }

  public void setBvhQuantization(btVector3DoubleData value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_bvhQuantization_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);
  }

  public btVector3DoubleData getBvhQuantization() {
    long cPtr = gdxBulletJNI.btQuantizedBvhDoubleData_bvhQuantization_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);
  }

  public void setCurNodeIndex(int value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_curNodeIndex_set(swigCPtr, this, value);
  }

  public int getCurNodeIndex() {
    return gdxBulletJNI.btQuantizedBvhDoubleData_curNodeIndex_get(swigCPtr, this);
  }

  public void setUseQuantization(int value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_useQuantization_set(swigCPtr, this, value);
  }

  public int getUseQuantization() {
    return gdxBulletJNI.btQuantizedBvhDoubleData_useQuantization_get(swigCPtr, this);
  }

  public void setNumContiguousLeafNodes(int value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_numContiguousLeafNodes_set(swigCPtr, this, value);
  }

  public int getNumContiguousLeafNodes() {
    return gdxBulletJNI.btQuantizedBvhDoubleData_numContiguousLeafNodes_get(swigCPtr, this);
  }

  public void setNumQuantizedContiguousNodes(int value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_numQuantizedContiguousNodes_set(swigCPtr, this, value);
  }

  public int getNumQuantizedContiguousNodes() {
    return gdxBulletJNI.btQuantizedBvhDoubleData_numQuantizedContiguousNodes_get(swigCPtr, this);
  }

  public void setContiguousNodesPtr(btOptimizedBvhNodeDoubleData value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_contiguousNodesPtr_set(swigCPtr, this, btOptimizedBvhNodeDoubleData.getCPtr(value), value);
  }

  public btOptimizedBvhNodeDoubleData getContiguousNodesPtr() {
    long cPtr = gdxBulletJNI.btQuantizedBvhDoubleData_contiguousNodesPtr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btOptimizedBvhNodeDoubleData(cPtr, false);
  }

  public void setQuantizedContiguousNodesPtr(btQuantizedBvhNodeData value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_set(swigCPtr, this, btQuantizedBvhNodeData.getCPtr(value), value);
  }

  public btQuantizedBvhNodeData getQuantizedContiguousNodesPtr() {
    long cPtr = gdxBulletJNI.btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btQuantizedBvhNodeData(cPtr, false);
  }

  public void setTraversalMode(int value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_traversalMode_set(swigCPtr, this, value);
  }

  public int getTraversalMode() {
    return gdxBulletJNI.btQuantizedBvhDoubleData_traversalMode_get(swigCPtr, this);
  }

  public void setNumSubtreeHeaders(int value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_numSubtreeHeaders_set(swigCPtr, this, value);
  }

  public int getNumSubtreeHeaders() {
    return gdxBulletJNI.btQuantizedBvhDoubleData_numSubtreeHeaders_get(swigCPtr, this);
  }

  public void setSubTreeInfoPtr(btBvhSubtreeInfoData value) {
    gdxBulletJNI.btQuantizedBvhDoubleData_subTreeInfoPtr_set(swigCPtr, this, btBvhSubtreeInfoData.getCPtr(value), value);
  }

  public btBvhSubtreeInfoData getSubTreeInfoPtr() {
    long cPtr = gdxBulletJNI.btQuantizedBvhDoubleData_subTreeInfoPtr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btBvhSubtreeInfoData(cPtr, false);
  }

  public btQuantizedBvhDoubleData() {
    this(gdxBulletJNI.new_btQuantizedBvhDoubleData(), true);
  }

}
