/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btWheelInfo extends BulletBase {
	private long swigCPtr;
	
	protected btWheelInfo(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, cPtr, cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	protected btWheelInfo(long cPtr, boolean cMemoryOwn) {
		this("btWheelInfo", cPtr, cMemoryOwn);
		construct();
	}
	
	@Override
	protected void reset(long cPtr, boolean cMemoryOwn) {
		if (!destroyed)
			destroy();
		super.reset(swigCPtr = cPtr, cMemoryOwn);
	}
	
	public static long getCPtr(btWheelInfo obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				gdxBulletJNI.delete_btWheelInfo(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

  public void setRaycastInfo(SWIGTYPE_p_btWheelInfo__RaycastInfo value) {
    gdxBulletJNI.btWheelInfo_raycastInfo_set(swigCPtr, this, SWIGTYPE_p_btWheelInfo__RaycastInfo.getCPtr(value));
  }

  public SWIGTYPE_p_btWheelInfo__RaycastInfo getRaycastInfo() {
    long cPtr = gdxBulletJNI.btWheelInfo_raycastInfo_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_btWheelInfo__RaycastInfo(cPtr, false);
  }

  public void setWorldTransform(btTransform value) {
    gdxBulletJNI.btWheelInfo_worldTransform_set(swigCPtr, this, btTransform.getCPtr(value), value);
  }

  public btTransform getWorldTransform() {
    long cPtr = gdxBulletJNI.btWheelInfo_worldTransform_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btTransform(cPtr, false);
  }

  public void setChassisConnectionPointCS(btVector3 value) {
    gdxBulletJNI.btWheelInfo_chassisConnectionPointCS_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getChassisConnectionPointCS() {
    long cPtr = gdxBulletJNI.btWheelInfo_chassisConnectionPointCS_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setWheelDirectionCS(btVector3 value) {
    gdxBulletJNI.btWheelInfo_wheelDirectionCS_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getWheelDirectionCS() {
    long cPtr = gdxBulletJNI.btWheelInfo_wheelDirectionCS_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setWheelAxleCS(btVector3 value) {
    gdxBulletJNI.btWheelInfo_wheelAxleCS_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getWheelAxleCS() {
    long cPtr = gdxBulletJNI.btWheelInfo_wheelAxleCS_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setSuspensionRestLength1(float value) {
    gdxBulletJNI.btWheelInfo_suspensionRestLength1_set(swigCPtr, this, value);
  }

  public float getSuspensionRestLength1() {
    return gdxBulletJNI.btWheelInfo_suspensionRestLength1_get(swigCPtr, this);
  }

  public void setMaxSuspensionTravelCm(float value) {
    gdxBulletJNI.btWheelInfo_maxSuspensionTravelCm_set(swigCPtr, this, value);
  }

  public float getMaxSuspensionTravelCm() {
    return gdxBulletJNI.btWheelInfo_maxSuspensionTravelCm_get(swigCPtr, this);
  }

  public float getSuspensionRestLength() {
    return gdxBulletJNI.btWheelInfo_getSuspensionRestLength(swigCPtr, this);
  }

  public void setWheelsRadius(float value) {
    gdxBulletJNI.btWheelInfo_wheelsRadius_set(swigCPtr, this, value);
  }

  public float getWheelsRadius() {
    return gdxBulletJNI.btWheelInfo_wheelsRadius_get(swigCPtr, this);
  }

  public void setSuspensionStiffness(float value) {
    gdxBulletJNI.btWheelInfo_suspensionStiffness_set(swigCPtr, this, value);
  }

  public float getSuspensionStiffness() {
    return gdxBulletJNI.btWheelInfo_suspensionStiffness_get(swigCPtr, this);
  }

  public void setWheelsDampingCompression(float value) {
    gdxBulletJNI.btWheelInfo_wheelsDampingCompression_set(swigCPtr, this, value);
  }

  public float getWheelsDampingCompression() {
    return gdxBulletJNI.btWheelInfo_wheelsDampingCompression_get(swigCPtr, this);
  }

  public void setWheelsDampingRelaxation(float value) {
    gdxBulletJNI.btWheelInfo_wheelsDampingRelaxation_set(swigCPtr, this, value);
  }

  public float getWheelsDampingRelaxation() {
    return gdxBulletJNI.btWheelInfo_wheelsDampingRelaxation_get(swigCPtr, this);
  }

  public void setFrictionSlip(float value) {
    gdxBulletJNI.btWheelInfo_frictionSlip_set(swigCPtr, this, value);
  }

  public float getFrictionSlip() {
    return gdxBulletJNI.btWheelInfo_frictionSlip_get(swigCPtr, this);
  }

  public void setSteering(float value) {
    gdxBulletJNI.btWheelInfo_steering_set(swigCPtr, this, value);
  }

  public float getSteering() {
    return gdxBulletJNI.btWheelInfo_steering_get(swigCPtr, this);
  }

  public void setRotation(float value) {
    gdxBulletJNI.btWheelInfo_rotation_set(swigCPtr, this, value);
  }

  public float getRotation() {
    return gdxBulletJNI.btWheelInfo_rotation_get(swigCPtr, this);
  }

  public void setDeltaRotation(float value) {
    gdxBulletJNI.btWheelInfo_deltaRotation_set(swigCPtr, this, value);
  }

  public float getDeltaRotation() {
    return gdxBulletJNI.btWheelInfo_deltaRotation_get(swigCPtr, this);
  }

  public void setRollInfluence(float value) {
    gdxBulletJNI.btWheelInfo_rollInfluence_set(swigCPtr, this, value);
  }

  public float getRollInfluence() {
    return gdxBulletJNI.btWheelInfo_rollInfluence_get(swigCPtr, this);
  }

  public void setMaxSuspensionForce(float value) {
    gdxBulletJNI.btWheelInfo_maxSuspensionForce_set(swigCPtr, this, value);
  }

  public float getMaxSuspensionForce() {
    return gdxBulletJNI.btWheelInfo_maxSuspensionForce_get(swigCPtr, this);
  }

  public void setEngineForce(float value) {
    gdxBulletJNI.btWheelInfo_engineForce_set(swigCPtr, this, value);
  }

  public float getEngineForce() {
    return gdxBulletJNI.btWheelInfo_engineForce_get(swigCPtr, this);
  }

  public void setBrake(float value) {
    gdxBulletJNI.btWheelInfo_brake_set(swigCPtr, this, value);
  }

  public float getBrake() {
    return gdxBulletJNI.btWheelInfo_brake_get(swigCPtr, this);
  }

  public void setBIsFrontWheel(boolean value) {
    gdxBulletJNI.btWheelInfo_bIsFrontWheel_set(swigCPtr, this, value);
  }

  public boolean getBIsFrontWheel() {
    return gdxBulletJNI.btWheelInfo_bIsFrontWheel_get(swigCPtr, this);
  }

  public void setClientInfo(SWIGTYPE_p_void value) {
    gdxBulletJNI.btWheelInfo_clientInfo_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getClientInfo() {
    long cPtr = gdxBulletJNI.btWheelInfo_clientInfo_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public btWheelInfo() {
    this(gdxBulletJNI.new_btWheelInfo__SWIG_0(), true);
  }

  public btWheelInfo(btWheelInfoConstructionInfo ci) {
    this(gdxBulletJNI.new_btWheelInfo__SWIG_1(btWheelInfoConstructionInfo.getCPtr(ci), ci), true);
  }

  public void updateWheel(btRigidBody chassis, SWIGTYPE_p_btWheelInfo__RaycastInfo raycastInfo) {
    gdxBulletJNI.btWheelInfo_updateWheel(swigCPtr, this, btRigidBody.getCPtr(chassis), chassis, SWIGTYPE_p_btWheelInfo__RaycastInfo.getCPtr(raycastInfo));
  }

  public void setClippedInvContactDotSuspension(float value) {
    gdxBulletJNI.btWheelInfo_clippedInvContactDotSuspension_set(swigCPtr, this, value);
  }

  public float getClippedInvContactDotSuspension() {
    return gdxBulletJNI.btWheelInfo_clippedInvContactDotSuspension_get(swigCPtr, this);
  }

  public void setSuspensionRelativeVelocity(float value) {
    gdxBulletJNI.btWheelInfo_suspensionRelativeVelocity_set(swigCPtr, this, value);
  }

  public float getSuspensionRelativeVelocity() {
    return gdxBulletJNI.btWheelInfo_suspensionRelativeVelocity_get(swigCPtr, this);
  }

  public void setWheelsSuspensionForce(float value) {
    gdxBulletJNI.btWheelInfo_wheelsSuspensionForce_set(swigCPtr, this, value);
  }

  public float getWheelsSuspensionForce() {
    return gdxBulletJNI.btWheelInfo_wheelsSuspensionForce_get(swigCPtr, this);
  }

  public void setSkidInfo(float value) {
    gdxBulletJNI.btWheelInfo_skidInfo_set(swigCPtr, this, value);
  }

  public float getSkidInfo() {
    return gdxBulletJNI.btWheelInfo_skidInfo_get(swigCPtr, this);
  }

}
