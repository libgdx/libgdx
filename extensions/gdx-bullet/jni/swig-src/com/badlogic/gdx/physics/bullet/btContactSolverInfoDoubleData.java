/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btContactSolverInfoDoubleData {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected btContactSolverInfoDoubleData(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(btContactSolverInfoDoubleData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_btContactSolverInfoDoubleData(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setM_tau(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_tau_set(swigCPtr, this, value);
  }

  public double getM_tau() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_tau_get(swigCPtr, this);
  }

  public void setM_damping(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_damping_set(swigCPtr, this, value);
  }

  public double getM_damping() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_damping_get(swigCPtr, this);
  }

  public void setM_friction(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_friction_set(swigCPtr, this, value);
  }

  public double getM_friction() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_friction_get(swigCPtr, this);
  }

  public void setM_timeStep(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_timeStep_set(swigCPtr, this, value);
  }

  public double getM_timeStep() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_timeStep_get(swigCPtr, this);
  }

  public void setM_restitution(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_restitution_set(swigCPtr, this, value);
  }

  public double getM_restitution() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_restitution_get(swigCPtr, this);
  }

  public void setM_maxErrorReduction(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_maxErrorReduction_set(swigCPtr, this, value);
  }

  public double getM_maxErrorReduction() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_maxErrorReduction_get(swigCPtr, this);
  }

  public void setM_sor(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_sor_set(swigCPtr, this, value);
  }

  public double getM_sor() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_sor_get(swigCPtr, this);
  }

  public void setM_erp(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_erp_set(swigCPtr, this, value);
  }

  public double getM_erp() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_erp_get(swigCPtr, this);
  }

  public void setM_erp2(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_erp2_set(swigCPtr, this, value);
  }

  public double getM_erp2() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_erp2_get(swigCPtr, this);
  }

  public void setM_globalCfm(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_globalCfm_set(swigCPtr, this, value);
  }

  public double getM_globalCfm() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_globalCfm_get(swigCPtr, this);
  }

  public void setM_splitImpulsePenetrationThreshold(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_set(swigCPtr, this, value);
  }

  public double getM_splitImpulsePenetrationThreshold() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_get(swigCPtr, this);
  }

  public void setM_splitImpulseTurnErp(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_splitImpulseTurnErp_set(swigCPtr, this, value);
  }

  public double getM_splitImpulseTurnErp() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_splitImpulseTurnErp_get(swigCPtr, this);
  }

  public void setM_linearSlop(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_linearSlop_set(swigCPtr, this, value);
  }

  public double getM_linearSlop() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_linearSlop_get(swigCPtr, this);
  }

  public void setM_warmstartingFactor(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_warmstartingFactor_set(swigCPtr, this, value);
  }

  public double getM_warmstartingFactor() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_warmstartingFactor_get(swigCPtr, this);
  }

  public void setM_maxGyroscopicForce(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_maxGyroscopicForce_set(swigCPtr, this, value);
  }

  public double getM_maxGyroscopicForce() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_maxGyroscopicForce_get(swigCPtr, this);
  }

  public void setM_singleAxisRollingFrictionThreshold(double value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_set(swigCPtr, this, value);
  }

  public double getM_singleAxisRollingFrictionThreshold() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_get(swigCPtr, this);
  }

  public void setM_numIterations(int value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_numIterations_set(swigCPtr, this, value);
  }

  public int getM_numIterations() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_numIterations_get(swigCPtr, this);
  }

  public void setM_solverMode(int value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_solverMode_set(swigCPtr, this, value);
  }

  public int getM_solverMode() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_solverMode_get(swigCPtr, this);
  }

  public void setM_restingContactRestitutionThreshold(int value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_set(swigCPtr, this, value);
  }

  public int getM_restingContactRestitutionThreshold() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_get(swigCPtr, this);
  }

  public void setM_minimumSolverBatchSize(int value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_minimumSolverBatchSize_set(swigCPtr, this, value);
  }

  public int getM_minimumSolverBatchSize() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_minimumSolverBatchSize_get(swigCPtr, this);
  }

  public void setM_splitImpulse(int value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_splitImpulse_set(swigCPtr, this, value);
  }

  public int getM_splitImpulse() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_splitImpulse_get(swigCPtr, this);
  }

  public void setM_padding(String value) {
    gdxBulletJNI.btContactSolverInfoDoubleData_m_padding_set(swigCPtr, this, value);
  }

  public String getM_padding() {
    return gdxBulletJNI.btContactSolverInfoDoubleData_m_padding_get(swigCPtr, this);
  }

  public btContactSolverInfoDoubleData() {
    this(gdxBulletJNI.new_btContactSolverInfoDoubleData(), true);
  }

}
