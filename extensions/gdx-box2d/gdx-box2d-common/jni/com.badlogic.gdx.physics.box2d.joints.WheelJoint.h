/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_badlogic_gdx_physics_box2d_joints_WheelJoint */

#ifndef _Included_com_badlogic_gdx_physics_box2d_joints_WheelJoint
#define _Included_com_badlogic_gdx_physics_box2d_joints_WheelJoint
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetLocalAnchorA
 * Signature: (J[F)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetLocalAnchorA
  (JNIEnv *, jobject, jlong, jfloatArray);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetLocalAnchorB
 * Signature: (J[F)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetLocalAnchorB
  (JNIEnv *, jobject, jlong, jfloatArray);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetLocalAxisA
 * Signature: (J[F)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetLocalAxisA
  (JNIEnv *, jobject, jlong, jfloatArray);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetJointTranslation
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetJointTranslation
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetJointSpeed
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetJointSpeed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniIsMotorEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniIsMotorEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniEnableMotor
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniEnableMotor
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniSetMotorSpeed
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniSetMotorSpeed
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetMotorSpeed
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetMotorSpeed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniSetMaxMotorTorque
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniSetMaxMotorTorque
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetMaxMotorTorque
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetMaxMotorTorque
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetMotorTorque
 * Signature: (JF)F
 */
JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetMotorTorque
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniSetSpringFrequencyHz
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniSetSpringFrequencyHz
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetSpringFrequencyHz
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetSpringFrequencyHz
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniSetSpringDampingRatio
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniSetSpringDampingRatio
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_badlogic_gdx_physics_box2d_joints_WheelJoint
 * Method:    jniGetSpringDampingRatio
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_joints_WheelJoint_jniGetSpringDampingRatio
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
