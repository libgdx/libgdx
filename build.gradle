/*******************************************************************************
 * Copyright 2011 See AUTHORS file.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

apply from: "gradle/dependencies.gradle"

buildscript {
    apply from: "gradle/dependencies.gradle"

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:${versions.spotless}"
        classpath "com.badlogicgames.gdx:gdx-jnigen-gradle:2.2.0"
    }
}

allprojects {
    group = 'com.badlogicgames.gdx'
    version = '1.10.0-SNAPSHOT'

    buildscript {
        repositories {
            google()
            mavenLocal()
            mavenCentral()
            gradlePluginPortal()
            maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
            maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        }
    }

    repositories {
        google()
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

configure(subprojects - project(":tests:gdx-tests-android")) {
    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: "com.diffplug.spotless"

    compileJava {
        options.fork = true
        options.incremental = true
    }

    spotless {
        lineEndings 'UNIX'

        java {
            removeUnusedImports()
            eclipse().configFile new File(rootProject.projectDir.absolutePath, 'eclipse-formatter.xml')
        }
        groovyGradle {
            target '*.gradle'
            greclipse().configFile new File(rootProject.projectDir.absolutePath, 'eclipse-formatter.xml')
        }
    }
}

ant.importBuild("fetch.xml") { antTargetName ->
    "ant-task-" + antTargetName
}
task fetchNatives(dependsOn: "ant-task-all"){
    doLast {
    }
}

